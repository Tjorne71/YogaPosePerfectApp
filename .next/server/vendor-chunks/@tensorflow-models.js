"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tensorflow-models";
exports.ids = ["vendor-chunks/@tensorflow-models"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tensorflow-models/pose-detection/dist/pose-detection.esm.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow-models/pose-detection/dist/pose-detection.esm.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupportedModels: () => (/* binding */ se),\n/* harmony export */   TrackerType: () => (/* binding */ ae),\n/* harmony export */   calculators: () => (/* binding */ gn),\n/* harmony export */   createDetector: () => (/* binding */ mn),\n/* harmony export */   movenet: () => (/* binding */ yn),\n/* harmony export */   util: () => (/* binding */ pe)\n/* harmony export */ });\n/* harmony import */ var _mediapipe_pose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mediapipe/pose */ \"(ssr)/./node_modules/@mediapipe/pose/pose.js\");\n/* harmony import */ var _mediapipe_pose__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_mediapipe_pose__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"(ssr)/./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-converter */ \"(ssr)/./node_modules/@tensorflow/tfjs-converter/dist/index.js\");\n/* harmony import */ var _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-backend-webgpu */ \"(ssr)/./node_modules/@tensorflow/tfjs-backend-webgpu/dist/index.js\");\n/**\n    * @license\n    * Copyright 2023 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */ \n\n\n\nvar L = function(t, e) {\n    return (L = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(t, e) {\n        t.__proto__ = e;\n    } || function(t, e) {\n        for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n    })(t, e);\n};\nfunction V(t, e) {\n    if (\"function\" != typeof e && null !== e) throw new TypeError(\"Class extends value \" + String(e) + \" is not a constructor or null\");\n    function n() {\n        this.constructor = t;\n    }\n    L(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n);\n}\nvar B = function() {\n    return (B = Object.assign || function(t) {\n        for(var e, n = 1, i = arguments.length; n < i; n++)for(var r in e = arguments[n])Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n        return t;\n    }).apply(this, arguments);\n};\nfunction N(t, e, n, i) {\n    return new (n || (n = Promise))(function(r, o) {\n        function a(t) {\n            try {\n                u(i.next(t));\n            } catch (t) {\n                o(t);\n            }\n        }\n        function s(t) {\n            try {\n                u(i.throw(t));\n            } catch (t) {\n                o(t);\n            }\n        }\n        function u(t) {\n            var e;\n            t.done ? r(t.value) : (e = t.value, e instanceof n ? e : new n(function(t) {\n                t(e);\n            })).then(a, s);\n        }\n        u((i = i.apply(t, e || [])).next());\n    });\n}\nfunction D(t, e) {\n    var n, i, r, o, a = {\n        label: 0,\n        sent: function() {\n            if (1 & r[0]) throw r[1];\n            return r[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return o = {\n        next: s(0),\n        throw: s(1),\n        return: s(2)\n    }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function() {\n        return this;\n    }), o;\n    function s(o) {\n        return function(s) {\n            return function(o) {\n                if (n) throw new TypeError(\"Generator is already executing.\");\n                for(; a;)try {\n                    if (n = 1, i && (r = 2 & o[0] ? i.return : o[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, o[1])).done) return r;\n                    switch(i = 0, r && (o = [\n                        2 & o[0],\n                        r.value\n                    ]), o[0]){\n                        case 0:\n                        case 1:\n                            r = o;\n                            break;\n                        case 4:\n                            return a.label++, {\n                                value: o[1],\n                                done: !1\n                            };\n                        case 5:\n                            a.label++, i = o[1], o = [\n                                0\n                            ];\n                            continue;\n                        case 7:\n                            o = a.ops.pop(), a.trys.pop();\n                            continue;\n                        default:\n                            if (!(r = a.trys, (r = r.length > 0 && r[r.length - 1]) || 6 !== o[0] && 2 !== o[0])) {\n                                a = 0;\n                                continue;\n                            }\n                            if (3 === o[0] && (!r || o[1] > r[0] && o[1] < r[3])) {\n                                a.label = o[1];\n                                break;\n                            }\n                            if (6 === o[0] && a.label < r[1]) {\n                                a.label = r[1], r = o;\n                                break;\n                            }\n                            if (r && a.label < r[2]) {\n                                a.label = r[2], a.ops.push(o);\n                                break;\n                            }\n                            r[2] && a.ops.pop(), a.trys.pop();\n                            continue;\n                    }\n                    o = e.call(t, a);\n                } catch (t) {\n                    o = [\n                        6,\n                        t\n                    ], i = 0;\n                } finally{\n                    n = r = 0;\n                }\n                if (5 & o[0]) throw o[1];\n                return {\n                    value: o[0] ? o[1] : void 0,\n                    done: !0\n                };\n            }([\n                o,\n                s\n            ]);\n        };\n    }\n}\nfunction K(t, e, n) {\n    if (n || 2 === arguments.length) for(var i, r = 0, o = e.length; r < o; r++)!i && r in e || (i || (i = Array.prototype.slice.call(e, 0, r)), i[r] = e[r]);\n    return t.concat(i || Array.prototype.slice.call(e));\n}\nvar U = [\n    \"nose\",\n    \"left_eye\",\n    \"right_eye\",\n    \"left_ear\",\n    \"right_ear\",\n    \"left_shoulder\",\n    \"right_shoulder\",\n    \"left_elbow\",\n    \"right_elbow\",\n    \"left_wrist\",\n    \"right_wrist\",\n    \"left_hip\",\n    \"right_hip\",\n    \"left_knee\",\n    \"right_knee\",\n    \"left_ankle\",\n    \"right_ankle\"\n], j = [\n    \"nose\",\n    \"left_eye_inner\",\n    \"left_eye\",\n    \"left_eye_outer\",\n    \"right_eye_inner\",\n    \"right_eye\",\n    \"right_eye_outer\",\n    \"left_ear\",\n    \"right_ear\",\n    \"mouth_left\",\n    \"mouth_right\",\n    \"left_shoulder\",\n    \"right_shoulder\",\n    \"left_elbow\",\n    \"right_elbow\",\n    \"left_wrist\",\n    \"right_wrist\",\n    \"left_pinky\",\n    \"right_pinky\",\n    \"left_index\",\n    \"right_index\",\n    \"left_thumb\",\n    \"right_thumb\",\n    \"left_hip\",\n    \"right_hip\",\n    \"left_knee\",\n    \"right_knee\",\n    \"left_ankle\",\n    \"right_ankle\",\n    \"left_heel\",\n    \"right_heel\",\n    \"left_foot_index\",\n    \"right_foot_index\"\n], H = {\n    left: [\n        1,\n        2,\n        3,\n        7,\n        9,\n        11,\n        13,\n        15,\n        17,\n        19,\n        21,\n        23,\n        25,\n        27,\n        29,\n        31\n    ],\n    right: [\n        4,\n        5,\n        6,\n        8,\n        10,\n        12,\n        14,\n        16,\n        18,\n        20,\n        22,\n        24,\n        26,\n        28,\n        30,\n        32\n    ],\n    middle: [\n        0\n    ]\n}, q = {\n    left: [\n        1,\n        3,\n        5,\n        7,\n        9,\n        11,\n        13,\n        15\n    ],\n    right: [\n        2,\n        4,\n        6,\n        8,\n        10,\n        12,\n        14,\n        16\n    ],\n    middle: [\n        0\n    ]\n}, X = [\n    [\n        0,\n        1\n    ],\n    [\n        0,\n        2\n    ],\n    [\n        1,\n        3\n    ],\n    [\n        2,\n        4\n    ],\n    [\n        5,\n        6\n    ],\n    [\n        5,\n        7\n    ],\n    [\n        5,\n        11\n    ],\n    [\n        6,\n        8\n    ],\n    [\n        6,\n        12\n    ],\n    [\n        7,\n        9\n    ],\n    [\n        8,\n        10\n    ],\n    [\n        11,\n        12\n    ],\n    [\n        11,\n        13\n    ],\n    [\n        12,\n        14\n    ],\n    [\n        13,\n        15\n    ],\n    [\n        14,\n        16\n    ]\n], Y = [\n    [\n        0,\n        1\n    ],\n    [\n        0,\n        4\n    ],\n    [\n        1,\n        2\n    ],\n    [\n        2,\n        3\n    ],\n    [\n        3,\n        7\n    ],\n    [\n        4,\n        5\n    ],\n    [\n        5,\n        6\n    ],\n    [\n        6,\n        8\n    ],\n    [\n        9,\n        10\n    ],\n    [\n        11,\n        12\n    ],\n    [\n        11,\n        13\n    ],\n    [\n        11,\n        23\n    ],\n    [\n        12,\n        14\n    ],\n    [\n        14,\n        16\n    ],\n    [\n        12,\n        24\n    ],\n    [\n        13,\n        15\n    ],\n    [\n        15,\n        17\n    ],\n    [\n        16,\n        18\n    ],\n    [\n        16,\n        20\n    ],\n    [\n        15,\n        17\n    ],\n    [\n        15,\n        19\n    ],\n    [\n        15,\n        21\n    ],\n    [\n        16,\n        22\n    ],\n    [\n        17,\n        19\n    ],\n    [\n        18,\n        20\n    ],\n    [\n        23,\n        25\n    ],\n    [\n        23,\n        24\n    ],\n    [\n        24,\n        26\n    ],\n    [\n        25,\n        27\n    ],\n    [\n        26,\n        28\n    ],\n    [\n        27,\n        29\n    ],\n    [\n        28,\n        30\n    ],\n    [\n        27,\n        31\n    ],\n    [\n        28,\n        32\n    ],\n    [\n        29,\n        31\n    ],\n    [\n        30,\n        32\n    ]\n];\nfunction W(t) {\n    return t instanceof SVGAnimatedLength ? t.baseVal.value : t;\n}\nfunction G(t) {\n    return N(this, void 0, void 0, function() {\n        var i, r;\n        return D(this, function(o) {\n            switch(o.label){\n                case 0:\n                    return i = document.createElement(\"canvas\"), t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor ? [\n                        4,\n                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.browser.toPixels(t, i)\n                    ] : [\n                        3,\n                        2\n                    ];\n                case 1:\n                    return o.sent(), [\n                        3,\n                        3\n                    ];\n                case 2:\n                    i.width = W(t.width), i.height = W(t.height), r = i.getContext(\"2d\"), t instanceof ImageData ? r.putImageData(t, 0, 0) : r.drawImage(t, 0, 0), o.label = 3;\n                case 3:\n                    return [\n                        2,\n                        i\n                    ];\n            }\n        });\n    });\n}\nfunction Q(t) {\n    return N(this, void 0, void 0, function() {\n        var i, r, o, a, s, u;\n        return D(this, function(h) {\n            switch(h.label){\n                case 0:\n                    return t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor ? (i = t.shape.slice(0, 2), r = i[0], o = i[1], a = ImageData.bind, [\n                        4,\n                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.browser.toPixels(t)\n                    ]) : [\n                        3,\n                        2\n                    ];\n                case 1:\n                    return [\n                        2,\n                        new (a.apply(ImageData, [\n                            void 0,\n                            h.sent(),\n                            o,\n                            r\n                        ]))\n                    ];\n                case 2:\n                    return s = document.createElement(\"canvas\"), u = s.getContext(\"2d\"), s.width = W(t.width), s.height = W(t.height), u.drawImage(t, 0, 0), [\n                        2,\n                        u.getImageData(0, 0, s.width, s.height)\n                    ];\n            }\n        });\n    });\n}\nfunction Z(t) {\n    return N(this, void 0, void 0, function() {\n        var e, i;\n        return D(this, function(r) {\n            switch(r.label){\n                case 0:\n                    return t instanceof SVGImageElement || t instanceof OffscreenCanvas ? [\n                        4,\n                        G(t)\n                    ] : [\n                        3,\n                        2\n                    ];\n                case 1:\n                    return i = r.sent(), [\n                        3,\n                        3\n                    ];\n                case 2:\n                    i = t, r.label = 3;\n                case 3:\n                    return e = i, [\n                        2,\n                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.browser.fromPixels(e, 4)\n                    ];\n            }\n        });\n    });\n}\nfunction $(t) {\n    if (t < 0 || t >= 256) throw new Error(\"Mask value must be in range [0, 255] but got \".concat(t));\n    if (!Number.isInteger(t)) throw new Error(\"Mask value must be an integer but got \".concat(t));\n}\nvar J = {\n    runtime: \"mediapipe\",\n    enableSmoothing: !0,\n    enableSegmentation: !1,\n    smoothSegmentation: !0,\n    modelType: \"full\"\n};\nvar tt = function() {\n    function t(t) {\n        this.mask = t;\n    }\n    return t.prototype.toCanvasImageSource = function() {\n        return N(this, void 0, void 0, function() {\n            return D(this, function(t) {\n                return [\n                    2,\n                    this.mask\n                ];\n            });\n        });\n    }, t.prototype.toImageData = function() {\n        return N(this, void 0, void 0, function() {\n            return D(this, function(t) {\n                return [\n                    2,\n                    Q(this.mask)\n                ];\n            });\n        });\n    }, t.prototype.toTensor = function() {\n        return N(this, void 0, void 0, function() {\n            return D(this, function(t) {\n                return [\n                    2,\n                    Z(this.mask)\n                ];\n            });\n        });\n    }, t.prototype.getUnderlyingType = function() {\n        return \"canvasimagesource\";\n    }, t;\n}();\nfunction et(t) {\n    return $(t), \"person\";\n}\nvar nt = function() {\n    function i(e) {\n        var n, i = this;\n        switch(this.width = 0, this.height = 0, this.selfieMode = !1, this.poseSolution = new _mediapipe_pose__WEBPACK_IMPORTED_MODULE_3__.Pose({\n            locateFile: function(t, n) {\n                if (e.solutionPath) {\n                    var i = e.solutionPath.replace(/\\/+$/, \"\");\n                    return \"\".concat(i, \"/\").concat(t);\n                }\n                return \"\".concat(n, \"/\").concat(t);\n            }\n        }), e.modelType){\n            case \"lite\":\n                n = 0;\n                break;\n            case \"heavy\":\n                n = 2;\n                break;\n            case \"full\":\n            default:\n                n = 1;\n        }\n        this.poseSolution.setOptions({\n            modelComplexity: n,\n            smoothLandmarks: e.enableSmoothing,\n            enableSegmentation: e.enableSegmentation,\n            smoothSegmentation: e.smoothSegmentation,\n            selfieMode: this.selfieMode\n        }), this.poseSolution.onResults(function(t) {\n            if (i.height = t.image.height, i.width = t.image.width, null == t.poseLandmarks) i.poses = [];\n            else {\n                var e = i.translateOutput(t.poseLandmarks, t.poseWorldLandmarks);\n                t.segmentationMask && (e.segmentation = {\n                    maskValueToLabel: et,\n                    mask: new tt(t.segmentationMask)\n                }), i.poses = [\n                    e\n                ];\n            }\n        });\n    }\n    return i.prototype.translateOutput = function(t, e) {\n        var n = this, i = {\n            keypoints: t.map(function(t, e) {\n                return {\n                    x: t.x * n.width,\n                    y: t.y * n.height,\n                    z: t.z,\n                    score: t.visibility,\n                    name: j[e]\n                };\n            })\n        };\n        return null != e && (i.keypoints3D = e.map(function(t, e) {\n            return {\n                x: t.x,\n                y: t.y,\n                z: t.z,\n                score: t.visibility,\n                name: j[e]\n            };\n        })), i;\n    }, i.prototype.estimatePoses = function(t, i, r) {\n        return N(this, void 0, void 0, function() {\n            var o, a;\n            return D(this, function(s) {\n                switch(s.label){\n                    case 0:\n                        return i && i.flipHorizontal && i.flipHorizontal !== this.selfieMode && (this.selfieMode = i.flipHorizontal, this.poseSolution.setOptions({\n                            selfieMode: this.selfieMode\n                        })), t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor ? (a = ImageData.bind, [\n                            4,\n                            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.browser.toPixels(t)\n                        ]) : [\n                            3,\n                            2\n                        ];\n                    case 1:\n                        return o = new (a.apply(ImageData, [\n                            void 0,\n                            s.sent(),\n                            t.shape[1],\n                            t.shape[0]\n                        ])), [\n                            3,\n                            3\n                        ];\n                    case 2:\n                        o = t, s.label = 3;\n                    case 3:\n                        return t = o, [\n                            4,\n                            this.poseSolution.send({\n                                image: t\n                            }, r)\n                        ];\n                    case 4:\n                        return s.sent(), [\n                            2,\n                            this.poses\n                        ];\n                }\n            });\n        });\n    }, i.prototype.dispose = function() {\n        this.poseSolution.close();\n    }, i.prototype.reset = function() {\n        this.poseSolution.reset();\n    }, i.prototype.initialize = function() {\n        return this.poseSolution.initialize();\n    }, i;\n}();\nfunction it(t) {\n    return N(this, void 0, void 0, function() {\n        var e, n;\n        return D(this, function(i) {\n            switch(i.label){\n                case 0:\n                    return e = function(t) {\n                        if (null == t) return B({}, J);\n                        var e = B({}, t);\n                        return e.runtime = \"mediapipe\", null == e.enableSegmentation && (e.enableSegmentation = J.enableSegmentation), null == e.enableSmoothing && (e.enableSmoothing = J.enableSmoothing), null == e.smoothSegmentation && (e.smoothSegmentation = J.smoothSegmentation), null == e.modelType && (e.modelType = J.modelType), e;\n                    }(t), [\n                        4,\n                        (n = new nt(e)).initialize()\n                    ];\n                case 1:\n                    return i.sent(), [\n                        2,\n                        n\n                    ];\n            }\n        });\n    });\n}\nfunction rt(t) {\n    return t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor ? {\n        height: t.shape[0],\n        width: t.shape[1]\n    } : {\n        height: t.height,\n        width: t.width\n    };\n}\nfunction ot(t) {\n    return t - 2 * Math.PI * Math.floor((t + Math.PI) / (2 * Math.PI));\n}\nfunction at(t) {\n    return t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor ? t : _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.browser.fromPixels(t);\n}\nfunction st(t, e, n) {\n    return ut(n, \"inputResolution\"), [\n        1 / n.width * t[0][0] * e.width,\n        1 / n.height * t[0][1] * e.width,\n        t[0][3] * e.width,\n        1 / n.width * t[1][0] * e.height,\n        1 / n.height * t[1][1] * e.height,\n        t[1][3] * e.height,\n        0,\n        0\n    ];\n}\nfunction ut(t, e) {\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(0 !== t.width, function() {\n        return \"\".concat(e, \" width cannot be 0.\");\n    }), _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(0 !== t.height, function() {\n        return \"\".concat(e, \" height cannot be 0.\");\n    });\n}\nfunction ht(t, e, n) {\n    var i = n.rotationVectorStartKeypointIndex, r = n.rotationVectorEndKeypointIndex, o = t.locationData, a = o.relativeKeypoints[i].x * e.width, s = o.relativeKeypoints[i].y * e.height, u = o.relativeKeypoints[r].x * e.width, h = o.relativeKeypoints[r].y * e.height, l = 2 * Math.sqrt((u - a) * (u - a) + (h - s) * (h - s)), c = function(t, e, n) {\n        var i, r = t.locationData, o = n.rotationVectorStartKeypointIndex, a = n.rotationVectorEndKeypointIndex;\n        i = n.rotationVectorTargetAngle ? n.rotationVectorTargetAngle : Math.PI * n.rotationVectorTargetAngleDegree / 180;\n        var s = r.relativeKeypoints[o].x * e.width, u = r.relativeKeypoints[o].y * e.height, h = r.relativeKeypoints[a].x * e.width, l = r.relativeKeypoints[a].y * e.height;\n        return ot(i - Math.atan2(-(l - u), h - s));\n    }(t, e, n);\n    return {\n        xCenter: a / e.width,\n        yCenter: s / e.height,\n        width: l / e.width,\n        height: l / e.height,\n        rotation: c\n    };\n}\nfunction lt(t) {\n    if (16 !== t.length) throw new Error(\"Array length must be 16 but got \".concat(t.length));\n    return [\n        [\n            t[0],\n            t[1],\n            t[2],\n            t[3]\n        ],\n        [\n            t[4],\n            t[5],\n            t[6],\n            t[7]\n        ],\n        [\n            t[8],\n            t[9],\n            t[10],\n            t[11]\n        ],\n        [\n            t[12],\n            t[13],\n            t[14],\n            t[15]\n        ]\n    ];\n}\nfunction ct(t, e, n, i, r, o, a) {\n    return t[e][r] * (t[n][o] * t[i][a] - t[n][a] * t[i][o]);\n}\nfunction pt(t, e, n) {\n    var i = (e + 1) % 4, r = (e + 2) % 4, o = (e + 3) % 4, a = (n + 1) % 4, s = (n + 2) % 4, u = (n + 3) % 4;\n    return ct(t, i, r, o, a, s, u) + ct(t, r, o, i, a, s, u) + ct(t, o, i, r, a, s, u);\n}\nfunction ft(t, e, n) {\n    void 0 === n && (n = {\n        ignoreRotation: !1\n    });\n    for(var i = [], r = 0, o = t; r < o.length; r++){\n        var a = o[r], s = a.x - .5, u = a.y - .5, h = n.ignoreRotation ? 0 : e.rotation, l = Math.cos(h) * s - Math.sin(h) * u, c = Math.sin(h) * s + Math.cos(h) * u;\n        l = l * e.width + e.xCenter, c = c * e.height + e.yCenter;\n        var p = a.z * e.width, f = B({}, a);\n        f.x = l, f.y = c, f.z = p, i.push(f);\n    }\n    return i;\n}\nfunction dt(t, e) {\n    var n = function(t, e, n, i) {\n        var r = e - t, o = i - n;\n        if (0 === r) throw new Error(\"Original min and max are both \".concat(t, \", range cannot be 0.\"));\n        var a = o / r;\n        return {\n            scale: a,\n            offset: n - t * a\n        };\n    }(0, 255, e[0], e[1]);\n    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(t, n.scale), n.offset);\n    });\n}\nfunction mt(t, e, n) {\n    var i, o, a, c, p, f, d, m, g, y, v, x, w, k, b = e.outputTensorSize, M = e.keepAspectRatio, S = e.borderMode, T = e.outputTensorFloatRange, P = rt(t), F = function(t, e) {\n        return e ? {\n            xCenter: e.xCenter * t.width,\n            yCenter: e.yCenter * t.height,\n            width: e.width * t.width,\n            height: e.height * t.height,\n            rotation: e.rotation\n        } : {\n            xCenter: .5 * t.width,\n            yCenter: .5 * t.height,\n            width: t.width,\n            height: t.height,\n            rotation: 0\n        };\n    }(P, n), _ = function(t, e, n) {\n        if (void 0 === n && (n = !1), !n) return {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n        };\n        var i = e.height, r = e.width;\n        ut(e, \"targetSize\"), ut(t, \"roi\");\n        var o, a, s = i / r, u = t.height / t.width, h = 0, l = 0;\n        return s > u ? (o = t.width, a = t.width * s, l = (1 - u / s) / 2) : (o = t.height / s, a = t.height, h = (1 - s / u) / 2), t.width = o, t.height = a, {\n            top: l,\n            left: h,\n            right: h,\n            bottom: l\n        };\n    }(F, b, M), O = (i = F, o = P.width, a = P.height, c = !1, p = i.width, f = i.height, d = c ? -1 : 1, m = Math.cos(i.rotation), g = Math.sin(i.rotation), y = i.xCenter, v = i.yCenter, x = 1 / o, w = 1 / a, (k = new Array(16))[0] = p * m * d * x, k[1] = -f * g * x, k[2] = 0, k[3] = (-.5 * p * m * d + .5 * f * g + y) * x, k[4] = p * g * d * w, k[5] = f * m * w, k[6] = 0, k[7] = (-.5 * f * m - .5 * p * g * d + v) * w, k[8] = 0, k[9] = 0, k[10] = p * x, k[11] = 0, k[12] = 0, k[13] = 0, k[14] = 0, k[15] = 1, lt(k));\n    return {\n        imageTensor: (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n            var e = at(t), n = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)(st(O, P, b), [\n                1,\n                8\n            ]), i = \"zero\" === S ? \"constant\" : \"nearest\", r = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.transform((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)(e, \"float32\")), n, \"bilinear\", i, 0, [\n                b.height,\n                b.width\n            ]);\n            return null != T ? dt(r, T) : r;\n        }),\n        padding: _,\n        transformationMatrix: O\n    };\n}\nfunction gt(t, e, n, i) {\n    return 1 === i ? .5 * (t + e) : t + (e - t) * n / (i - 1);\n}\nfunction yt(t) {\n    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n        var e = function(t) {\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                return [\n                    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                        0,\n                        0,\n                        0\n                    ], [\n                        1,\n                        -1,\n                        1\n                    ]),\n                    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                        0,\n                        0,\n                        1\n                    ], [\n                        1,\n                        -1,\n                        -1\n                    ])\n                ];\n            });\n        }(t), n = e[0], i = e[1];\n        return {\n            boxes: (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(i),\n            logits: (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(n)\n        };\n    });\n}\nfunction vt(t) {\n    return null != t && null != t.currentTime;\n}\nfunction xt(t) {\n    for(var e = {\n        locationData: {\n            relativeKeypoints: []\n        }\n    }, n = Number.MAX_SAFE_INTEGER, i = Number.MIN_SAFE_INTEGER, r = Number.MAX_SAFE_INTEGER, o = Number.MIN_SAFE_INTEGER, a = 0; a < t.length; ++a){\n        var s = t[a];\n        n = Math.min(n, s.x), i = Math.max(i, s.x), r = Math.min(r, s.y), o = Math.max(o, s.y), e.locationData.relativeKeypoints.push({\n            x: s.x,\n            y: s.y\n        });\n    }\n    return e.locationData.relativeBoundingBox = {\n        xMin: n,\n        yMin: r,\n        xMax: i,\n        yMax: o,\n        width: i - n,\n        height: o - r\n    }, e;\n}\nfunction wt(t, e, n, i) {\n    return N(this, void 0, void 0, function() {\n        var i, r, o, a, h;\n        return D(this, function(l) {\n            switch(l.label){\n                case 0:\n                    return t.sort(function(t, e) {\n                        return Math.max.apply(Math, e.score) - Math.max.apply(Math, t.score);\n                    }), i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)(t.map(function(t) {\n                        return [\n                            t.locationData.relativeBoundingBox.yMin,\n                            t.locationData.relativeBoundingBox.xMin,\n                            t.locationData.relativeBoundingBox.yMax,\n                            t.locationData.relativeBoundingBox.xMax\n                        ];\n                    })), r = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(t.map(function(t) {\n                        return t.score[0];\n                    })), [\n                        4,\n                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.nonMaxSuppressionAsync(i, r, e, n)\n                    ];\n                case 1:\n                    return [\n                        4,\n                        (o = l.sent()).array()\n                    ];\n                case 2:\n                    return a = l.sent(), h = t.filter(function(t, e) {\n                        return a.indexOf(e) > -1;\n                    }), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)([\n                        i,\n                        r,\n                        o\n                    ]), [\n                        2,\n                        h\n                    ];\n            }\n        });\n    });\n}\nfunction kt(t, e) {\n    return t.map(function(t) {\n        var n = B(B({}, t), {\n            x: t.x * e.width,\n            y: t.y * e.height\n        });\n        return null != t.z && (n.z = t.z * e.width), n;\n    });\n}\nfunction bt(t, e, n) {\n    return N(this, void 0, void 0, function() {\n        var i, r, o, a, s, u, h, l, c, f, d, m, g, y, v, x, w, k, b, M, S, T, P, F;\n        return D(this, function(_) {\n            switch(_.label){\n                case 0:\n                    if (i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(e, [\n                        0\n                    ]), r = i.shape, o = r[0], a = r[1], s = r[2], t.length !== s) throw new Error(\"Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: \" + \"\".concat(t.length, \", heatmap length: \").concat(s));\n                    return u = [], [\n                        4,\n                        i.buffer()\n                    ];\n                case 1:\n                    for(h = _.sent(), l = 0; l < t.length; l++)if (c = t[l], f = B({}, c), u.push(f), d = Math.trunc(f.x * a), m = Math.trunc(f.y * o), !(d < 0 || d >= a || m < 0 || d >= o)) {\n                        for(g = Math.trunc((n.kernelSize - 1) / 2), y = Math.max(0, d - g), v = Math.min(a, d + g + 1), x = Math.max(0, m - g), w = Math.min(o, m + g + 1), k = 0, b = 0, M = 0, S = 0, T = x; T < w; ++T)for(P = y; P < v; ++P)F = h.get(T, P, l), k += F, S = Math.max(S, F), b += P * F, M += T * F;\n                        S >= n.minConfidenceToRefine && k > 0 && (f.x = b / a / k, f.y = M / o / k);\n                    }\n                    return i.dispose(), [\n                        2,\n                        u\n                    ];\n            }\n        });\n    });\n}\nfunction Mt(t, e) {\n    var n = e.left, i = e.top, r = e.left + e.right, o = e.top + e.bottom;\n    return t.map(function(t) {\n        return B(B({}, t), {\n            x: (t.x - n) / (1 - r),\n            y: (t.y - i) / (1 - o),\n            z: t.z / (1 - r)\n        });\n    });\n}\nfunction St(t, e, n) {\n    return \"webgl\" === (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.getBackend)() ? function(t, e, n) {\n        var i = n.combineWithPreviousRatio.toFixed(2), o = {\n            variableNames: [\n                \"prevMask\",\n                \"newMask\"\n            ],\n            outputShape: t.shape,\n            userCode: \"\\n  void main() {\\n      ivec2 coords = getOutputCoords();\\n      int height = coords[0];\\n      int width = coords[1];\\n\\n      float prevMaskValue = getPrevMask(height, width);\\n      float newMaskValue = getNewMask(height, width);\\n\\n      /*\\n      * Assume p := newMaskValue\\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\\n      * uncertainty alpha(p) =\\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\\n      * uncertainty]\\n      *\\n      * The following polynomial approximates uncertainty alpha as a\\n      * function of (p + 0.5):\\n      */\\n      const float c1 = 5.68842;\\n      const float c2 = -0.748699;\\n      const float c3 = -57.8051;\\n      const float c4 = 291.309;\\n      const float c5 = -624.717;\\n      float t = newMaskValue - 0.5;\\n      float x = t * t;\\n\\n      float uncertainty =\\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\\n\\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\\n                             (uncertainty * \".concat(i, \");\\n\\n      setOutput(outputValue);\\n    }\\n\")\n        }, a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend)();\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n            var n = a.compileAndRun(o, [\n                t,\n                e\n            ]);\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)().makeTensorFromDataId(n.dataId, n.shape, n.dtype);\n        });\n    }(t, e, n) : (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n        var i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(e, .5), r = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.square)(i), s = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(1, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.minimum)(1, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(r, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(5.68842, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(r, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(-.748699, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(r, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(-57.8051, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(r, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(291.309, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(r, -624.717)))))))))));\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(e, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(t, e), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(s, n.combineWithPreviousRatio)));\n    });\n}\nfunction Tt(t, e, n) {\n    return N(this, void 0, void 0, function() {\n        var i, s, u, h, l;\n        return D(this, function(d) {\n            switch(d.label){\n                case 0:\n                    return i = t[0], s = t[1], u = function(t, e, n) {\n                        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                            var i, r, s, u;\n                            n.reverseOutputOrder ? (r = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 0\n                            ], [\n                                -1,\n                                1\n                            ])), i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 1\n                            ], [\n                                -1,\n                                1\n                            ])), u = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 2\n                            ], [\n                                -1,\n                                1\n                            ])), s = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 3\n                            ], [\n                                -1,\n                                1\n                            ]))) : (i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 0\n                            ], [\n                                -1,\n                                1\n                            ])), r = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 1\n                            ], [\n                                -1,\n                                1\n                            ])), s = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 2\n                            ], [\n                                -1,\n                                1\n                            ])), u = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                0,\n                                n.boxCoordOffset + 3\n                            ], [\n                                -1,\n                                1\n                            ]))), r = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(r, n.xScale), e.w), e.x), i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(i, n.yScale), e.h), e.y), n.applyExponentialOnBoxSize ? (s = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.exp)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(s, n.hScale)), e.h), u = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.exp)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(u, n.wScale)), e.w)) : (s = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(s, n.hScale), e.h), u = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(u, n.wScale), e.h));\n                            var h = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(i, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(s, 2)), l = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(r, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(u, 2)), f = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(i, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(s, 2)), d = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(r, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(u, 2)), m = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.concat)([\n                                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(h, [\n                                    n.numBoxes,\n                                    1\n                                ]),\n                                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(l, [\n                                    n.numBoxes,\n                                    1\n                                ]),\n                                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(f, [\n                                    n.numBoxes,\n                                    1\n                                ]),\n                                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(d, [\n                                    n.numBoxes,\n                                    1\n                                ])\n                            ], 1);\n                            if (n.numKeypoints) for(var g = 0; g < n.numKeypoints; ++g){\n                                var v = n.keypointCoordOffset + g * n.numValuesPerKeypoint, x = void 0, w = void 0;\n                                n.reverseOutputOrder ? (x = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                    0,\n                                    v\n                                ], [\n                                    -1,\n                                    1\n                                ])), w = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                    0,\n                                    v + 1\n                                ], [\n                                    -1,\n                                    1\n                                ]))) : (w = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                    0,\n                                    v\n                                ], [\n                                    -1,\n                                    1\n                                ])), x = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(t, [\n                                    0,\n                                    v + 1\n                                ], [\n                                    -1,\n                                    1\n                                ])));\n                                var T = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(x, n.xScale), e.w), e.x), P = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(w, n.yScale), e.h), e.y);\n                                m = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.concat)([\n                                    m,\n                                    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(T, [\n                                        n.numBoxes,\n                                        1\n                                    ]),\n                                    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(P, [\n                                        n.numBoxes,\n                                        1\n                                    ])\n                                ], 1);\n                            }\n                            return m;\n                        });\n                    }(s, e, n), h = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                        var t = i;\n                        return n.sigmoidScore ? (null != n.scoreClippingThresh && (t = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.clipByValue)(i, -n.scoreClippingThresh, n.scoreClippingThresh)), t = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sigmoid)(t)) : t;\n                    }), [\n                        4,\n                        Pt(u, h, n)\n                    ];\n                case 1:\n                    return l = d.sent(), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)([\n                        u,\n                        h\n                    ]), [\n                        2,\n                        l\n                    ];\n            }\n        });\n    });\n}\nfunction Pt(t, e, n) {\n    return N(this, void 0, void 0, function() {\n        var i, r, o, a, s, u, h, l, c, p, f, d;\n        return D(this, function(m) {\n            switch(m.label){\n                case 0:\n                    return i = [], [\n                        4,\n                        t.data()\n                    ];\n                case 1:\n                    return r = m.sent(), [\n                        4,\n                        e.data()\n                    ];\n                case 2:\n                    for(o = m.sent(), a = 0; a < n.numBoxes; ++a)if (!(null != n.minScoreThresh && o[a] < n.minScoreThresh || (s = a * n.numCoords, u = Ft(r[s + 0], r[s + 1], r[s + 2], r[s + 3], o[a], n.flipVertically, a), (h = u.locationData.relativeBoundingBox).width < 0 || h.height < 0))) {\n                        if (n.numKeypoints > 0) for((l = u.locationData).relativeKeypoints = [], c = n.numKeypoints * n.numValuesPerKeypoint, p = 0; p < c; p += n.numValuesPerKeypoint)f = s + n.keypointCoordOffset + p, d = {\n                            x: r[f + 0],\n                            y: n.flipVertically ? 1 - r[f + 1] : r[f + 1]\n                        }, l.relativeKeypoints.push(d);\n                        i.push(u);\n                    }\n                    return [\n                        2,\n                        i\n                    ];\n            }\n        });\n    });\n}\nfunction Ft(t, e, n, i, r, o, a) {\n    return {\n        score: [\n            r\n        ],\n        ind: a,\n        locationData: {\n            relativeBoundingBox: {\n                xMin: e,\n                yMin: o ? 1 - n : t,\n                xMax: i,\n                yMax: o ? 1 - t : n,\n                width: i - e,\n                height: n - t\n            }\n        }\n    };\n}\nfunction _t(t, e) {\n    return \"none\" === t ? e : function(t) {\n        return 1 / (1 + Math.exp(-t));\n    }(e);\n}\nfunction Ot(t, e, n, i) {\n    return N(this, void 0, void 0, function() {\n        var r, o, a, s, u, h, l, c;\n        return D(this, function(p) {\n            switch(p.label){\n                case 0:\n                    return n = n || e.flipHorizontally || !1, i = i || e.flipVertically || !1, r = t.size, o = r / e.numLandmarks, [\n                        4,\n                        t.data()\n                    ];\n                case 1:\n                    for(a = p.sent(), s = [], u = 0; u < e.numLandmarks; ++u)h = u * o, (c = {\n                        x: 0,\n                        y: 0\n                    }).x = n ? e.inputImageWidth - a[h] : a[h], o > 1 && (c.y = i ? e.inputImageHeight - a[h + 1] : a[h + 1]), o > 2 && (c.z = a[h + 2]), o > 3 && (c.score = _t(e.visibilityActivation, a[h + 3])), s.push(c);\n                    for(l = 0; l < s.length; ++l)(c = s[l]).x = c.x / e.inputImageWidth, c.y = c.y / e.inputImageHeight, c.z = c.z / e.inputImageWidth / (e.normalizeZ || 1);\n                    return [\n                        2,\n                        s\n                    ];\n            }\n        });\n    });\n}\nfunction It(t, e, n) {\n    var i = t.width, r = t.height, o = t.rotation;\n    if (null == n.rotation && null == n.rotationDegree || (o = function(t, e) {\n        null != e.rotation ? t += e.rotation : null != e.rotationDegree && (t += Math.PI * e.rotationDegree / 180);\n        return ot(t);\n    }(o, n)), 0 === o) t.xCenter = t.xCenter + i * n.shiftX, t.yCenter = t.yCenter + r * n.shiftY;\n    else {\n        var a = (e.width * i * n.shiftX * Math.cos(o) - e.height * r * n.shiftY * Math.sin(o)) / e.width, s = (e.width * i * n.shiftX * Math.sin(o) + e.height * r * n.shiftY * Math.cos(o)) / e.height;\n        t.xCenter = t.xCenter + a, t.yCenter = t.yCenter + s;\n    }\n    if (n.squareLong) {\n        var u = Math.max(i * e.width, r * e.height);\n        i = u / e.width, r = u / e.height;\n    } else if (n.squareShort) {\n        var h = Math.min(i * e.width, r * e.height);\n        i = h / e.width, r = h / e.height;\n    }\n    return t.width = i * n.scaleX, t.height = r * n.scaleY, t;\n}\nfunction At(t, e) {\n    return t.map(function(t) {\n        var n = B(B({}, t), {\n            x: t.x / e.width,\n            y: t.y / e.height\n        });\n        return null != t.z && (t.z = t.z / e.width), n;\n    });\n}\nvar zt = function() {\n    function t(t) {\n        this.alpha = t, this.initialized = !1;\n    }\n    return t.prototype.apply = function(t, e) {\n        var n;\n        return this.initialized ? n = null == e ? this.storedValue + this.alpha * (t - this.storedValue) : this.storedValue + this.alpha * e * Math.asinh((t - this.storedValue) / e) : (n = t, this.initialized = !0), this.rawValue = t, this.storedValue = n, n;\n    }, t.prototype.applyWithAlpha = function(t, e, n) {\n        return this.alpha = e, this.apply(t, n);\n    }, t.prototype.hasLastRawValue = function() {\n        return this.initialized;\n    }, t.prototype.lastRawValue = function() {\n        return this.rawValue;\n    }, t.prototype.reset = function() {\n        this.initialized = !1;\n    }, t;\n}(), Ct = function() {\n    function t(t) {\n        this.frequency = t.frequency, this.minCutOff = t.minCutOff, this.beta = t.beta, this.thresholdCutOff = t.thresholdCutOff, this.thresholdBeta = t.thresholdBeta, this.derivateCutOff = t.derivateCutOff, this.x = new zt(this.getAlpha(this.minCutOff)), this.dx = new zt(this.getAlpha(this.derivateCutOff)), this.lastTimestamp = 0;\n    }\n    return t.prototype.apply = function(t, e, n) {\n        if (null == t) return t;\n        var i = Math.trunc(e);\n        if (this.lastTimestamp >= i) return t;\n        0 !== this.lastTimestamp && 0 !== i && (this.frequency = 1 / (1e-6 * (i - this.lastTimestamp))), this.lastTimestamp = i;\n        var r = this.x.hasLastRawValue() ? (t - this.x.lastRawValue()) * n * this.frequency : 0, o = this.dx.applyWithAlpha(r, this.getAlpha(this.derivateCutOff)), a = this.minCutOff + this.beta * Math.abs(o), s = null != this.thresholdCutOff ? this.thresholdCutOff + this.thresholdBeta * Math.abs(o) : null;\n        return this.x.applyWithAlpha(t, this.getAlpha(a), s);\n    }, t.prototype.getAlpha = function(t) {\n        return 1 / (1 + this.frequency / (2 * Math.PI * t));\n    }, t;\n}(), Et = function() {\n    function t(t) {\n        this.config = t;\n    }\n    return t.prototype.apply = function(t, e, n) {\n        var i = this;\n        if (null == t) return this.reset(), null;\n        this.initializeFiltersIfEmpty(t);\n        var r = 1;\n        if (!this.config.disableValueScaling) {\n            if (n < this.config.minAllowedObjectScale) return K([], t, !0);\n            r = 1 / n;\n        }\n        return t.map(function(t, n) {\n            var o = B(B({}, t), {\n                x: i.xFilters[n].apply(t.x, e, r),\n                y: i.yFilters[n].apply(t.y, e, r)\n            });\n            return null != t.z && (o.z = i.zFilters[n].apply(t.z, e, r)), o;\n        });\n    }, t.prototype.reset = function() {\n        this.xFilters = null, this.yFilters = null, this.zFilters = null;\n    }, t.prototype.initializeFiltersIfEmpty = function(t) {\n        var e = this;\n        null != this.xFilters && this.xFilters.length === t.length || (this.xFilters = t.map(function(t) {\n            return new Ct(e.config);\n        }), this.yFilters = t.map(function(t) {\n            return new Ct(e.config);\n        }), this.zFilters = t.map(function(t) {\n            return new Ct(e.config);\n        }));\n    }, t;\n}(), Rt = function() {\n    function t(t) {\n        this.config = t, this.window = [], this.lowPassFilter = new zt(1), this.lastValue = 0, this.lastValueScale = 1, this.lastTimestamp = -1;\n    }\n    return t.prototype.apply = function(t, e, n) {\n        if (null == t) return t;\n        var i, r = Math.trunc(e);\n        if (this.lastTimestamp >= r) return t;\n        if (-1 === this.lastTimestamp) i = 1;\n        else {\n            for(var o = t * n - this.lastValue * this.lastValueScale, a = r - this.lastTimestamp, s = o, u = a, h = (1 + this.window.length) * (1e6 / 30), l = 0, c = this.window; l < c.length; l++){\n                var p = c[l];\n                if (u + p.duration > h) break;\n                s += p.distance, u += p.duration;\n            }\n            var f = s / (1e-6 * u);\n            i = 1 - 1 / (1 + this.config.velocityScale * Math.abs(f)), this.window.unshift({\n                distance: o,\n                duration: a\n            }), this.window.length > this.config.windowSize && this.window.pop();\n        }\n        return this.lastValue = t, this.lastValueScale = n, this.lastTimestamp = r, this.lowPassFilter.applyWithAlpha(t, i);\n    }, t;\n}(), Lt = function() {\n    function t(t) {\n        this.config = t;\n    }\n    return t.prototype.apply = function(t, e, n) {\n        var i = this;\n        if (null == t) return this.reset(), null;\n        var r = 1;\n        if (!this.config.disableValueScaling) {\n            if (n < this.config.minAllowedObjectScale) return K([], t, !0);\n            r = 1 / n;\n        }\n        return this.initializeFiltersIfEmpty(t), t.map(function(t, n) {\n            var o = B(B({}, t), {\n                x: i.xFilters[n].apply(t.x, e, r),\n                y: i.yFilters[n].apply(t.y, e, r)\n            });\n            return null != t.z && (o.z = i.zFilters[n].apply(t.z, e, r)), o;\n        });\n    }, t.prototype.reset = function() {\n        this.xFilters = null, this.yFilters = null, this.zFilters = null;\n    }, t.prototype.initializeFiltersIfEmpty = function(t) {\n        var e = this;\n        null != this.xFilters && this.xFilters.length === t.length || (this.xFilters = t.map(function(t) {\n            return new Rt(e.config);\n        }), this.yFilters = t.map(function(t) {\n            return new Rt(e.config);\n        }), this.zFilters = t.map(function(t) {\n            return new Rt(e.config);\n        }));\n    }, t;\n}(), Vt = function() {\n    function t(t) {\n        if (null != t.velocityFilter) this.keypointsFilter = new Lt(t.velocityFilter);\n        else {\n            if (null == t.oneEuroFilter) throw new Error(\"Either configure velocityFilter or oneEuroFilter, but got \" + \"\".concat(t, \".\"));\n            this.keypointsFilter = new Et(t.oneEuroFilter);\n        }\n    }\n    return t.prototype.apply = function(t, e, n, i, r) {\n        if (void 0 === i && (i = !1), null == t) return this.keypointsFilter.reset(), null;\n        var o = null != r ? function(t, e) {\n            return (t.width * e.width + t.height * e.height) / 2;\n        }(r, n) : 1, a = i ? kt(t, n) : t, s = this.keypointsFilter.apply(a, e, o);\n        return i ? At(s, n) : s;\n    }, t;\n}(), Bt = function() {\n    function t(t) {\n        this.alpha = t.alpha;\n    }\n    return t.prototype.apply = function(t) {\n        var e = this;\n        if (null == t) return this.visibilityFilters = null, null;\n        null != this.visibilityFilters && this.visibilityFilters.length === t.length || (this.visibilityFilters = t.map(function(t) {\n            return new zt(e.alpha);\n        }));\n        for(var n = [], i = 0; i < t.length; ++i){\n            var r = t[i], o = B({}, r);\n            o.score = this.visibilityFilters[i].apply(r.score), n.push(o);\n        }\n        return n;\n    }, t;\n}(), Nt = {\n    reduceBoxesInLowestlayer: !1,\n    interpolatedScaleAspectRatio: 1,\n    featureMapHeight: [],\n    featureMapWidth: [],\n    numLayers: 5,\n    minScale: .1484375,\n    maxScale: .75,\n    inputSizeHeight: 224,\n    inputSizeWidth: 224,\n    anchorOffsetX: .5,\n    anchorOffsetY: .5,\n    strides: [\n        8,\n        16,\n        32,\n        32,\n        32\n    ],\n    aspectRatios: [\n        1\n    ],\n    fixedAnchorSize: !0\n}, Dt = {\n    runtime: \"tfjs\",\n    modelType: \"full\",\n    enableSmoothing: !0,\n    enableSegmentation: !1,\n    smoothSegmentation: !0,\n    detectorModelUrl: \"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1\",\n    landmarkModelUrl: \"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2\"\n}, Kt = {\n    maxPoses: 1,\n    flipHorizontal: !1\n}, Ut = {\n    applyExponentialOnBoxSize: !1,\n    flipVertically: !1,\n    ignoreClasses: [],\n    numClasses: 1,\n    numBoxes: 2254,\n    numCoords: 12,\n    boxCoordOffset: 0,\n    keypointCoordOffset: 4,\n    numKeypoints: 4,\n    numValuesPerKeypoint: 2,\n    sigmoidScore: !0,\n    scoreClippingThresh: 100,\n    reverseOutputOrder: !0,\n    xScale: 224,\n    yScale: 224,\n    hScale: 224,\n    wScale: 224,\n    minScoreThresh: .5\n}, jt = .3, Ht = {\n    shiftX: 0,\n    shiftY: 0,\n    scaleX: 1.25,\n    scaleY: 1.25,\n    squareLong: !0\n}, qt = {\n    outputTensorSize: {\n        width: 224,\n        height: 224\n    },\n    keepAspectRatio: !0,\n    outputTensorFloatRange: [\n        -1,\n        1\n    ],\n    borderMode: \"zero\"\n}, Xt = {\n    outputTensorSize: {\n        width: 256,\n        height: 256\n    },\n    keepAspectRatio: !0,\n    outputTensorFloatRange: [\n        0,\n        1\n    ],\n    borderMode: \"zero\"\n}, Yt = {\n    numLandmarks: 39,\n    inputImageWidth: 256,\n    inputImageHeight: 256,\n    visibilityActivation: \"sigmoid\",\n    flipHorizontally: !1,\n    flipVertically: !1\n}, Wt = {\n    numLandmarks: 39,\n    inputImageWidth: 1,\n    inputImageHeight: 1,\n    visibilityActivation: \"sigmoid\",\n    flipHorizontally: !1,\n    flipVertically: !1\n}, Gt = {\n    kernelSize: 7,\n    minConfidenceToRefine: .5\n}, Qt = {\n    alpha: .1\n}, Zt = {\n    oneEuroFilter: {\n        frequency: 30,\n        minCutOff: .05,\n        beta: 80,\n        derivateCutOff: 1,\n        minAllowedObjectScale: 1e-6\n    }\n}, $t = {\n    oneEuroFilter: {\n        frequency: 30,\n        minCutOff: .01,\n        beta: 10,\n        derivateCutOff: 1,\n        minAllowedObjectScale: 1e-6\n    }\n}, Jt = {\n    oneEuroFilter: {\n        frequency: 30,\n        minCutOff: .1,\n        beta: 40,\n        derivateCutOff: 1,\n        minAllowedObjectScale: 1e-6,\n        disableValueScaling: !0\n    }\n}, te = {\n    activation: \"none\"\n}, ee = {\n    combineWithPreviousRatio: .7\n};\nvar ne = function() {\n    function t(t) {\n        this.mask = t;\n    }\n    return t.prototype.toCanvasImageSource = function() {\n        return N(this, void 0, void 0, function() {\n            return D(this, function(t) {\n                return [\n                    2,\n                    G(this.mask)\n                ];\n            });\n        });\n    }, t.prototype.toImageData = function() {\n        return N(this, void 0, void 0, function() {\n            return D(this, function(t) {\n                return [\n                    2,\n                    Q(this.mask)\n                ];\n            });\n        });\n    }, t.prototype.toTensor = function() {\n        return N(this, void 0, void 0, function() {\n            return D(this, function(t) {\n                return [\n                    2,\n                    this.mask\n                ];\n            });\n        });\n    }, t.prototype.getUnderlyingType = function() {\n        return \"tensor\";\n    }, t;\n}();\nfunction ie(t) {\n    return $(t), \"person\";\n}\nvar re = function() {\n    function t(t, e, n, i, r, o) {\n        this.detectorModel = t, this.landmarkModel = e, this.enableSmoothing = n, this.enableSegmentation = i, this.smoothSegmentation = r, this.modelType = o, this.regionOfInterest = null, this.prevFilteredSegmentationMask = null, this.anchors = function(t) {\n            null == t.reduceBoxesInLowestLayer && (t.reduceBoxesInLowestLayer = !1), null == t.interpolatedScaleAspectRatio && (t.interpolatedScaleAspectRatio = 1), null == t.fixedAnchorSize && (t.fixedAnchorSize = !1);\n            for(var e = [], n = 0; n < t.numLayers;){\n                for(var i = [], r = [], o = [], a = [], s = n; s < t.strides.length && t.strides[s] === t.strides[n];){\n                    var u = gt(t.minScale, t.maxScale, s, t.strides.length);\n                    if (0 === s && t.reduceBoxesInLowestLayer) o.push(1), o.push(2), o.push(.5), a.push(.1), a.push(u), a.push(u);\n                    else {\n                        for(var h = 0; h < t.aspectRatios.length; ++h)o.push(t.aspectRatios[h]), a.push(u);\n                        if (t.interpolatedScaleAspectRatio > 0) {\n                            var l = s === t.strides.length - 1 ? 1 : gt(t.minScale, t.maxScale, s + 1, t.strides.length);\n                            a.push(Math.sqrt(u * l)), o.push(t.interpolatedScaleAspectRatio);\n                        }\n                    }\n                    s++;\n                }\n                for(var c = 0; c < o.length; ++c){\n                    var p = Math.sqrt(o[c]);\n                    i.push(a[c] / p), r.push(a[c] * p);\n                }\n                var f = 0, d = 0;\n                if (t.featureMapHeight.length > 0) f = t.featureMapHeight[n], d = t.featureMapWidth[n];\n                else {\n                    var m = t.strides[n];\n                    f = Math.ceil(t.inputSizeHeight / m), d = Math.ceil(t.inputSizeWidth / m);\n                }\n                for(var g = 0; g < f; ++g)for(var y = 0; y < d; ++y)for(var v = 0; v < i.length; ++v){\n                    var x = {\n                        xCenter: (y + t.anchorOffsetX) / d,\n                        yCenter: (g + t.anchorOffsetY) / f,\n                        width: 0,\n                        height: 0\n                    };\n                    t.fixedAnchorSize ? (x.width = 1, x.height = 1) : (x.width = r[v], x.height = i[v]), e.push(x);\n                }\n                n = s;\n            }\n            return e;\n        }(Nt);\n        var a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(this.anchors.map(function(t) {\n            return t.width;\n        })), u = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(this.anchors.map(function(t) {\n            return t.height;\n        })), h = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(this.anchors.map(function(t) {\n            return t.xCenter;\n        })), l = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(this.anchors.map(function(t) {\n            return t.yCenter;\n        }));\n        this.anchorTensor = {\n            x: h,\n            y: l,\n            w: a,\n            h: u\n        }, this.prevFilteredSegmentationMask = this.enableSegmentation ? (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)([], [\n            0,\n            0\n        ]) : null;\n    }\n    return t.prototype.estimatePoses = function(t, e, n) {\n        return N(this, void 0, void 0, function() {\n            var i, o, a, s, u, c, p, d, m, g, y, v, x, w, k, b, M, S, T, P, O, I, A;\n            return D(this, function(z) {\n                switch(z.label){\n                    case 0:\n                        return i = function(t) {\n                            var e;\n                            if (null == (e = null == t ? Kt : B({}, t)).maxPoses && (e.maxPoses = 1), e.maxPoses <= 0) throw new Error(\"Invalid maxPoses \".concat(e.maxPoses, \". Should be > 0.\"));\n                            if (e.maxPoses > 1) throw new Error(\"Multi-pose detection is not implemented yet. Please set maxPoses to 1.\");\n                            return e;\n                        }(e), null == t ? (this.reset(), [\n                            2,\n                            []\n                        ]) : (this.maxPoses = i.maxPoses, this.timestamp = null != n ? 1e3 * n : vt(t) ? 1e6 * t.currentTime : null, o = rt(t), a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)(at(t), \"float32\");\n                        }), null != (s = this.regionOfInterest) ? [\n                            3,\n                            2\n                        ] : [\n                            4,\n                            this.detectPose(a)\n                        ]);\n                    case 1:\n                        if (0 === (u = z.sent()).length) return this.reset(), a.dispose(), [\n                            2,\n                            []\n                        ];\n                        c = u[0], s = this.poseDetectionToRoi(c, o), z.label = 2;\n                    case 2:\n                        return [\n                            4,\n                            this.poseLandmarksByRoi(s, a)\n                        ];\n                    case 3:\n                        return p = z.sent(), a.dispose(), null == p ? (this.reset(), [\n                            2,\n                            []\n                        ]) : (d = p.landmarks, m = p.auxiliaryLandmarks, g = p.poseScore, y = p.worldLandmarks, v = p.segmentationMask, x = this.poseLandmarkFiltering(d, m, y, o), w = x.actualLandmarksFiltered, k = x.auxiliaryLandmarksFiltered, b = x.actualWorldLandmarksFiltered, M = this.poseLandmarksToRoi(k, o), this.regionOfInterest = M, S = this.smoothSegmentation && null != v ? this.poseSegmentationFiltering(v) : v, null != (T = null != w ? kt(w, o) : null) && T.forEach(function(t, e) {\n                            t.name = j[e];\n                        }), null != (P = b) && P.forEach(function(t, e) {\n                            t.name = j[e];\n                        }), O = {\n                            score: g,\n                            keypoints: T,\n                            keypoints3D: P\n                        }, null !== S && (I = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                            var t = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)(S, 2), e = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pad)(t, [\n                                [\n                                    0,\n                                    0\n                                ],\n                                [\n                                    0,\n                                    0\n                                ],\n                                [\n                                    0,\n                                    1\n                                ]\n                            ]);\n                            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mirrorPad)(e, [\n                                [\n                                    0,\n                                    0\n                                ],\n                                [\n                                    0,\n                                    0\n                                ],\n                                [\n                                    0,\n                                    2\n                                ]\n                            ], \"symmetric\");\n                        }), this.smoothSegmentation || (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(S), A = {\n                            maskValueToLabel: ie,\n                            mask: new ne(I)\n                        }, O.segmentation = A), [\n                            2,\n                            [\n                                O\n                            ]\n                        ]);\n                }\n            });\n        });\n    }, t.prototype.poseSegmentationFiltering = function(t) {\n        var e = this.prevFilteredSegmentationMask;\n        return 0 === e.size ? this.prevFilteredSegmentationMask = t : (this.prevFilteredSegmentationMask = St(e, t, ee), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(t)), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(e), this.prevFilteredSegmentationMask;\n    }, t.prototype.dispose = function() {\n        this.detectorModel.dispose(), this.landmarkModel.dispose(), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)([\n            this.anchorTensor.x,\n            this.anchorTensor.y,\n            this.anchorTensor.w,\n            this.anchorTensor.h,\n            this.prevFilteredSegmentationMask\n        ]);\n    }, t.prototype.reset = function() {\n        this.regionOfInterest = null, this.enableSegmentation && ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(this.prevFilteredSegmentationMask), this.prevFilteredSegmentationMask = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)([], [\n            0,\n            0\n        ])), this.visibilitySmoothingFilterActual = null, this.visibilitySmoothingFilterAuxiliary = null, this.landmarksSmoothingFilterActual = null, this.landmarksSmoothingFilterAuxiliary = null;\n    }, t.prototype.detectPose = function(t) {\n        return N(this, void 0, void 0, function() {\n            var e, n, i, r, o, a, s, u, h, l;\n            return D(this, function(c) {\n                switch(c.label){\n                    case 0:\n                        return e = mt(t, qt), n = e.imageTensor, i = e.padding, r = this.detectorModel.predict(n), o = yt(r), a = o.boxes, [\n                            4,\n                            Tt([\n                                s = o.logits,\n                                a\n                            ], this.anchorTensor, Ut)\n                        ];\n                    case 1:\n                        return 0 === (u = c.sent()).length ? ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)([\n                            n,\n                            r,\n                            s,\n                            a\n                        ]), [\n                            2,\n                            u\n                        ]) : [\n                            4,\n                            wt(u, this.maxPoses, jt)\n                        ];\n                    case 2:\n                        return h = c.sent(), l = function(t, e) {\n                            void 0 === t && (t = []);\n                            for(var n = e.left, i = e.top, r = e.left + e.right, o = e.top + e.bottom, a = 0; a < t.length; a++){\n                                var s = t[a], u = s.locationData.relativeBoundingBox, h = (u.xMin - n) / (1 - r), l = (u.yMin - i) / (1 - o), c = u.width / (1 - r), p = u.height / (1 - o);\n                                u.xMin = h, u.yMin = l, u.width = c, u.height = p, u.xMax = h + c, u.yMax = l + p;\n                                var f = s.locationData.relativeKeypoints;\n                                f && f.forEach(function(t) {\n                                    var e = (t.x - n) / (1 - r), a = (t.y - i) / (1 - o);\n                                    t.x = e, t.y = a;\n                                });\n                            }\n                            return t;\n                        }(h, i), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)([\n                            n,\n                            r,\n                            s,\n                            a\n                        ]), [\n                            2,\n                            l\n                        ];\n                }\n            });\n        });\n    }, t.prototype.poseDetectionToRoi = function(t, e) {\n        return 0, It(ht(t, e, {\n            rotationVectorEndKeypointIndex: 1,\n            rotationVectorStartKeypointIndex: 0,\n            rotationVectorTargetAngleDegree: 90\n        }), e, Ht);\n    }, t.prototype.poseLandmarksByRoi = function(t, e) {\n        return N(this, void 0, void 0, function() {\n            var n, i, r, o, a, s, u, h, l, c, p, d, m, g;\n            return D(this, function(y) {\n                switch(y.label){\n                    case 0:\n                        if (n = rt(e), i = mt(e, Xt, t), r = i.imageTensor, o = i.padding, a = i.transformationMatrix, \"lite\" !== this.modelType && \"full\" !== this.modelType && \"heavy\" !== this.modelType) throw new Error(\"Model type must be one of lite, full or heavy,\" + \"but got \".concat(this.modelType));\n                        return s = [\n                            \"ld_3d\",\n                            \"output_poseflag\",\n                            \"activation_heatmap\",\n                            \"world_3d\"\n                        ], this.enableSegmentation && s.push(\"activation_segmentation\"), u = this.landmarkModel.execute(r, s), [\n                            4,\n                            this.tensorsToPoseLandmarksAndSegmentation(u)\n                        ];\n                    case 1:\n                        return null == (h = y.sent()) ? ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(u), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(r), [\n                            2,\n                            null\n                        ]) : (l = h.landmarks, c = h.auxiliaryLandmarks, p = h.poseScore, d = h.worldLandmarks, m = h.segmentationMask, [\n                            4,\n                            this.poseLandmarksAndSegmentationInverseProjection(n, t, o, a, l, c, d, m)\n                        ]);\n                    case 2:\n                        return g = y.sent(), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(u), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(r), [\n                            2,\n                            B({\n                                poseScore: p\n                            }, g)\n                        ];\n                }\n            });\n        });\n    }, t.prototype.poseLandmarksAndSegmentationInverseProjection = function(t, e, n, i, o, a, h, l) {\n        return N(this, void 0, void 0, function() {\n            var c, d, m, g, y, v;\n            return D(this, function(x) {\n                return c = Mt(o, n), d = Mt(a, n), m = ft(c, e), g = ft(d, e), y = function(t, e) {\n                    for(var n = [], i = 0, r = t; i < r.length; i++){\n                        var o = r[i], a = o.x, s = o.y, u = e.rotation, h = Math.cos(u) * a - Math.sin(u) * s, l = Math.sin(u) * a + Math.cos(u) * s, c = B({}, o);\n                        c.x = h, c.y = l, n.push(c);\n                    }\n                    return n;\n                }(h, e), v = null, this.enableSegmentation && (v = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                    var e = l.shape, n = e[0], r = e[1], o = function(t) {\n                        var e = lt(new Array(16).fill(0));\n                        e[0][0] = pt(t, 0, 0), e[1][0] = -pt(t, 0, 1), e[2][0] = pt(t, 0, 2), e[3][0] = -pt(t, 0, 3), e[0][2] = pt(t, 2, 0), e[1][2] = -pt(t, 2, 1), e[2][2] = pt(t, 2, 2), e[3][2] = -pt(t, 2, 3), e[0][1] = -pt(t, 1, 0), e[1][1] = pt(t, 1, 1), e[2][1] = -pt(t, 1, 2), e[3][1] = pt(t, 1, 3), e[0][3] = -pt(t, 3, 0), e[1][3] = pt(t, 3, 1), e[2][3] = -pt(t, 3, 2), e[3][3] = pt(t, 3, 3);\n                        for(var n = t[0][0] * e[0][0] + t[1][0] * e[0][1] + t[2][0] * e[0][2] + t[3][0] * e[0][3], i = 0; i < e.length; i++)for(var r = 0; r < e.length; r++)e[i][r] /= n;\n                        return e;\n                    }(i), a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)(st(o, {\n                        width: r,\n                        height: n\n                    }, t), [\n                        1,\n                        8\n                    ]), h = [\n                        1,\n                        n,\n                        r,\n                        1\n                    ];\n                    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.transform((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(l, h), a, \"bilinear\", \"constant\", 0, [\n                        t.height,\n                        t.width\n                    ]), [\n                        0,\n                        3\n                    ]);\n                }), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(l)), [\n                    2,\n                    {\n                        landmarks: m,\n                        auxiliaryLandmarks: g,\n                        worldLandmarks: y,\n                        segmentationMask: v\n                    }\n                ];\n            });\n        });\n    }, t.prototype.tensorsToPoseLandmarksAndSegmentation = function(t) {\n        return N(this, void 0, void 0, function() {\n            var e, n, i, o, a, s, h, l, c, f, d, m, g;\n            return D(this, function(y) {\n                switch(y.label){\n                    case 0:\n                        return e = t[0], n = t[1], i = t[2], o = t[3], a = this.enableSegmentation ? t[4] : null, [\n                            4,\n                            n.data()\n                        ];\n                    case 1:\n                        return (s = y.sent()[0]) < .5 ? [\n                            2,\n                            null\n                        ] : [\n                            4,\n                            Ot(e, Yt)\n                        ];\n                    case 2:\n                        return [\n                            4,\n                            bt(y.sent(), i, Gt)\n                        ];\n                    case 3:\n                        return h = y.sent(), l = h.slice(0, 33), c = h.slice(33, 35), [\n                            4,\n                            Ot(o, Wt)\n                        ];\n                    case 4:\n                        return f = y.sent(), d = f.slice(0, 33), m = function(t, e, n) {\n                            void 0 === n && (n = !0);\n                            for(var i = [], r = 0; r < t.length; r++){\n                                var o = B({}, e[r]);\n                                n && (o.score = t[r].score), i.push(o);\n                            }\n                            return i;\n                        }(l, d, !0), g = this.enableSegmentation ? function(t, e, n) {\n                            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                                var i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(t, [\n                                    0\n                                ]), r = i.shape[2];\n                                if (1 === r) {\n                                    var o = i;\n                                    switch(e.activation){\n                                        case \"none\":\n                                            break;\n                                        case \"sigmoid\":\n                                            o = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sigmoid)(o);\n                                            break;\n                                        case \"softmax\":\n                                            throw new Error(\"Softmax activation requires two channels.\");\n                                        default:\n                                            throw new Error(\"Activation not supported (\".concat(e.activation, \")\"));\n                                    }\n                                    var a = n ? _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(o, [\n                                        n.height,\n                                        n.width\n                                    ]) : o;\n                                    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(a, [\n                                        2\n                                    ]);\n                                }\n                                throw new Error(\"Unsupported number of tensor channels \".concat(r));\n                            });\n                        }(a, te) : null, [\n                            2,\n                            {\n                                landmarks: l,\n                                auxiliaryLandmarks: c,\n                                poseScore: s,\n                                worldLandmarks: m,\n                                segmentationMask: g\n                            }\n                        ];\n                }\n            });\n        });\n    }, t.prototype.poseLandmarksToRoi = function(t, e) {\n        return It(ht(xt(t), e, {\n            rotationVectorStartKeypointIndex: 0,\n            rotationVectorEndKeypointIndex: 1,\n            rotationVectorTargetAngleDegree: 90\n        }), e, Ht);\n    }, t.prototype.poseLandmarkFiltering = function(t, e, n, i) {\n        var r, o, a;\n        if (null != this.timestamp && this.enableSmoothing) {\n            var s = ht(xt(e), i, {\n                rotationVectorEndKeypointIndex: 0,\n                rotationVectorStartKeypointIndex: 1,\n                rotationVectorTargetAngleDegree: 90\n            });\n            null == this.visibilitySmoothingFilterActual && (this.visibilitySmoothingFilterActual = new Bt(Qt)), r = this.visibilitySmoothingFilterActual.apply(t), null == this.visibilitySmoothingFilterAuxiliary && (this.visibilitySmoothingFilterAuxiliary = new Bt(Qt)), o = this.visibilitySmoothingFilterAuxiliary.apply(e), a = this.visibilitySmoothingFilterActual.apply(n), null == this.landmarksSmoothingFilterActual && (this.landmarksSmoothingFilterActual = new Vt(Zt)), r = this.landmarksSmoothingFilterActual.apply(r, this.timestamp, i, !0, s), null == this.landmarksSmoothingFilterAuxiliary && (this.landmarksSmoothingFilterAuxiliary = new Vt($t)), o = this.landmarksSmoothingFilterAuxiliary.apply(o, this.timestamp, i, !0, s), null == this.worldLandmarksSmoothingFilterActual && (this.worldLandmarksSmoothingFilterActual = new Vt(Jt)), a = this.worldLandmarksSmoothingFilterActual.apply(n, this.timestamp);\n        } else r = t, o = e, a = n;\n        return {\n            actualLandmarksFiltered: r,\n            auxiliaryLandmarksFiltered: o,\n            actualWorldLandmarksFiltered: a\n        };\n    }, t;\n}();\nfunction oe(t) {\n    return N(this, void 0, void 0, function() {\n        var e, n, i, r, o, a;\n        return D(this, function(s) {\n            switch(s.label){\n                case 0:\n                    return e = function(t) {\n                        var e = B({}, null == t ? Dt : t);\n                        if (null == e.enableSmoothing && (e.enableSmoothing = Dt.enableSmoothing), null == e.enableSegmentation && (e.enableSegmentation = Dt.enableSegmentation), null == e.smoothSegmentation && (e.smoothSegmentation = Dt.smoothSegmentation), null == e.modelType && (e.modelType = Dt.modelType), null == e.detectorModelUrl && (e.detectorModelUrl = Dt.detectorModelUrl), null == e.landmarkModelUrl) switch(e.modelType){\n                            case \"lite\":\n                                e.landmarkModelUrl = \"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2\";\n                                break;\n                            case \"heavy\":\n                                e.landmarkModelUrl = \"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2\";\n                                break;\n                            case \"full\":\n                            default:\n                                e.landmarkModelUrl = \"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2\";\n                        }\n                        return e;\n                    }(t), n = \"string\" == typeof e.detectorModelUrl && e.detectorModelUrl.indexOf(\"https://tfhub.dev\") > -1, i = \"string\" == typeof e.landmarkModelUrl && e.landmarkModelUrl.indexOf(\"https://tfhub.dev\") > -1, [\n                        4,\n                        Promise.all([\n                            (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.detectorModelUrl, {\n                                fromTFHub: n\n                            }),\n                            (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.landmarkModelUrl, {\n                                fromTFHub: i\n                            })\n                        ])\n                    ];\n                case 1:\n                    return r = s.sent(), o = r[0], a = r[1], [\n                        2,\n                        new re(o, a, e.enableSmoothing, e.enableSegmentation, e.smoothSegmentation, e.modelType)\n                    ];\n            }\n        });\n    });\n}\nvar ae, se, ue = function() {\n    function t(t) {\n        !function(t) {\n            if (t.maxTracks < 1) throw new Error(\"Must specify 'maxTracks' to be at least 1, but \" + \"encountered \".concat(t.maxTracks));\n            if (t.maxAge <= 0) throw new Error(\"Must specify 'maxAge' to be positive, but \" + \"encountered \".concat(t.maxAge));\n            if (void 0 !== t.keypointTrackerParams) {\n                if (t.keypointTrackerParams.keypointConfidenceThreshold < 0 || t.keypointTrackerParams.keypointConfidenceThreshold > 1) throw new Error(\"Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered \" + \"\".concat(t.keypointTrackerParams.keypointConfidenceThreshold));\n                if (t.keypointTrackerParams.minNumberOfKeypoints < 1) throw new Error(\"Must specify 'minNumberOfKeypoints' to be at least 1, but \" + \"encountered \".concat(t.keypointTrackerParams.minNumberOfKeypoints));\n                for(var e = 0, n = t.keypointTrackerParams.keypointFalloff; e < n.length; e++){\n                    var i = n[e];\n                    if (i <= 0) throw new Error(\"Must specify each keypoint falloff parameterto be positive \" + \"but encountered \".concat(i));\n                }\n            }\n        }(t), this.tracks = [], this.maxTracks = t.maxTracks, this.maxAge = 1e3 * t.maxAge, this.minSimilarity = t.minSimilarity, this.nextID = 1;\n    }\n    return t.prototype.apply = function(t, e) {\n        this.filterOldTracks(e);\n        var n = this.computeSimilarity(t);\n        return this.assignTracks(t, n, e), this.updateTracks(e), t;\n    }, t.prototype.getTracks = function() {\n        return this.tracks.slice();\n    }, t.prototype.getTrackIDs = function() {\n        return new Set(this.tracks.map(function(t) {\n            return t.id;\n        }));\n    }, t.prototype.filterOldTracks = function(t) {\n        var e = this;\n        this.tracks = this.tracks.filter(function(n) {\n            return t - n.lastTimestamp <= e.maxAge;\n        });\n    }, t.prototype.assignTracks = function(t, e, n) {\n        for(var i = Array.from(Array(e[0].length).keys()), r = [], o = 0, a = Array.from(Array(t.length).keys()); o < a.length; o++){\n            var s = a[o];\n            if (0 !== i.length) {\n                for(var u = -1, h = -1, l = 0, c = i; l < c.length; l++){\n                    var p = c[l], f = e[s][p];\n                    f >= this.minSimilarity && f > h && (u = p, h = f);\n                }\n                if (u >= 0) {\n                    var d = this.tracks[u];\n                    d = Object.assign(d, this.createTrack(t[s], n, d.id)), t[s].id = d.id;\n                    var m = i.indexOf(u);\n                    i.splice(m, 1);\n                } else r.push(s);\n            } else r.push(s);\n        }\n        for(var g = 0, y = r; g < y.length; g++){\n            s = y[g];\n            var v = this.createTrack(t[s], n);\n            this.tracks.push(v), t[s].id = v.id;\n        }\n    }, t.prototype.updateTracks = function(t) {\n        this.tracks.sort(function(t, e) {\n            return e.lastTimestamp - t.lastTimestamp;\n        }), this.tracks = this.tracks.slice(0, this.maxTracks);\n    }, t.prototype.createTrack = function(t, e, n) {\n        var i = {\n            id: n || this.nextTrackID(),\n            lastTimestamp: e,\n            keypoints: K([], t.keypoints, !0).map(function(t) {\n                return B({}, t);\n            })\n        };\n        return void 0 !== t.box && (i.box = B({}, t.box)), i;\n    }, t.prototype.nextTrackID = function() {\n        var t = this.nextID;\n        return this.nextID += 1, t;\n    }, t.prototype.remove = function() {\n        for(var t = [], e = 0; e < arguments.length; e++)t[e] = arguments[e];\n        this.tracks = this.tracks.filter(function(e) {\n            return !t.includes(e.id);\n        });\n    }, t.prototype.reset = function() {\n        this.tracks = [];\n    }, t;\n}(), he = function(t) {\n    function e(e) {\n        return t.call(this, e) || this;\n    }\n    return V(e, t), e.prototype.computeSimilarity = function(t) {\n        var e = this;\n        return 0 === t.length || 0 === this.tracks.length ? [\n            []\n        ] : t.map(function(t) {\n            return e.tracks.map(function(n) {\n                return e.iou(t, n);\n            });\n        });\n    }, e.prototype.iou = function(t, e) {\n        var n = Math.max(t.box.xMin, e.box.xMin), i = Math.max(t.box.yMin, e.box.yMin), r = Math.min(t.box.xMax, e.box.xMax), o = Math.min(t.box.yMax, e.box.yMax);\n        if (n >= r || i >= o) return 0;\n        var a = (r - n) * (o - i);\n        return a / (t.box.width * t.box.height + e.box.width * e.box.height - a);\n    }, e;\n}(ue), le = function(t) {\n    function e(e) {\n        var n = t.call(this, e) || this;\n        return n.keypointThreshold = e.keypointTrackerParams.keypointConfidenceThreshold, n.keypointFalloff = e.keypointTrackerParams.keypointFalloff, n.minNumKeyoints = e.keypointTrackerParams.minNumberOfKeypoints, n;\n    }\n    return V(e, t), e.prototype.computeSimilarity = function(t) {\n        if (0 === t.length || 0 === this.tracks.length) return [\n            []\n        ];\n        for(var e = [], n = 0, i = t; n < i.length; n++){\n            for(var r = i[n], o = [], a = 0, s = this.tracks; a < s.length; a++){\n                var u = s[a];\n                o.push(this.oks(r, u));\n            }\n            e.push(o);\n        }\n        return e;\n    }, e.prototype.oks = function(t, e) {\n        for(var n = this.area(e.keypoints) + 1e-6, i = 0, r = 0, o = 0; o < t.keypoints.length; ++o){\n            var a = t.keypoints[o], s = e.keypoints[o];\n            if (!(a.score < this.keypointThreshold || s.score < this.keypointThreshold)) {\n                r += 1;\n                var u = Math.pow(a.x - s.x, 2) + Math.pow(a.y - s.y, 2), h = 2 * this.keypointFalloff[o];\n                i += Math.exp(-1 * u / (2 * n * Math.pow(h, 2)));\n            }\n        }\n        return r < this.minNumKeyoints ? 0 : i / r;\n    }, e.prototype.area = function(t) {\n        var e = this, n = t.filter(function(t) {\n            return t.score > e.keypointThreshold;\n        }), i = Math.min.apply(Math, K([\n            1\n        ], n.map(function(t) {\n            return t.x;\n        }), !1)), r = Math.max.apply(Math, K([\n            0\n        ], n.map(function(t) {\n            return t.x;\n        }), !1)), o = Math.min.apply(Math, K([\n            1\n        ], n.map(function(t) {\n            return t.y;\n        }), !1));\n        return (r - i) * (Math.max.apply(Math, K([\n            0\n        ], n.map(function(t) {\n            return t.y;\n        }), !1)) - o);\n    }, e;\n}(ue);\nfunction ce(t) {\n    switch(t){\n        case se.BlazePose:\n            return j.reduce(function(t, e, n) {\n                return t[e] = n, t;\n            }, {});\n        case se.PoseNet:\n        case se.MoveNet:\n            return U.reduce(function(t, e, n) {\n                return t[e] = n, t;\n            }, {});\n        default:\n            throw new Error(\"Model \".concat(t, \" is not supported.\"));\n    }\n}\n!function(t) {\n    t.Keypoint = \"keypoint\", t.BoundingBox = \"boundingBox\";\n}(ae || (ae = {})), function(t) {\n    t.MoveNet = \"MoveNet\", t.BlazePose = \"BlazePose\", t.PoseNet = \"PoseNet\";\n}(se || (se = {}));\nvar pe = Object.freeze({\n    __proto__: null,\n    getKeypointIndexBySide: function(t) {\n        switch(t){\n            case se.BlazePose:\n                return H;\n            case se.PoseNet:\n            case se.MoveNet:\n                return q;\n            default:\n                throw new Error(\"Model \".concat(t, \" is not supported.\"));\n        }\n    },\n    getAdjacentPairs: function(t) {\n        switch(t){\n            case se.BlazePose:\n                return Y;\n            case se.PoseNet:\n            case se.MoveNet:\n                return X;\n            default:\n                throw new Error(\"Model \".concat(t, \" is not supported.\"));\n        }\n    },\n    getKeypointIndexByName: ce\n}), fe = [\n    \"SinglePose.Lightning\",\n    \"SinglePose.Thunder\",\n    \"MultiPose.Lightning\"\n], de = {\n    modelType: \"SinglePose.Lightning\",\n    enableSmoothing: !0\n}, me = {}, ge = {\n    frequency: 30,\n    minCutOff: 2.5,\n    beta: 300,\n    derivateCutOff: 2.5,\n    thresholdCutOff: .5,\n    thresholdBeta: 5,\n    disableValueScaling: !0\n}, ye = {\n    maxTracks: 18,\n    maxAge: 1e3,\n    minSimilarity: .2,\n    keypointTrackerParams: {\n        keypointConfidenceThreshold: .3,\n        keypointFalloff: [\n            .026,\n            .025,\n            .025,\n            .035,\n            .035,\n            .079,\n            .079,\n            .072,\n            .072,\n            .062,\n            .062,\n            .107,\n            .107,\n            .087,\n            .087,\n            .089,\n            .089\n        ],\n        minNumberOfKeypoints: 4\n    }\n}, ve = {\n    maxTracks: 18,\n    maxAge: 1e3,\n    minSimilarity: .15,\n    trackerParams: {}\n};\nfunction xe(t, e, n, i) {\n    for(var r = {}, o = 0, a = U; o < a.length; o++){\n        var s = a[o];\n        r[s] = [\n            e[n[s]].y * i.height,\n            e[n[s]].x * i.width\n        ];\n    }\n    if (function(t, e) {\n        return (t[e.left_hip].score > .2 || t[e.right_hip].score > .2) && (t[e.left_shoulder].score > .2 || t[e.right_shoulder].score > .2);\n    }(e, n)) {\n        var u = (r.left_hip[0] + r.right_hip[0]) / 2, h = (r.left_hip[1] + r.right_hip[1]) / 2, l = function(t, e, n, i, r) {\n            for(var o = [\n                \"left_shoulder\",\n                \"right_shoulder\",\n                \"left_hip\",\n                \"right_hip\"\n            ], a = 0, s = 0, u = 0; u < o.length; u++){\n                (f = Math.abs(i - n[o[u]][0])) > a && (a = f), (d = Math.abs(r - n[o[u]][1])) > s && (s = d);\n            }\n            for(var h = 0, l = 0, c = 0, p = Object.keys(n); c < p.length; c++){\n                var f, d, m = p[c];\n                if (!(t[e[m]].score < .2)) (f = Math.abs(i - n[m][0])) > h && (h = f), (d = Math.abs(r - n[m][1])) > l && (l = d);\n            }\n            return [\n                a,\n                s,\n                h,\n                l\n            ];\n        }(e, n, r, u, h), c = l[0], p = l[1], f = l[2], d = l[3], m = Math.max(1.9 * p, 1.9 * c, 1.2 * f, 1.2 * d), g = [\n            u - (m = Math.min(m, Math.max(h, i.width - h, u, i.height - u))),\n            h - m\n        ];\n        if (m > Math.max(i.width, i.height) / 2) return we(null == t, i);\n        var y = 2 * m;\n        return {\n            yMin: g[0] / i.height,\n            xMin: g[1] / i.width,\n            yMax: (g[0] + y) / i.height,\n            xMax: (g[1] + y) / i.width,\n            height: (g[0] + y) / i.height - g[0] / i.height,\n            width: (g[1] + y) / i.width - g[1] / i.width\n        };\n    }\n    return we(null == t, i);\n}\nfunction we(t, e) {\n    var n, i, r, o;\n    return t ? e.width > e.height ? (n = 1, i = e.height / e.width, r = 0, o = (e.width / 2 - e.height / 2) / e.width) : (n = e.width / e.height, i = 1, r = (e.height / 2 - e.width / 2) / e.height, o = 0) : e.width > e.height ? (n = e.width / e.height, i = 1, r = (e.height / 2 - e.width / 2) / e.height, o = 0) : (n = 1, i = e.height / e.width, r = 0, o = (e.width / 2 - e.height / 2) / e.width), {\n        yMin: r,\n        xMin: o,\n        yMax: r + n,\n        xMax: o + i,\n        height: n,\n        width: i\n    };\n}\nfunction ke(t) {\n    var e, n = null == t ? de : B({}, t);\n    if (null == n.modelType) n.modelType = \"SinglePose.Lightning\";\n    else if (fe.indexOf(n.modelType) < 0) throw new Error(\"Invalid architecture \".concat(n.modelType, \". \") + \"Should be one of \".concat(fe));\n    if (null == n.enableSmoothing && (n.enableSmoothing = !0), null != n.minPoseScore && (n.minPoseScore < 0 || n.minPoseScore > 1)) throw new Error(\"minPoseScore should be between 0.0 and 1.0\");\n    if (null != n.multiPoseMaxDimension && (n.multiPoseMaxDimension % 32 != 0 || n.multiPoseMaxDimension < 32)) throw new Error(\"multiPoseMaxDimension must be a multiple of 32 and higher than 0\");\n    if (\"MultiPose.Lightning\" === n.modelType && null == n.enableTracking && (n.enableTracking = !0), \"MultiPose.Lightning\" === n.modelType && !0 === n.enableTracking) if (null == n.trackerType && (n.trackerType = ae.BoundingBox), n.trackerType === ae.Keypoint) null != n.trackerConfig ? n.trackerConfig = function(t) {\n        var e = be(ye, t);\n        e.keypointTrackerParams = B({}, ye.keypointTrackerParams), null != t.keypointTrackerParams && (null != t.keypointTrackerParams.keypointConfidenceThreshold && (e.keypointTrackerParams.keypointConfidenceThreshold = t.keypointTrackerParams.keypointConfidenceThreshold), null != t.keypointTrackerParams.keypointFalloff && (e.keypointTrackerParams.keypointFalloff = t.keypointTrackerParams.keypointFalloff), null != t.keypointTrackerParams.minNumberOfKeypoints && (e.keypointTrackerParams.minNumberOfKeypoints = t.keypointTrackerParams.minNumberOfKeypoints));\n        return e;\n    }(n.trackerConfig) : n.trackerConfig = ye;\n    else {\n        if (n.trackerType !== ae.BoundingBox) throw new Error(\"Tracker type not supported by MoveNet\");\n        null != n.trackerConfig ? n.trackerConfig = (e = n.trackerConfig, be(ve, e)) : n.trackerConfig = ve;\n    }\n    return n;\n}\nfunction be(t, e) {\n    var n = {\n        maxTracks: t.maxTracks,\n        maxAge: t.maxAge,\n        minSimilarity: t.minSimilarity\n    };\n    return null != e.maxTracks && (n.maxTracks = e.maxTracks), null != e.maxAge && (n.maxAge = e.maxAge), null != e.minSimilarity && (n.minSimilarity = e.minSimilarity), n;\n}\nvar Me = function() {\n    function t(t, e) {\n        this.moveNetModel = t, this.modelInputResolution = {\n            height: 0,\n            width: 0\n        }, this.keypointIndexByName = ce(se.MoveNet), \"SinglePose.Lightning\" === e.modelType ? (this.modelInputResolution.width = 192, this.modelInputResolution.height = 192) : \"SinglePose.Thunder\" === e.modelType && (this.modelInputResolution.width = 256, this.modelInputResolution.height = 256), this.multiPoseModel = \"MultiPose.Lightning\" === e.modelType, this.multiPoseModel || (this.keypointFilter = new Et(ge), this.cropRegionFilterYMin = new zt(.9), this.cropRegionFilterXMin = new zt(.9), this.cropRegionFilterYMax = new zt(.9), this.cropRegionFilterXMax = new zt(.9)), this.enableSmoothing = e.enableSmoothing, e.minPoseScore ? this.minPoseScore = e.minPoseScore : this.minPoseScore = .25, e.multiPoseMaxDimension ? this.multiPoseMaxDimension = e.multiPoseMaxDimension : this.multiPoseMaxDimension = 256, this.enableTracking = e.enableTracking, this.multiPoseModel && this.enableTracking && (e.trackerType === ae.Keypoint ? this.tracker = new le(e.trackerConfig) : e.trackerType === ae.BoundingBox && (this.tracker = new he(e.trackerConfig)), this.enableSmoothing && (this.keypointFilterMap = new Map));\n    }\n    return t.prototype.runSinglePersonPoseModel = function(t) {\n        return N(this, void 0, void 0, function() {\n            var e, n, i, r, o;\n            return D(this, function(a) {\n                switch(a.label){\n                    case 0:\n                        if (4 !== (e = this.moveNetModel.execute(t)).shape.length || 1 !== e.shape[0] || 1 !== e.shape[1] || 17 !== e.shape[2] || 3 !== e.shape[3]) throw e.dispose(), new Error(\"Unexpected output shape from model: [\".concat(e.shape, \"]\"));\n                        return \"webgpu\" === (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.getBackend)() ? [\n                            3,\n                            1\n                        ] : (n = e.dataSync(), [\n                            3,\n                            3\n                        ]);\n                    case 1:\n                        return [\n                            4,\n                            e.data()\n                        ];\n                    case 2:\n                        n = a.sent(), a.label = 3;\n                    case 3:\n                        for(e.dispose(), i = {\n                            keypoints: [],\n                            score: 0\n                        }, r = 0, o = 0; o < 17; ++o)i.keypoints[o] = {\n                            y: n[3 * o],\n                            x: n[3 * o + 1],\n                            score: n[3 * o + 2]\n                        }, i.keypoints[o].score > .2 && (++r, i.score += i.keypoints[o].score);\n                        return r > 0 && (i.score /= r), [\n                            2,\n                            i\n                        ];\n                }\n            });\n        });\n    }, t.prototype.runMultiPersonPoseModel = function(t) {\n        return N(this, void 0, void 0, function() {\n            var e, n, i, r, o, a, s, u;\n            return D(this, function(h) {\n                switch(h.label){\n                    case 0:\n                        if (3 !== (e = this.moveNetModel.execute(t)).shape.length || 1 !== e.shape[0] || 56 !== e.shape[2]) throw e.dispose(), new Error(\"Unexpected output shape from model: [\".concat(e.shape, \"]\"));\n                        return \"webgpu\" === (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.getBackend)() ? [\n                            3,\n                            1\n                        ] : (n = e.dataSync(), [\n                            3,\n                            3\n                        ]);\n                    case 1:\n                        return [\n                            4,\n                            e.data()\n                        ];\n                    case 2:\n                        n = h.sent(), h.label = 3;\n                    case 3:\n                        for(e.dispose(), i = [], r = n.length / 56, o = 0; o < r; ++o)for(i[o] = {\n                            keypoints: []\n                        }, a = 56 * o + 51, i[o].box = {\n                            yMin: n[a],\n                            xMin: n[a + 1],\n                            yMax: n[a + 2],\n                            xMax: n[a + 3],\n                            width: n[a + 3] - n[a + 1],\n                            height: n[a + 2] - n[a]\n                        }, s = 56 * o + 55, i[o].score = n[s], i[o].keypoints = [], u = 0; u < 17; ++u)i[o].keypoints[u] = {\n                            y: n[56 * o + 3 * u],\n                            x: n[56 * o + 3 * u + 1],\n                            score: n[56 * o + 3 * u + 2]\n                        };\n                        return [\n                            2,\n                            i\n                        ];\n                }\n            });\n        });\n    }, t.prototype.estimatePoses = function(t, n, i) {\n        return void 0 === n && (n = me), N(this, void 0, void 0, function() {\n            var r, o, a, s, u, l;\n            return D(this, function(c) {\n                switch(c.label){\n                    case 0:\n                        return n = function(t) {\n                            return null == t ? me : B({}, t);\n                        }(n), null == t ? (this.reset(), [\n                            2,\n                            []\n                        ]) : (null == i ? vt(t) && (i = 1e6 * t.currentTime) : i *= 1e3, r = at(t), o = rt(r), a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)(r, 0), t instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor || r.dispose(), s = [], this.multiPoseModel ? [\n                            3,\n                            2\n                        ] : [\n                            4,\n                            this.estimateSinglePose(a, o, i)\n                        ]);\n                    case 1:\n                        return s = c.sent(), [\n                            3,\n                            4\n                        ];\n                    case 2:\n                        return [\n                            4,\n                            this.estimateMultiplePoses(a, o, i)\n                        ];\n                    case 3:\n                        s = c.sent(), c.label = 4;\n                    case 4:\n                        for(u = 0; u < s.length; ++u)for(l = 0; l < s[u].keypoints.length; ++l)s[u].keypoints[l].name = U[l], s[u].keypoints[l].y *= o.height, s[u].keypoints[l].x *= o.width;\n                        return [\n                            2,\n                            s\n                        ];\n                }\n            });\n        });\n    }, t.prototype.estimateSinglePose = function(t, e, n) {\n        return N(this, void 0, void 0, function() {\n            var i, o, a, h, c = this;\n            return D(this, function(p) {\n                switch(p.label){\n                    case 0:\n                        return this.cropRegion || (this.cropRegion = we(null == this.cropRegion, e)), i = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                            var e = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)([\n                                [\n                                    c.cropRegion.yMin,\n                                    c.cropRegion.xMin,\n                                    c.cropRegion.yMax,\n                                    c.cropRegion.xMax\n                                ]\n                            ]), n = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.zeros)([\n                                1\n                            ], \"int32\"), i = [\n                                c.modelInputResolution.height,\n                                c.modelInputResolution.width\n                            ];\n                            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.cropAndResize(t, e, n, i, \"bilinear\", 0), \"int32\");\n                        }), t.dispose(), [\n                            4,\n                            this.runSinglePersonPoseModel(i)\n                        ];\n                    case 1:\n                        if (o = p.sent(), i.dispose(), o.score < this.minPoseScore) return this.reset(), [\n                            2,\n                            []\n                        ];\n                        for(a = 0; a < o.keypoints.length; ++a)o.keypoints[a].y = this.cropRegion.yMin + o.keypoints[a].y * this.cropRegion.height, o.keypoints[a].x = this.cropRegion.xMin + o.keypoints[a].x * this.cropRegion.width;\n                        return null != n && this.enableSmoothing && (o.keypoints = this.keypointFilter.apply(o.keypoints, n, 1)), h = xe(this.cropRegion, o.keypoints, this.keypointIndexByName, e), this.cropRegion = this.filterCropRegion(h), [\n                            2,\n                            [\n                                o\n                            ]\n                        ];\n                }\n            });\n        });\n    }, t.prototype.estimateMultiplePoses = function(t, e, n) {\n        return N(this, void 0, void 0, function() {\n            var i, r, o, a, s, h, c, p, f, d, m, g = this;\n            return D(this, function(y) {\n                switch(y.label){\n                    case 0:\n                        return e.width > e.height ? (r = this.multiPoseMaxDimension, o = Math.round(this.multiPoseMaxDimension * e.height / e.width), i = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(t, [\n                            o,\n                            r\n                        ]), s = r, h = 32 * Math.ceil(o / 32), a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pad)(i, [\n                            [\n                                0,\n                                0\n                            ],\n                            [\n                                0,\n                                h - o\n                            ],\n                            [\n                                0,\n                                0\n                            ],\n                            [\n                                0,\n                                0\n                            ]\n                        ])) : (r = Math.round(this.multiPoseMaxDimension * e.width / e.height), o = this.multiPoseMaxDimension, i = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(t, [\n                            o,\n                            r\n                        ]), s = 32 * Math.ceil(r / 32), h = o, a = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pad)(i, [\n                            [\n                                0,\n                                0\n                            ],\n                            [\n                                0,\n                                0\n                            ],\n                            [\n                                0,\n                                s - r\n                            ],\n                            [\n                                0,\n                                0\n                            ]\n                        ])), i.dispose(), t.dispose(), c = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)(a, \"int32\"), a.dispose(), [\n                            4,\n                            this.runMultiPersonPoseModel(c)\n                        ];\n                    case 1:\n                        for(p = y.sent(), c.dispose(), p = p.filter(function(t) {\n                            return t.score >= g.minPoseScore;\n                        }), d = 0; d < p.length; ++d)for(f = 0; f < p[d].keypoints.length; ++f)p[d].keypoints[f].y *= h / o, p[d].keypoints[f].x *= s / r;\n                        if (this.enableTracking && (this.tracker.apply(p, n), this.enableSmoothing)) {\n                            for(d = 0; d < p.length; ++d)this.keypointFilterMap.has(p[d].id) || this.keypointFilterMap.set(p[d].id, new Et(ge)), p[d].keypoints = this.keypointFilterMap.get(p[d].id).apply(p[d].keypoints, n, 1);\n                            m = this.tracker.getTrackIDs(), this.keypointFilterMap.forEach(function(t, e) {\n                                m.has(e) || g.keypointFilterMap.delete(e);\n                            });\n                        }\n                        return [\n                            2,\n                            p\n                        ];\n                }\n            });\n        });\n    }, t.prototype.filterCropRegion = function(t) {\n        if (t) {\n            var e = this.cropRegionFilterYMin.apply(t.yMin), n = this.cropRegionFilterXMin.apply(t.xMin), i = this.cropRegionFilterYMax.apply(t.yMax), r = this.cropRegionFilterXMax.apply(t.xMax);\n            return {\n                yMin: e,\n                xMin: n,\n                yMax: i,\n                xMax: r,\n                height: i - e,\n                width: r - n\n            };\n        }\n        return this.cropRegionFilterYMin.reset(), this.cropRegionFilterXMin.reset(), this.cropRegionFilterYMax.reset(), this.cropRegionFilterXMax.reset(), null;\n    }, t.prototype.dispose = function() {\n        this.moveNetModel.dispose();\n    }, t.prototype.reset = function() {\n        this.cropRegion = null, this.resetFilters();\n    }, t.prototype.resetFilters = function() {\n        this.keypointFilter.reset(), this.cropRegionFilterYMin.reset(), this.cropRegionFilterXMin.reset(), this.cropRegionFilterYMax.reset(), this.cropRegionFilterXMax.reset();\n    }, t;\n}();\nfunction Se(t) {\n    return void 0 === t && (t = de), N(this, void 0, void 0, function() {\n        var e, n, i, r;\n        return D(this, function(o) {\n            switch(o.label){\n                case 0:\n                    return e = ke(t), i = !0, e.modelUrl ? (i = \"string\" == typeof e.modelUrl && e.modelUrl.indexOf(\"https://tfhub.dev\") > -1, [\n                        4,\n                        (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.modelUrl, {\n                            fromTFHub: i\n                        })\n                    ]) : [\n                        3,\n                        2\n                    ];\n                case 1:\n                    return n = o.sent(), [\n                        3,\n                        4\n                    ];\n                case 2:\n                    return r = void 0, \"SinglePose.Lightning\" === e.modelType ? r = \"https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4\" : \"SinglePose.Thunder\" === e.modelType ? r = \"https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4\" : \"MultiPose.Lightning\" === e.modelType && (r = \"https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1\"), [\n                        4,\n                        (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(r, {\n                            fromTFHub: i\n                        })\n                    ];\n                case 3:\n                    n = o.sent(), o.label = 4;\n                case 4:\n                    return \"webgl\" === (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.getBackend)() && (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().set(\"TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD\", 0), [\n                        2,\n                        new Me(n, e)\n                    ];\n            }\n        });\n    });\n}\nvar Te = {\n    architecture: \"MobileNetV1\",\n    outputStride: 16,\n    multiplier: .75,\n    inputResolution: {\n        height: 257,\n        width: 257\n    }\n}, Pe = [\n    \"MobileNetV1\",\n    \"ResNet50\"\n], Fe = {\n    MobileNetV1: [\n        8,\n        16\n    ],\n    ResNet50: [\n        16\n    ]\n}, _e = [\n    8,\n    16,\n    32\n], Oe = {\n    MobileNetV1: [\n        .5,\n        .75,\n        1\n    ],\n    ResNet50: [\n        1\n    ]\n}, Ie = [\n    1,\n    2,\n    4\n], Ae = {\n    maxPoses: 1,\n    flipHorizontal: !1\n}, ze = {\n    maxPoses: 5,\n    flipHorizontal: !1,\n    scoreThreshold: .5,\n    nmsRadius: 20\n}, Ce = [\n    -123.15,\n    -115.9,\n    -103.06\n];\nfunction Ee(t) {\n    return Math.floor(t / 2);\n}\nvar Re = function() {\n    function t(t, e) {\n        this.priorityQueue = new Array(t), this.numberOfElements = -1, this.getElementValue = e;\n    }\n    return t.prototype.enqueue = function(t) {\n        this.priorityQueue[++this.numberOfElements] = t, this.swim(this.numberOfElements);\n    }, t.prototype.dequeue = function() {\n        var t = this.priorityQueue[0];\n        return this.exchange(0, this.numberOfElements--), this.sink(0), this.priorityQueue[this.numberOfElements + 1] = null, t;\n    }, t.prototype.empty = function() {\n        return -1 === this.numberOfElements;\n    }, t.prototype.size = function() {\n        return this.numberOfElements + 1;\n    }, t.prototype.all = function() {\n        return this.priorityQueue.slice(0, this.numberOfElements + 1);\n    }, t.prototype.max = function() {\n        return this.priorityQueue[0];\n    }, t.prototype.swim = function(t) {\n        for(; t > 0 && this.less(Ee(t), t);)this.exchange(t, Ee(t)), t = Ee(t);\n    }, t.prototype.sink = function(t) {\n        for(; 2 * t <= this.numberOfElements;){\n            var e = 2 * t;\n            if (e < this.numberOfElements && this.less(e, e + 1) && e++, !this.less(t, e)) break;\n            this.exchange(t, e), t = e;\n        }\n    }, t.prototype.getValueAt = function(t) {\n        return this.getElementValue(this.priorityQueue[t]);\n    }, t.prototype.less = function(t, e) {\n        return this.getValueAt(t) < this.getValueAt(e);\n    }, t.prototype.exchange = function(t, e) {\n        var n = this.priorityQueue[t];\n        this.priorityQueue[t] = this.priorityQueue[e], this.priorityQueue[e] = n;\n    }, t;\n}();\nfunction Le(t, e, n, i, r, o) {\n    for(var a = o.shape, s = a[0], u = a[1], h = !0, l = Math.max(n - r, 0), c = Math.min(n + r + 1, s), p = l; p < c; ++p){\n        for(var f = Math.max(i - r, 0), d = Math.min(i + r + 1, u), m = f; m < d; ++m)if (o.get(p, m, t) > e) {\n            h = !1;\n            break;\n        }\n        if (!h) break;\n    }\n    return h;\n}\nfunction Ve(t) {\n    return N(this, void 0, void 0, function() {\n        return D(this, function(e) {\n            return [\n                2,\n                Promise.all(t.map(function(t) {\n                    return t.buffer();\n                }))\n            ];\n        });\n    });\n}\nfunction Be(t, e, n, i) {\n    return {\n        y: i.get(t, e, n),\n        x: i.get(t, e, n + 17)\n    };\n}\nfunction Ne(t, e, n) {\n    var i = Be(t.heatmapY, t.heatmapX, t.id, n), r = i.y, o = i.x;\n    return {\n        x: t.heatmapX * e + o,\n        y: t.heatmapY * e + r\n    };\n}\nfunction De(t, e, n, i) {\n    var r = n.x, o = n.y;\n    return t.some(function(t) {\n        var n, a, s, u, h, l, c = t.keypoints;\n        return n = o, a = r, s = c[i].y, u = c[i].x, (h = s - n) * h + (l = u - a) * l <= e;\n    });\n}\nvar Ke = U.reduce(function(t, e, n) {\n    return t[e] = n, t;\n}, {}), Ue = [\n    [\n        \"nose\",\n        \"left_eye\"\n    ],\n    [\n        \"left_eye\",\n        \"left_ear\"\n    ],\n    [\n        \"nose\",\n        \"right_eye\"\n    ],\n    [\n        \"right_eye\",\n        \"right_ear\"\n    ],\n    [\n        \"nose\",\n        \"left_shoulder\"\n    ],\n    [\n        \"left_shoulder\",\n        \"left_elbow\"\n    ],\n    [\n        \"left_elbow\",\n        \"left_wrist\"\n    ],\n    [\n        \"left_shoulder\",\n        \"left_hip\"\n    ],\n    [\n        \"left_hip\",\n        \"left_knee\"\n    ],\n    [\n        \"left_knee\",\n        \"left_ankle\"\n    ],\n    [\n        \"nose\",\n        \"right_shoulder\"\n    ],\n    [\n        \"right_shoulder\",\n        \"right_elbow\"\n    ],\n    [\n        \"right_elbow\",\n        \"right_wrist\"\n    ],\n    [\n        \"right_shoulder\",\n        \"right_hip\"\n    ],\n    [\n        \"right_hip\",\n        \"right_knee\"\n    ],\n    [\n        \"right_knee\",\n        \"right_ankle\"\n    ]\n].map(function(t) {\n    var e = t[0], n = t[1];\n    return [\n        Ke[e],\n        Ke[n]\n    ];\n}), je = Ue.map(function(t) {\n    return t[1];\n}), He = Ue.map(function(t) {\n    return t[0];\n});\nfunction qe(t, e, n) {\n    return t < e ? e : t > n ? n : t;\n}\nfunction Xe(t, e, n, i) {\n    return {\n        y: qe(Math.round(t.y / e), 0, n - 1),\n        x: qe(Math.round(t.x / e), 0, i - 1)\n    };\n}\nfunction Ye(t, e) {\n    return {\n        x: t.x + e.x,\n        y: t.y + e.y\n    };\n}\nfunction We(t, e, n, i, r, o, a, s) {\n    void 0 === s && (s = 2);\n    for(var u = i.shape, h = u[0], l = u[1], c = {\n        y: e.y,\n        x: e.x\n    }, p = Ye(c, function(t, e, n) {\n        var i = n.shape[2] / 2;\n        return {\n            y: n.get(e.y, e.x, t),\n            x: n.get(e.y, e.x, i + t)\n        };\n    }(t, Xe(c, o, h, l), a)), f = 0; f < s; f++){\n        var d = Xe(p, o, h, l), m = Be(d.y, d.x, n, r);\n        p = Ye({\n            x: d.x * o,\n            y: d.y * o\n        }, {\n            x: m.x,\n            y: m.y\n        });\n    }\n    var g = Xe(p, o, h, l), y = i.get(g.y, g.x, n);\n    return {\n        y: p.y,\n        x: p.x,\n        name: U[n],\n        score: y\n    };\n}\nfunction Ge(t, e, n, i, r, o) {\n    var a = e.shape[2], s = je.length, u = new Array(a), h = t.part, l = t.score, c = Ne(h, i, n);\n    u[h.id] = {\n        score: l,\n        name: U[h.id],\n        y: c.y,\n        x: c.x\n    };\n    for(var p = s - 1; p >= 0; --p){\n        var f = je[p], d = He[p];\n        u[f] && !u[d] && (u[d] = We(p, u[f], d, e, n, i, o));\n    }\n    for(p = 0; p < s; ++p){\n        f = He[p], d = je[p];\n        u[f] && !u[d] && (u[d] = We(p, u[f], d, e, n, i, r));\n    }\n    return u;\n}\nfunction Qe(t, e, n) {\n    return n.reduce(function(n, i, r) {\n        var o = i.y, a = i.x, s = i.score;\n        return De(t, e, {\n            y: o,\n            x: a\n        }, r) || (n += s), n;\n    }, 0) / n.length;\n}\nfunction Ze(t, e, n, i, r, o, a, s) {\n    return void 0 === a && (a = .5), void 0 === s && (s = 20), N(this, void 0, void 0, function() {\n        var u, h, l, c, p, f, d, m, g, y, v, x;\n        return D(this, function(w) {\n            switch(w.label){\n                case 0:\n                    return [\n                        4,\n                        Ve([\n                            t,\n                            e,\n                            n,\n                            i\n                        ])\n                    ];\n                case 1:\n                    for(u = w.sent(), h = u[0], l = u[1], c = u[2], p = u[3], f = [], d = function(t, e, n) {\n                        for(var i = n.shape, r = i[0], o = i[1], a = i[2], s = new Re(r * o * a, function(t) {\n                            return t.score;\n                        }), u = 0; u < r; ++u)for(var h = 0; h < o; ++h)for(var l = 0; l < a; ++l){\n                            var c = n.get(u, h, l);\n                            c < t || Le(l, c, u, h, e, n) && s.enqueue({\n                                score: c,\n                                part: {\n                                    heatmapY: u,\n                                    heatmapX: h,\n                                    id: l\n                                }\n                            });\n                        }\n                        return s;\n                    }(a, 1, h), m = s * s; f.length < o && !d.empty();)g = d.dequeue(), y = Ne(g.part, r, l), De(f, m, y, g.part.id) || (v = Ge(g, h, l, r, c, p), x = Qe(f, m, v), f.push({\n                        keypoints: v,\n                        score: x\n                    }));\n                    return [\n                        2,\n                        f\n                    ];\n            }\n        });\n    });\n}\nfunction $e() {\n    for(var t, e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n];\n    switch(e.length){\n        case 0:\n            t = \"fn main() \";\n            break;\n        case 1:\n            t = \"fn main(\".concat(e[0], \" : i32)\");\n            break;\n        default:\n            throw Error(\"Unreachable\");\n    }\n    return t;\n}\nvar Je = function() {\n    function t(t) {\n        this.variableNames = [\n            \"A\",\n            \"B\"\n        ], this.size = !0;\n        this.workgroupSize = [\n            32,\n            1,\n            1\n        ], this.outputShape = [\n            t[0],\n            1\n        ], this.dispatchLayout = _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__.webgpu_util.flatDispatchLayout(this.outputShape), this.dispatch = _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__.webgpu_util.computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize), this.shaderKey = \"getpointsConfidenceOp\";\n    }\n    return t.prototype.getUserCode = function() {\n        return \"\\n        \".concat($e(\"index\"), \" {\\n          if (index < uniforms.size) {\\n            let y = B[index * 2];\\n            let x = B[index * 2 + 1];\\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\\n            result[index] = A[outIndex];\\n          }\\n        }\\n        \");\n    }, t;\n}();\nfunction tn(t, e) {\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend)() instanceof _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__.WebGPUBackend) return function(t, e) {\n        var n = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend)(), i = new Je(e.shape), r = n.runWebGPUProgram(i, [\n            t,\n            e\n        ], \"float32\");\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)().makeTensorFromTensorInfo(r);\n    }(t, e);\n    throw new Error(\"getPointsConfidenceWebGPU is not supported in this backend!\");\n}\nvar en = function() {\n    function t(t) {\n        if (this.variableNames = [\n            \"A\",\n            \"B\"\n        ], this.size = !0, this.supportedLastDimension = 2, 2 !== t.length || t[1] !== this.supportedLastDimension) throw new Error(\"GetOffsetVectorsProgram only supports shape of [x, \".concat(this.supportedLastDimension, \"], but current shape is \").concat(t));\n        this.workgroupSize = [\n            32,\n            1,\n            1\n        ], this.outputShape = t;\n        var e = [\n            t[0],\n            1\n        ];\n        this.dispatchLayout = _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__.webgpu_util.flatDispatchLayout(e), this.dispatch = _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__.webgpu_util.computeDispatch(this.dispatchLayout, e, this.workgroupSize), this.shaderKey = \"GetOffsetVectors\";\n    }\n    return t.prototype.getUserCode = function() {\n        return \"\\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\\n      let outIndexX = outIndexY + uniforms.bShape.z;\\n      let outY = i32(B[outIndexY]);\\n      let outX = i32(B[outIndexX]);\\n      return vec2<i32>(outY, outX);\\n    }\\n\\n    \".concat($e(\"index\"), \" {\\n      if (index < uniforms.size) {\\n        let indexY = index * \").concat(this.supportedLastDimension, \";\\n        let indexX = indexY + 1;\\n        let heatmapY = A[indexY];\\n        let heatmapX = A[indexX];\\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\\n        result[indexY] = f32(out[0]);\\n        result[indexX] = f32(out[1]);\\n      }\\n    }\\n    \");\n    }, t;\n}();\nfunction nn(t, e) {\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend)() instanceof _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_2__.WebGPUBackend) return function(t, e) {\n        var n = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend)(), i = new en(t.shape), r = n.runWebGPUProgram(i, [\n            t,\n            e\n        ], \"float32\");\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)().makeTensorFromTensorInfo(r);\n    }(t, e);\n    throw new Error(\"getOffsetVectorsGPU is not supported in this backend!\");\n}\nfunction rn(t) {\n    var e = t.shape, n = e[0], i = e[1], o = e[2];\n    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n        var e, s, u = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(t, [\n            n * i,\n            o\n        ]), l = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.argMax)(u, 0), c = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(l, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(i, \"int32\")), 1), p = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)((e = l, s = i, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n            var t = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(e, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(s, \"int32\"));\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(e, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(t, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(s, \"int32\")));\n        })), 1);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.concat)([\n            c,\n            p\n        ], 1);\n    });\n}\nfunction on(t, e, n) {\n    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n        var i = function(t, e) {\n            for(var n = [], i = 0; i < U.length; i++){\n                var r = t.get(i, 0).valueOf(), o = t.get(i, 1).valueOf(), a = an(r, o, i, e), u = a.x, h = a.y;\n                n.push(h), n.push(u);\n            }\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor2d)(n, [\n                U.length,\n                2\n            ]);\n        }(t, n);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(t.toTensor(), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(e, \"int32\")), \"float32\"), i);\n    });\n}\nfunction an(t, e, n, i) {\n    return {\n        y: i.get(t, e, n),\n        x: i.get(t, e, n + U.length)\n    };\n}\nfunction sn(t, e, n) {\n    return N(this, void 0, void 0, function() {\n        var i, r, o, a, s, u, h, l, c, p;\n        return D(this, function(f) {\n            switch(f.label){\n                case 0:\n                    return i = 0, r = rn(t), [\n                        4,\n                        Promise.all([\n                            t.buffer(),\n                            e.buffer(),\n                            r.buffer()\n                        ])\n                    ];\n                case 1:\n                    return o = f.sent(), a = o[0], s = o[1], u = o[2], [\n                        4,\n                        (h = on(u, n, s)).buffer()\n                    ];\n                case 2:\n                    return l = f.sent(), c = Array.from(function(t, e) {\n                        for(var n = e.shape[0], i = new Float32Array(n), r = 0; r < n; r++){\n                            var o = e.get(r, 0), a = e.get(r, 1);\n                            i[r] = t.get(o, a, r);\n                        }\n                        return i;\n                    }(a, u)), p = c.map(function(t, e) {\n                        return i += t, {\n                            y: l.get(e, 0),\n                            x: l.get(e, 1),\n                            score: t,\n                            name: U[e]\n                        };\n                    }), r.dispose(), h.dispose(), [\n                        2,\n                        {\n                            keypoints: p,\n                            score: i / p.length\n                        }\n                    ];\n            }\n        });\n    });\n}\nfunction un(t, e, n) {\n    return N(this, void 0, void 0, function() {\n        var i, s, u;\n        return D(this, function(h) {\n            return i = rn(t), s = function(t, e, n) {\n                return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function() {\n                    var i = nn(t, n);\n                    return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(t, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(e, \"int32\")), \"float32\"), i);\n                });\n            }(i, n, e), u = tn(t, i), [\n                2,\n                [\n                    s,\n                    u\n                ]\n            ];\n        });\n    });\n}\nfunction hn(t, e) {\n    return (t - 1) % e == 0;\n}\nvar ln = \"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/\", cn = \"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/\";\nfunction pn(t, e) {\n    return function(t, e) {\n        return (t - 1) % e == 0;\n    }(t, e) ? t : Math.floor(t / e) * e + 1;\n}\nvar fn = function() {\n    function t(t, e) {\n        this.posenetModel = t;\n        var n = this.posenetModel.inputs[0].shape;\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(-1 === n[1] && -1 === n[2], function() {\n            return \"Input shape [\".concat(n[1], \", \").concat(n[2], \"] \") + \"must both be equal to or -1\";\n        });\n        var r, o, a = (r = e.inputResolution, o = e.outputStride, {\n            height: pn(r.height, o),\n            width: pn(r.width, o)\n        });\n        !function(t) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_e.indexOf(t) >= 0, function() {\n                return \"outputStride of \".concat(t, \" is invalid. \") + \"It must be either 8 or 16.\";\n            });\n        }(e.outputStride), function(t, e) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(hn(t.height, e), function() {\n                return \"height of \".concat(t.height, \" is invalid for output stride \") + \"\".concat(e, \".\");\n            }), _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(hn(t.width, e), function() {\n                return \"width of \".concat(t.width, \" is invalid for output stride \") + \"\".concat(e, \".\");\n            });\n        }(a, e.outputStride), this.inputResolution = a, this.outputStride = e.outputStride, this.architecture = e.architecture;\n    }\n    return t.prototype.estimatePoses = function(t, e) {\n        return void 0 === e && (e = Ae), N(this, void 0, void 0, function() {\n            return D(this, function(n) {\n                return [\n                    2,\n                    this.estimatePosesGPU(t, e, !1)\n                ];\n            });\n        });\n    }, t.prototype.estimatePosesGPU = function(t, e, n) {\n        return void 0 === e && (e = Ae), void 0 === n && (n = !1), N(this, void 0, void 0, function() {\n            var i, r, a, s, u, h, l, c, d, m, g, y, v, x, w, k, b, M;\n            return D(this, function(S) {\n                switch(S.label){\n                    case 0:\n                        return i = function(t) {\n                            var e = t;\n                            if (null == e.maxPoses && (e.maxPoses = 1), e.maxPoses <= 0) throw new Error(\"Invalid maxPoses \".concat(e.maxPoses, \". Should be > 0.\"));\n                            if (e.maxPoses > 1) {\n                                if ((e = B(B({}, ze), e)).scoreThreshold < 0 || e.scoreThreshold > 1) throw new Error(\"Invalid scoreThreshold \".concat(e.scoreThreshold, \". \") + \"Should be in range [0.0, 1.0]\");\n                                if (e.nmsRadius <= 0) throw new Error(\"Invalid nmsRadius \".concat(e.nmsRadius, \".\"));\n                            }\n                            return e;\n                        }(e), null == t ? [\n                            2,\n                            n ? [\n                                [],\n                                []\n                            ] : []\n                        ] : (this.maxPoses = i.maxPoses, r = mt(t, {\n                            outputTensorSize: this.inputResolution,\n                            keepAspectRatio: !0,\n                            borderMode: \"replicate\"\n                        }), a = r.imageTensor, s = r.padding, u = \"ResNet50\" === this.architecture ? (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(a, Ce) : dt(a, [\n                            -1,\n                            1\n                        ]), h = this.posenetModel.predict(u), \"ResNet50\" === this.architecture ? (l = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[2], [\n                            0\n                        ]), c = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[3], [\n                            0\n                        ]), d = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[0], [\n                            0\n                        ]), m = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[1], [\n                            0\n                        ])) : (l = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[0], [\n                            0\n                        ]), c = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[1], [\n                            0\n                        ]), d = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[2], [\n                            0\n                        ]), m = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h[3], [\n                            0\n                        ])), g = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sigmoid)(c), 1 !== this.maxPoses ? [\n                            3,\n                            5\n                        ] : n ? [\n                            4,\n                            un(g, l, this.outputStride)\n                        ] : [\n                            3,\n                            2\n                        ]);\n                    case 1:\n                        return v = S.sent(), w = v[0], x = v[1], y = [\n                            w,\n                            x\n                        ], [\n                            3,\n                            4\n                        ];\n                    case 2:\n                        return [\n                            4,\n                            sn(g, l, this.outputStride)\n                        ];\n                    case 3:\n                        w = S.sent(), y = [\n                            w\n                        ], S.label = 4;\n                    case 4:\n                        return [\n                            3,\n                            7\n                        ];\n                    case 5:\n                        if (n) throw new Error(\"GPU renderer only supports single pose!\");\n                        return [\n                            4,\n                            Ze(g, l, d, m, this.outputStride, this.maxPoses, i.scoreThreshold, i.nmsRadius)\n                        ];\n                    case 6:\n                        y = S.sent(), S.label = 7;\n                    case 7:\n                        if (n) {\n                            if (!0 === i.flipHorizontal) throw new Error(\"flipHorizontal is not supported!\");\n                            k = this.getCanvasInfo(rt(t), this.inputResolution, s);\n                        } else M = rt(t), b = function(t, e, n, i) {\n                            var r = e.height, o = e.width, a = r / (n.height * (1 - i.top - i.bottom)), s = o / (n.width * (1 - i.left - i.right)), u = -i.top * n.height, h = -i.left * n.width;\n                            if (1 === s && 1 === a && 0 === u && 0 === h) return t;\n                            for(var l = 0, c = t; l < c.length; l++)for(var p = 0, f = c[l].keypoints; p < f.length; p++){\n                                var d = f[p];\n                                d.x = (d.x + h) * s, d.y = (d.y + u) * a;\n                            }\n                            return t;\n                        }(y, M, this.inputResolution, s), i.flipHorizontal && (b = function(t, e) {\n                            for(var n = 0, i = t; n < i.length; n++)for(var r = 0, o = i[n].keypoints; r < o.length; r++){\n                                var a = o[r];\n                                a.x = e.width - 1 - a.x;\n                            }\n                            return t;\n                        }(b, M));\n                        return a.dispose(), u.dispose(), (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.dispose)(h), l.dispose(), c.dispose(), d.dispose(), m.dispose(), g.dispose(), [\n                            2,\n                            n ? [\n                                y,\n                                k\n                            ] : b\n                        ];\n                }\n            });\n        });\n    }, t.prototype.getCanvasInfo = function(t, e, n) {\n        var i = t.height, r = t.width, o = i / (e.height * (1 - n.top - n.bottom)), a = r / (e.width * (1 - n.left - n.right)), s = -n.top * e.height;\n        return [\n            -n.left * e.width,\n            s,\n            a,\n            o,\n            t.width,\n            t.height\n        ];\n    }, t.prototype.dispose = function() {\n        this.posenetModel.dispose();\n    }, t.prototype.reset = function() {}, t;\n}();\nfunction dn(t) {\n    return void 0 === t && (t = Te), N(this, void 0, void 0, function() {\n        var e, n, i, r, o;\n        return D(this, function(a) {\n            switch(a.label){\n                case 0:\n                    return \"ResNet50\" !== (e = function(t) {\n                        var e = t || Te;\n                        if (null == e.architecture && (e.architecture = \"MobileNetV1\"), Pe.indexOf(e.architecture) < 0) throw new Error(\"Invalid architecture \".concat(e.architecture, \". \") + \"Should be one of \".concat(Pe));\n                        if (null == e.inputResolution && (e.inputResolution = {\n                            height: 257,\n                            width: 257\n                        }), null == e.outputStride && (e.outputStride = 16), Fe[e.architecture].indexOf(e.outputStride) < 0) throw new Error(\"Invalid outputStride \".concat(e.outputStride, \". \") + \"Should be one of \".concat(Fe[e.architecture], \" \") + \"for architecture \".concat(e.architecture, \".\"));\n                        if (null == e.multiplier && (e.multiplier = 1), Oe[e.architecture].indexOf(e.multiplier) < 0) throw new Error(\"Invalid multiplier \".concat(e.multiplier, \". \") + \"Should be one of \".concat(Oe[e.architecture], \" \") + \"for architecture \".concat(e.architecture, \".\"));\n                        if (null == e.quantBytes && (e.quantBytes = 4), Ie.indexOf(e.quantBytes) < 0) throw new Error(\"Invalid quantBytes \".concat(e.quantBytes, \". \") + \"Should be one of \".concat(Ie, \" \") + \"for architecture \".concat(e.architecture, \".\"));\n                        if (\"MobileNetV1\" === e.architecture && 32 === e.outputStride && 1 !== e.multiplier) throw new Error(\"When using an output stride of 32, you must select 1 as the multiplier.\");\n                        return e;\n                    }(t)).architecture ? [\n                        3,\n                        2\n                    ] : (s = e.outputStride, u = e.quantBytes, h = \"model-stride\".concat(s, \".json\"), n = 4 === u ? cn + \"float/\" + h : cn + \"quant\".concat(u, \"/\") + h, [\n                        4,\n                        (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.modelUrl || n)\n                    ]);\n                case 1:\n                    return i = a.sent(), [\n                        2,\n                        new fn(i, e)\n                    ];\n                case 2:\n                    return r = function(t, e, n) {\n                        var i = {\n                            1: \"100\",\n                            .75: \"075\",\n                            .5: \"050\"\n                        }, r = \"model-stride\".concat(t, \".json\");\n                        return 4 === n ? ln + \"float/\".concat(i[e], \"/\") + r : ln + \"quant\".concat(n, \"/\").concat(i[e], \"/\") + r;\n                    }(e.outputStride, e.multiplier, e.quantBytes), [\n                        4,\n                        (0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.modelUrl || r)\n                    ];\n                case 3:\n                    return o = a.sent(), [\n                        2,\n                        new fn(o, e)\n                    ];\n            }\n            var s, u, h;\n        });\n    });\n}\nfunction mn(t, e) {\n    return N(this, void 0, void 0, function() {\n        var n, i;\n        return D(this, function(r) {\n            switch(t){\n                case se.PoseNet:\n                    return [\n                        2,\n                        dn(e)\n                    ];\n                case se.BlazePose:\n                    if (i = void 0, null != (n = e)) {\n                        if (\"tfjs\" === n.runtime) return [\n                            2,\n                            oe(e)\n                        ];\n                        if (\"mediapipe\" === n.runtime) return [\n                            2,\n                            it(e)\n                        ];\n                        i = n.runtime;\n                    }\n                    throw new Error(\"Expect modelConfig.runtime to be either 'tfjs' \" + \"or 'mediapipe', but got \".concat(i));\n                case se.MoveNet:\n                    return [\n                        2,\n                        Se(e)\n                    ];\n                default:\n                    throw new Error(\"\".concat(t, \" is not a supported model name.\"));\n            }\n        });\n    });\n}\nvar gn = {\n    keypointsToNormalizedKeypoints: At\n}, yn = {\n    modelType: {\n        SINGLEPOSE_LIGHTNING: \"SinglePose.Lightning\",\n        SINGLEPOSE_THUNDER: \"SinglePose.Thunder\",\n        MULTIPOSE_LIGHTNING: \"MultiPose.Lightning\"\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRlbnNvcmZsb3ctbW9kZWxzL3Bvc2UtZGV0ZWN0aW9uL2Rpc3QvcG9zZS1kZXRlY3Rpb24uZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztJQWVJLEdBQ21DO0FBQWdhO0FBQTREO0FBQWlGO0FBQUEsSUFBSXdFLElBQUUsU0FBU3ZFLENBQUMsRUFBQ0UsQ0FBQztJQUFFLE9BQU0sQ0FBQ3FFLElBQUVDLE9BQU9DLGNBQWMsSUFBRTtRQUFDQyxXQUFVLEVBQUU7SUFBQSxjQUFZQyxTQUFPLFNBQVMzRSxDQUFDLEVBQUNFLENBQUM7UUFBRUYsRUFBRTBFLFNBQVMsR0FBQ3hFO0lBQUMsS0FBRyxTQUFTRixDQUFDLEVBQUNFLENBQUM7UUFBRSxJQUFJLElBQUlFLEtBQUtGLEVBQUVzRSxPQUFPSSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDNUUsR0FBRUUsTUFBS0osQ0FBQUEsQ0FBQyxDQUFDSSxFQUFFLEdBQUNGLENBQUMsQ0FBQ0UsRUFBRTtJQUFDLEdBQUdKLEdBQUVFO0FBQUU7QUFBRSxTQUFTNkUsRUFBRS9FLENBQUMsRUFBQ0UsQ0FBQztJQUFFLElBQUcsY0FBWSxPQUFPQSxLQUFHLFNBQU9BLEdBQUUsTUFBTSxJQUFJOEUsVUFBVSx5QkFBdUJDLE9BQU8vRSxLQUFHO0lBQWlDLFNBQVNFO1FBQUksSUFBSSxDQUFDOEUsV0FBVyxHQUFDbEY7SUFBQztJQUFDdUUsRUFBRXZFLEdBQUVFLElBQUdGLEVBQUU0RSxTQUFTLEdBQUMsU0FBTzFFLElBQUVzRSxPQUFPVyxNQUFNLENBQUNqRixLQUFJRSxDQUFBQSxFQUFFd0UsU0FBUyxHQUFDMUUsRUFBRTBFLFNBQVMsRUFBQyxJQUFJeEUsQ0FBQUE7QUFBRTtBQUFDLElBQUlnRixJQUFFO0lBQVcsT0FBTSxDQUFDQSxJQUFFWixPQUFPYSxNQUFNLElBQUUsU0FBU3JGLENBQUM7UUFBRSxJQUFJLElBQUlFLEdBQUVF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QztRQUFFO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0NBQUMsRUFBQ0MsSUFBRTtJQUFDO1FBQUM7UUFBRTtLQUFFO0lBQUM7UUFBQztRQUFFO0tBQUU7SUFBQztRQUFDO1FBQUU7S0FBRTtJQUFDO1FBQUM7UUFBRTtLQUFFO0lBQUM7UUFBQztRQUFFO0tBQUU7SUFBQztRQUFDO1FBQUU7S0FBRTtJQUFDO1FBQUM7UUFBRTtLQUFFO0lBQUM7UUFBQztRQUFFO0tBQUU7SUFBQztRQUFDO1FBQUU7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztJQUFDO1FBQUM7UUFBRztLQUFHO0lBQUM7UUFBQztRQUFHO0tBQUc7SUFBQztRQUFDO1FBQUc7S0FBRztDQUFDO0FBQUMsU0FBU0MsRUFBRXBILENBQUM7SUFBRSxPQUFPQSxhQUFhcUgsb0JBQWtC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LENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQyxDQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQzZNLEdBQUcvTSxHQUFFLEdBQUUsSUFBR0UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUMsQ0FBQzZNLEdBQUcvTSxHQUFFLEdBQUUsSUFBR0UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUM2TSxHQUFHL00sR0FBRSxHQUFFLElBQUdFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFDLENBQUM2TSxHQUFHL00sR0FBRSxHQUFFLElBQUdFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQyxDQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQyxDQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQzZNLEdBQUcvTSxHQUFFLEdBQUUsSUFBR0UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUMsQ0FBQzZNLEdBQUcvTSxHQUFFLEdBQUUsSUFBR0UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUM2TSxHQUFHL00sR0FBRSxHQUFFLElBQUdFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFDLENBQUM2TSxHQUFHL00sR0FBRSxHQUFFLElBQUdFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQyxDQUFDNk0sR0FBRy9NLEdBQUUsR0FBRSxJQUFHRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBQzZNLEdB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MEksT0FBTztvQkFBQTtvQkFBQyxNQUFNLElBQUlKLE1BQU0sb0RBQWtELDJCQUEyQjdGLE1BQU0sQ0FBQ3ZDO2dCQUFJLEtBQUtzYSxHQUFHdUMsT0FBTztvQkFBQyxPQUFNO3dCQUFDO3dCQUFFc0QsR0FBR3ZnQjtxQkFBRztnQkFBQztvQkFBUSxNQUFNLElBQUl3SSxNQUFNLEdBQUc3RixNQUFNLENBQUM3QyxHQUFFO1lBQW1DO1FBQUM7SUFBRztBQUFHO0FBQUMsSUFBSStsQixLQUFHO0lBQUNDLGdDQUErQmhUO0FBQUUsR0FBRWlULEtBQUc7SUFBQy9jLFdBQVU7UUFBQ2dkLHNCQUFxQjtRQUF1QkMsb0JBQW1CO1FBQXFCQyxxQkFBb0I7SUFBcUI7QUFBQztBQUFrSCIsInNvdXJjZXMiOlsid2VicGFjazovL3lvZ2Fwb3NlcGVyZmVjdC8uL25vZGVfbW9kdWxlcy9AdGVuc29yZmxvdy1tb2RlbHMvcG9zZS1kZXRlY3Rpb24vZGlzdC9wb3NlLWRldGVjdGlvbi5lc20uanM/M2JhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAgICAqIEBsaWNlbnNlXG4gICAgKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICAgICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAgICAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAgICAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgICpcbiAgICAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICAgICpcbiAgICAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAgICAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAgICAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICAgICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICAgICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICovXG5pbXBvcnR7UG9zZSBhcyB0fWZyb21cIkBtZWRpYXBpcGUvcG9zZVwiO2ltcG9ydHtUZW5zb3IgYXMgZSxicm93c2VyIGFzIG4sdXRpbCBhcyBpLHRpZHkgYXMgcixhZGQgYXMgbyxtdWwgYXMgYSx0ZW5zb3IyZCBhcyBzLGltYWdlIGFzIHUsZXhwYW5kRGltcyBhcyBoLGNhc3QgYXMgbCxzbGljZSBhcyBjLHNxdWVlemUgYXMgcCxkaXNwb3NlIGFzIGYsdGVuc29yMWQgYXMgZCxnZXRCYWNrZW5kIGFzIG0sZW5naW5lIGFzIGcsc3ViIGFzIHksc3F1YXJlIGFzIHYsbWluaW11bSBhcyB4LGJhY2tlbmQgYXMgdyxkaXYgYXMgayxleHAgYXMgYixjb25jYXQgYXMgTSxyZXNoYXBlIGFzIFMsY2xpcEJ5VmFsdWUgYXMgVCxzaWdtb2lkIGFzIFAscGFkIGFzIEYsbWlycm9yUGFkIGFzIF8sZW52IGFzIE8semVyb3MgYXMgSSxzY2FsYXIgYXMgQSxhcmdNYXggYXMgen1mcm9tXCJAdGVuc29yZmxvdy90ZmpzLWNvcmVcIjtpbXBvcnR7bG9hZEdyYXBoTW9kZWwgYXMgQ31mcm9tXCJAdGVuc29yZmxvdy90ZmpzLWNvbnZlcnRlclwiO2ltcG9ydHt3ZWJncHVfdXRpbCBhcyBFLFdlYkdQVUJhY2tlbmQgYXMgUn1mcm9tXCJAdGVuc29yZmxvdy90ZmpzLWJhY2tlbmQtd2ViZ3B1XCI7dmFyIEw9ZnVuY3Rpb24odCxlKXtyZXR1cm4oTD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9KSh0LGUpfTtmdW5jdGlvbiBWKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSYmbnVsbCE9PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIrU3RyaW5nKGUpK1wiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7ZnVuY3Rpb24gbigpe3RoaXMuY29uc3RydWN0b3I9dH1MKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKToobi5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IG4pfXZhciBCPWZ1bmN0aW9uKCl7cmV0dXJuKEI9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlLG49MSxpPWFyZ3VtZW50cy5sZW5ndGg7bjxpO24rKylmb3IodmFyIHIgaW4gZT1hcmd1bWVudHNbbl0pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0fSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtmdW5jdGlvbiBOKHQsZSxuLGkpe3JldHVybiBuZXcobnx8KG49UHJvbWlzZSkpKChmdW5jdGlvbihyLG8pe2Z1bmN0aW9uIGEodCl7dHJ5e3UoaS5uZXh0KHQpKX1jYXRjaCh0KXtvKHQpfX1mdW5jdGlvbiBzKHQpe3RyeXt1KGkudGhyb3codCkpfWNhdGNoKHQpe28odCl9fWZ1bmN0aW9uIHUodCl7dmFyIGU7dC5kb25lP3IodC52YWx1ZSk6KGU9dC52YWx1ZSxlIGluc3RhbmNlb2Ygbj9lOm5ldyBuKChmdW5jdGlvbih0KXt0KGUpfSkpKS50aGVuKGEscyl9dSgoaT1pLmFwcGx5KHQsZXx8W10pKS5uZXh0KCkpfSkpfWZ1bmN0aW9uIEQodCxlKXt2YXIgbixpLHIsbyxhPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJnJbMF0pdGhyb3cgclsxXTtyZXR1cm4gclsxXX0sdHJ5czpbXSxvcHM6W119O3JldHVybiBvPXtuZXh0OnMoMCksdGhyb3c6cygxKSxyZXR1cm46cygyKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYob1tTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxvO2Z1bmN0aW9uIHMobyl7cmV0dXJuIGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbihvKXtpZihuKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7YTspdHJ5e2lmKG49MSxpJiYocj0yJm9bMF0/aS5yZXR1cm46b1swXT9pLnRocm93fHwoKHI9aS5yZXR1cm4pJiZyLmNhbGwoaSksMCk6aS5uZXh0KSYmIShyPXIuY2FsbChpLG9bMV0pKS5kb25lKXJldHVybiByO3N3aXRjaChpPTAsciYmKG89WzImb1swXSxyLnZhbHVlXSksb1swXSl7Y2FzZSAwOmNhc2UgMTpyPW87YnJlYWs7Y2FzZSA0OnJldHVybiBhLmxhYmVsKysse3ZhbHVlOm9bMV0sZG9uZTohMX07Y2FzZSA1OmEubGFiZWwrKyxpPW9bMV0sbz1bMF07Y29udGludWU7Y2FzZSA3Om89YS5vcHMucG9wKCksYS50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoIShyPWEudHJ5cywocj1yLmxlbmd0aD4wJiZyW3IubGVuZ3RoLTFdKXx8NiE9PW9bMF0mJjIhPT1vWzBdKSl7YT0wO2NvbnRpbnVlfWlmKDM9PT1vWzBdJiYoIXJ8fG9bMV0+clswXSYmb1sxXTxyWzNdKSl7YS5sYWJlbD1vWzFdO2JyZWFrfWlmKDY9PT1vWzBdJiZhLmxhYmVsPHJbMV0pe2EubGFiZWw9clsxXSxyPW87YnJlYWt9aWYociYmYS5sYWJlbDxyWzJdKXthLmxhYmVsPXJbMl0sYS5vcHMucHVzaChvKTticmVha31yWzJdJiZhLm9wcy5wb3AoKSxhLnRyeXMucG9wKCk7Y29udGludWV9bz1lLmNhbGwodCxhKX1jYXRjaCh0KXtvPVs2LHRdLGk9MH1maW5hbGx5e249cj0wfWlmKDUmb1swXSl0aHJvdyBvWzFdO3JldHVybnt2YWx1ZTpvWzBdP29bMV06dm9pZCAwLGRvbmU6ITB9fShbbyxzXSl9fX1mdW5jdGlvbiBLKHQsZSxuKXtpZihufHwyPT09YXJndW1lbnRzLmxlbmd0aClmb3IodmFyIGkscj0wLG89ZS5sZW5ndGg7cjxvO3IrKykhaSYmciBpbiBlfHwoaXx8KGk9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSwwLHIpKSxpW3JdPWVbcl0pO3JldHVybiB0LmNvbmNhdChpfHxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKSl9dmFyIFU9W1wibm9zZVwiLFwibGVmdF9leWVcIixcInJpZ2h0X2V5ZVwiLFwibGVmdF9lYXJcIixcInJpZ2h0X2VhclwiLFwibGVmdF9zaG91bGRlclwiLFwicmlnaHRfc2hvdWxkZXJcIixcImxlZnRfZWxib3dcIixcInJpZ2h0X2VsYm93XCIsXCJsZWZ0X3dyaXN0XCIsXCJyaWdodF93cmlzdFwiLFwibGVmdF9oaXBcIixcInJpZ2h0X2hpcFwiLFwibGVmdF9rbmVlXCIsXCJyaWdodF9rbmVlXCIsXCJsZWZ0X2Fua2xlXCIsXCJyaWdodF9hbmtsZVwiXSxqPVtcIm5vc2VcIixcImxlZnRfZXllX2lubmVyXCIsXCJsZWZ0X2V5ZVwiLFwibGVmdF9leWVfb3V0ZXJcIixcInJpZ2h0X2V5ZV9pbm5lclwiLFwicmlnaHRfZXllXCIsXCJyaWdodF9leWVfb3V0ZXJcIixcImxlZnRfZWFyXCIsXCJyaWdodF9lYXJcIixcIm1vdXRoX2xlZnRcIixcIm1vdXRoX3JpZ2h0XCIsXCJsZWZ0X3Nob3VsZGVyXCIsXCJyaWdodF9zaG91bGRlclwiLFwibGVmdF9lbGJvd1wiLFwicmlnaHRfZWxib3dcIixcImxlZnRfd3Jpc3RcIixcInJpZ2h0X3dyaXN0XCIsXCJsZWZ0X3Bpbmt5XCIsXCJyaWdodF9waW5reVwiLFwibGVmdF9pbmRleFwiLFwicmlnaHRfaW5kZXhcIixcImxlZnRfdGh1bWJcIixcInJpZ2h0X3RodW1iXCIsXCJsZWZ0X2hpcFwiLFwicmlnaHRfaGlwXCIsXCJsZWZ0X2tuZWVcIixcInJpZ2h0X2tuZWVcIixcImxlZnRfYW5rbGVcIixcInJpZ2h0X2Fua2xlXCIsXCJsZWZ0X2hlZWxcIixcInJpZ2h0X2hlZWxcIixcImxlZnRfZm9vdF9pbmRleFwiLFwicmlnaHRfZm9vdF9pbmRleFwiXSxIPXtsZWZ0OlsxLDIsMyw3LDksMTEsMTMsMTUsMTcsMTksMjEsMjMsMjUsMjcsMjksMzFdLHJpZ2h0Ols0LDUsNiw4LDEwLDEyLDE0LDE2LDE4LDIwLDIyLDI0LDI2LDI4LDMwLDMyXSxtaWRkbGU6WzBdfSxxPXtsZWZ0OlsxLDMsNSw3LDksMTEsMTMsMTVdLHJpZ2h0OlsyLDQsNiw4LDEwLDEyLDE0LDE2XSxtaWRkbGU6WzBdfSxYPVtbMCwxXSxbMCwyXSxbMSwzXSxbMiw0XSxbNSw2XSxbNSw3XSxbNSwxMV0sWzYsOF0sWzYsMTJdLFs3LDldLFs4LDEwXSxbMTEsMTJdLFsxMSwxM10sWzEyLDE0XSxbMTMsMTVdLFsxNCwxNl1dLFk9W1swLDFdLFswLDRdLFsxLDJdLFsyLDNdLFszLDddLFs0LDVdLFs1LDZdLFs2LDhdLFs5LDEwXSxbMTEsMTJdLFsxMSwxM10sWzExLDIzXSxbMTIsMTRdLFsxNCwxNl0sWzEyLDI0XSxbMTMsMTVdLFsxNSwxN10sWzE2LDE4XSxbMTYsMjBdLFsxNSwxN10sWzE1LDE5XSxbMTUsMjFdLFsxNiwyMl0sWzE3LDE5XSxbMTgsMjBdLFsyMywyNV0sWzIzLDI0XSxbMjQsMjZdLFsyNSwyN10sWzI2LDI4XSxbMjcsMjldLFsyOCwzMF0sWzI3LDMxXSxbMjgsMzJdLFsyOSwzMV0sWzMwLDMyXV07ZnVuY3Rpb24gVyh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFNWR0FuaW1hdGVkTGVuZ3RoP3QuYmFzZVZhbC52YWx1ZTp0fWZ1bmN0aW9uIEcodCl7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLHI7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24obyl7c3dpdGNoKG8ubGFiZWwpe2Nhc2UgMDpyZXR1cm4gaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpLHQgaW5zdGFuY2VvZiBlP1s0LG4udG9QaXhlbHModCxpKV06WzMsMl07Y2FzZSAxOnJldHVybiBvLnNlbnQoKSxbMywzXTtjYXNlIDI6aS53aWR0aD1XKHQud2lkdGgpLGkuaGVpZ2h0PVcodC5oZWlnaHQpLHI9aS5nZXRDb250ZXh0KFwiMmRcIiksdCBpbnN0YW5jZW9mIEltYWdlRGF0YT9yLnB1dEltYWdlRGF0YSh0LDAsMCk6ci5kcmF3SW1hZ2UodCwwLDApLG8ubGFiZWw9MztjYXNlIDM6cmV0dXJuWzIsaV19fSkpfSkpfWZ1bmN0aW9uIFEodCl7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLHIsbyxhLHMsdTtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbihoKXtzd2l0Y2goaC5sYWJlbCl7Y2FzZSAwOnJldHVybiB0IGluc3RhbmNlb2YgZT8oaT10LnNoYXBlLnNsaWNlKDAsMikscj1pWzBdLG89aVsxXSxhPUltYWdlRGF0YS5iaW5kLFs0LG4udG9QaXhlbHModCldKTpbMywyXTtjYXNlIDE6cmV0dXJuWzIsbmV3KGEuYXBwbHkoSW1hZ2VEYXRhLFt2b2lkIDAsaC5zZW50KCksbyxyXSkpXTtjYXNlIDI6cmV0dXJuIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSx1PXMuZ2V0Q29udGV4dChcIjJkXCIpLHMud2lkdGg9Vyh0LndpZHRoKSxzLmhlaWdodD1XKHQuaGVpZ2h0KSx1LmRyYXdJbWFnZSh0LDAsMCksWzIsdS5nZXRJbWFnZURhdGEoMCwwLHMud2lkdGgscy5oZWlnaHQpXX19KSl9KSl9ZnVuY3Rpb24gWih0KXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUsaTtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiB0IGluc3RhbmNlb2YgU1ZHSW1hZ2VFbGVtZW50fHx0IGluc3RhbmNlb2YgT2Zmc2NyZWVuQ2FudmFzP1s0LEcodCldOlszLDJdO2Nhc2UgMTpyZXR1cm4gaT1yLnNlbnQoKSxbMywzXTtjYXNlIDI6aT10LHIubGFiZWw9MztjYXNlIDM6cmV0dXJuIGU9aSxbMixuLmZyb21QaXhlbHMoZSw0KV19fSkpfSkpfWZ1bmN0aW9uICQodCl7aWYodDwwfHx0Pj0yNTYpdGhyb3cgbmV3IEVycm9yKFwiTWFzayB2YWx1ZSBtdXN0IGJlIGluIHJhbmdlIFswLCAyNTVdIGJ1dCBnb3QgXCIuY29uY2F0KHQpKTtpZighTnVtYmVyLmlzSW50ZWdlcih0KSl0aHJvdyBuZXcgRXJyb3IoXCJNYXNrIHZhbHVlIG11c3QgYmUgYW4gaW50ZWdlciBidXQgZ290IFwiLmNvbmNhdCh0KSl9dmFyIEo9e3J1bnRpbWU6XCJtZWRpYXBpcGVcIixlbmFibGVTbW9vdGhpbmc6ITAsZW5hYmxlU2VnbWVudGF0aW9uOiExLHNtb290aFNlZ21lbnRhdGlvbjohMCxtb2RlbFR5cGU6XCJmdWxsXCJ9O3ZhciB0dD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dGhpcy5tYXNrPXR9cmV0dXJuIHQucHJvdG90eXBlLnRvQ2FudmFzSW1hZ2VTb3VyY2U9ZnVuY3Rpb24oKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24odCl7cmV0dXJuWzIsdGhpcy5tYXNrXX0pKX0pKX0sdC5wcm90b3R5cGUudG9JbWFnZURhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24odCl7cmV0dXJuWzIsUSh0aGlzLm1hc2spXX0pKX0pKX0sdC5wcm90b3R5cGUudG9UZW5zb3I9ZnVuY3Rpb24oKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24odCl7cmV0dXJuWzIsWih0aGlzLm1hc2spXX0pKX0pKX0sdC5wcm90b3R5cGUuZ2V0VW5kZXJseWluZ1R5cGU9ZnVuY3Rpb24oKXtyZXR1cm5cImNhbnZhc2ltYWdlc291cmNlXCJ9LHR9KCk7ZnVuY3Rpb24gZXQodCl7cmV0dXJuICQodCksXCJwZXJzb25cIn12YXIgbnQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBpKGUpe3ZhciBuLGk9dGhpcztzd2l0Y2godGhpcy53aWR0aD0wLHRoaXMuaGVpZ2h0PTAsdGhpcy5zZWxmaWVNb2RlPSExLHRoaXMucG9zZVNvbHV0aW9uPW5ldyB0KHtsb2NhdGVGaWxlOmZ1bmN0aW9uKHQsbil7aWYoZS5zb2x1dGlvblBhdGgpe3ZhciBpPWUuc29sdXRpb25QYXRoLnJlcGxhY2UoL1xcLyskLyxcIlwiKTtyZXR1cm5cIlwiLmNvbmNhdChpLFwiL1wiKS5jb25jYXQodCl9cmV0dXJuXCJcIi5jb25jYXQobixcIi9cIikuY29uY2F0KHQpfX0pLGUubW9kZWxUeXBlKXtjYXNlXCJsaXRlXCI6bj0wO2JyZWFrO2Nhc2VcImhlYXZ5XCI6bj0yO2JyZWFrO2Nhc2VcImZ1bGxcIjpkZWZhdWx0Om49MX10aGlzLnBvc2VTb2x1dGlvbi5zZXRPcHRpb25zKHttb2RlbENvbXBsZXhpdHk6bixzbW9vdGhMYW5kbWFya3M6ZS5lbmFibGVTbW9vdGhpbmcsZW5hYmxlU2VnbWVudGF0aW9uOmUuZW5hYmxlU2VnbWVudGF0aW9uLHNtb290aFNlZ21lbnRhdGlvbjplLnNtb290aFNlZ21lbnRhdGlvbixzZWxmaWVNb2RlOnRoaXMuc2VsZmllTW9kZX0pLHRoaXMucG9zZVNvbHV0aW9uLm9uUmVzdWx0cygoZnVuY3Rpb24odCl7aWYoaS5oZWlnaHQ9dC5pbWFnZS5oZWlnaHQsaS53aWR0aD10LmltYWdlLndpZHRoLG51bGw9PXQucG9zZUxhbmRtYXJrcylpLnBvc2VzPVtdO2Vsc2V7dmFyIGU9aS50cmFuc2xhdGVPdXRwdXQodC5wb3NlTGFuZG1hcmtzLHQucG9zZVdvcmxkTGFuZG1hcmtzKTt0LnNlZ21lbnRhdGlvbk1hc2smJihlLnNlZ21lbnRhdGlvbj17bWFza1ZhbHVlVG9MYWJlbDpldCxtYXNrOm5ldyB0dCh0LnNlZ21lbnRhdGlvbk1hc2spfSksaS5wb3Nlcz1bZV19fSkpfXJldHVybiBpLnByb3RvdHlwZS50cmFuc2xhdGVPdXRwdXQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9e2tleXBvaW50czp0Lm1hcCgoZnVuY3Rpb24odCxlKXtyZXR1cm57eDp0Lngqbi53aWR0aCx5OnQueSpuLmhlaWdodCx6OnQueixzY29yZTp0LnZpc2liaWxpdHksbmFtZTpqW2VdfX0pKX07cmV0dXJuIG51bGwhPWUmJihpLmtleXBvaW50czNEPWUubWFwKChmdW5jdGlvbih0LGUpe3JldHVybnt4OnQueCx5OnQueSx6OnQueixzY29yZTp0LnZpc2liaWxpdHksbmFtZTpqW2VdfX0pKSksaX0saS5wcm90b3R5cGUuZXN0aW1hdGVQb3Nlcz1mdW5jdGlvbih0LGkscil7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBvLGE7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24ocyl7c3dpdGNoKHMubGFiZWwpe2Nhc2UgMDpyZXR1cm4gaSYmaS5mbGlwSG9yaXpvbnRhbCYmaS5mbGlwSG9yaXpvbnRhbCE9PXRoaXMuc2VsZmllTW9kZSYmKHRoaXMuc2VsZmllTW9kZT1pLmZsaXBIb3Jpem9udGFsLHRoaXMucG9zZVNvbHV0aW9uLnNldE9wdGlvbnMoe3NlbGZpZU1vZGU6dGhpcy5zZWxmaWVNb2RlfSkpLHQgaW5zdGFuY2VvZiBlPyhhPUltYWdlRGF0YS5iaW5kLFs0LG4udG9QaXhlbHModCldKTpbMywyXTtjYXNlIDE6cmV0dXJuIG89bmV3KGEuYXBwbHkoSW1hZ2VEYXRhLFt2b2lkIDAscy5zZW50KCksdC5zaGFwZVsxXSx0LnNoYXBlWzBdXSkpLFszLDNdO2Nhc2UgMjpvPXQscy5sYWJlbD0zO2Nhc2UgMzpyZXR1cm4gdD1vLFs0LHRoaXMucG9zZVNvbHV0aW9uLnNlbmQoe2ltYWdlOnR9LHIpXTtjYXNlIDQ6cmV0dXJuIHMuc2VudCgpLFsyLHRoaXMucG9zZXNdfX0pKX0pKX0saS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMucG9zZVNvbHV0aW9uLmNsb3NlKCl9LGkucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5wb3NlU29sdXRpb24ucmVzZXQoKX0saS5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBvc2VTb2x1dGlvbi5pbml0aWFsaXplKCl9LGl9KCk7ZnVuY3Rpb24gaXQodCl7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlLG47cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oaSl7c3dpdGNoKGkubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1mdW5jdGlvbih0KXtpZihudWxsPT10KXJldHVybiBCKHt9LEopO3ZhciBlPUIoe30sdCk7cmV0dXJuIGUucnVudGltZT1cIm1lZGlhcGlwZVwiLG51bGw9PWUuZW5hYmxlU2VnbWVudGF0aW9uJiYoZS5lbmFibGVTZWdtZW50YXRpb249Si5lbmFibGVTZWdtZW50YXRpb24pLG51bGw9PWUuZW5hYmxlU21vb3RoaW5nJiYoZS5lbmFibGVTbW9vdGhpbmc9Si5lbmFibGVTbW9vdGhpbmcpLG51bGw9PWUuc21vb3RoU2VnbWVudGF0aW9uJiYoZS5zbW9vdGhTZWdtZW50YXRpb249Si5zbW9vdGhTZWdtZW50YXRpb24pLG51bGw9PWUubW9kZWxUeXBlJiYoZS5tb2RlbFR5cGU9Si5tb2RlbFR5cGUpLGV9KHQpLFs0LChuPW5ldyBudChlKSkuaW5pdGlhbGl6ZSgpXTtjYXNlIDE6cmV0dXJuIGkuc2VudCgpLFsyLG5dfX0pKX0pKX1mdW5jdGlvbiBydCh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGU/e2hlaWdodDp0LnNoYXBlWzBdLHdpZHRoOnQuc2hhcGVbMV19OntoZWlnaHQ6dC5oZWlnaHQsd2lkdGg6dC53aWR0aH19ZnVuY3Rpb24gb3QodCl7cmV0dXJuIHQtMipNYXRoLlBJKk1hdGguZmxvb3IoKHQrTWF0aC5QSSkvKDIqTWF0aC5QSSkpfWZ1bmN0aW9uIGF0KHQpe3JldHVybiB0IGluc3RhbmNlb2YgZT90Om4uZnJvbVBpeGVscyh0KX1mdW5jdGlvbiBzdCh0LGUsbil7cmV0dXJuIHV0KG4sXCJpbnB1dFJlc29sdXRpb25cIiksWzEvbi53aWR0aCp0WzBdWzBdKmUud2lkdGgsMS9uLmhlaWdodCp0WzBdWzFdKmUud2lkdGgsdFswXVszXSplLndpZHRoLDEvbi53aWR0aCp0WzFdWzBdKmUuaGVpZ2h0LDEvbi5oZWlnaHQqdFsxXVsxXSplLmhlaWdodCx0WzFdWzNdKmUuaGVpZ2h0LDAsMF19ZnVuY3Rpb24gdXQodCxlKXtpLmFzc2VydCgwIT09dC53aWR0aCwoZnVuY3Rpb24oKXtyZXR1cm5cIlwiLmNvbmNhdChlLFwiIHdpZHRoIGNhbm5vdCBiZSAwLlwiKX0pKSxpLmFzc2VydCgwIT09dC5oZWlnaHQsKGZ1bmN0aW9uKCl7cmV0dXJuXCJcIi5jb25jYXQoZSxcIiBoZWlnaHQgY2Fubm90IGJlIDAuXCIpfSkpfWZ1bmN0aW9uIGh0KHQsZSxuKXt2YXIgaT1uLnJvdGF0aW9uVmVjdG9yU3RhcnRLZXlwb2ludEluZGV4LHI9bi5yb3RhdGlvblZlY3RvckVuZEtleXBvaW50SW5kZXgsbz10LmxvY2F0aW9uRGF0YSxhPW8ucmVsYXRpdmVLZXlwb2ludHNbaV0ueCplLndpZHRoLHM9by5yZWxhdGl2ZUtleXBvaW50c1tpXS55KmUuaGVpZ2h0LHU9by5yZWxhdGl2ZUtleXBvaW50c1tyXS54KmUud2lkdGgsaD1vLnJlbGF0aXZlS2V5cG9pbnRzW3JdLnkqZS5oZWlnaHQsbD0yKk1hdGguc3FydCgodS1hKSoodS1hKSsoaC1zKSooaC1zKSksYz1mdW5jdGlvbih0LGUsbil7dmFyIGkscj10LmxvY2F0aW9uRGF0YSxvPW4ucm90YXRpb25WZWN0b3JTdGFydEtleXBvaW50SW5kZXgsYT1uLnJvdGF0aW9uVmVjdG9yRW5kS2V5cG9pbnRJbmRleDtpPW4ucm90YXRpb25WZWN0b3JUYXJnZXRBbmdsZT9uLnJvdGF0aW9uVmVjdG9yVGFyZ2V0QW5nbGU6TWF0aC5QSSpuLnJvdGF0aW9uVmVjdG9yVGFyZ2V0QW5nbGVEZWdyZWUvMTgwO3ZhciBzPXIucmVsYXRpdmVLZXlwb2ludHNbb10ueCplLndpZHRoLHU9ci5yZWxhdGl2ZUtleXBvaW50c1tvXS55KmUuaGVpZ2h0LGg9ci5yZWxhdGl2ZUtleXBvaW50c1thXS54KmUud2lkdGgsbD1yLnJlbGF0aXZlS2V5cG9pbnRzW2FdLnkqZS5oZWlnaHQ7cmV0dXJuIG90KGktTWF0aC5hdGFuMigtKGwtdSksaC1zKSl9KHQsZSxuKTtyZXR1cm57eENlbnRlcjphL2Uud2lkdGgseUNlbnRlcjpzL2UuaGVpZ2h0LHdpZHRoOmwvZS53aWR0aCxoZWlnaHQ6bC9lLmhlaWdodCxyb3RhdGlvbjpjfX1mdW5jdGlvbiBsdCh0KXtpZigxNiE9PXQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkFycmF5IGxlbmd0aCBtdXN0IGJlIDE2IGJ1dCBnb3QgXCIuY29uY2F0KHQubGVuZ3RoKSk7cmV0dXJuW1t0WzBdLHRbMV0sdFsyXSx0WzNdXSxbdFs0XSx0WzVdLHRbNl0sdFs3XV0sW3RbOF0sdFs5XSx0WzEwXSx0WzExXV0sW3RbMTJdLHRbMTNdLHRbMTRdLHRbMTVdXV19ZnVuY3Rpb24gY3QodCxlLG4saSxyLG8sYSl7cmV0dXJuIHRbZV1bcl0qKHRbbl1bb10qdFtpXVthXS10W25dW2FdKnRbaV1bb10pfWZ1bmN0aW9uIHB0KHQsZSxuKXt2YXIgaT0oZSsxKSU0LHI9KGUrMiklNCxvPShlKzMpJTQsYT0obisxKSU0LHM9KG4rMiklNCx1PShuKzMpJTQ7cmV0dXJuIGN0KHQsaSxyLG8sYSxzLHUpK2N0KHQscixvLGksYSxzLHUpK2N0KHQsbyxpLHIsYSxzLHUpfWZ1bmN0aW9uIGZ0KHQsZSxuKXt2b2lkIDA9PT1uJiYobj17aWdub3JlUm90YXRpb246ITF9KTtmb3IodmFyIGk9W10scj0wLG89dDtyPG8ubGVuZ3RoO3IrKyl7dmFyIGE9b1tyXSxzPWEueC0uNSx1PWEueS0uNSxoPW4uaWdub3JlUm90YXRpb24/MDplLnJvdGF0aW9uLGw9TWF0aC5jb3MoaCkqcy1NYXRoLnNpbihoKSp1LGM9TWF0aC5zaW4oaCkqcytNYXRoLmNvcyhoKSp1O2w9bCplLndpZHRoK2UueENlbnRlcixjPWMqZS5oZWlnaHQrZS55Q2VudGVyO3ZhciBwPWEueiplLndpZHRoLGY9Qih7fSxhKTtmLng9bCxmLnk9YyxmLno9cCxpLnB1c2goZil9cmV0dXJuIGl9ZnVuY3Rpb24gZHQodCxlKXt2YXIgbj1mdW5jdGlvbih0LGUsbixpKXt2YXIgcj1lLXQsbz1pLW47aWYoMD09PXIpdGhyb3cgbmV3IEVycm9yKFwiT3JpZ2luYWwgbWluIGFuZCBtYXggYXJlIGJvdGggXCIuY29uY2F0KHQsXCIsIHJhbmdlIGNhbm5vdCBiZSAwLlwiKSk7dmFyIGE9by9yO3JldHVybntzY2FsZTphLG9mZnNldDpuLXQqYX19KDAsMjU1LGVbMF0sZVsxXSk7cmV0dXJuIHIoKGZ1bmN0aW9uKCl7cmV0dXJuIG8oYSh0LG4uc2NhbGUpLG4ub2Zmc2V0KX0pKX1mdW5jdGlvbiBtdCh0LGUsbil7dmFyIGksbyxhLGMscCxmLGQsbSxnLHksdix4LHcsayxiPWUub3V0cHV0VGVuc29yU2l6ZSxNPWUua2VlcEFzcGVjdFJhdGlvLFM9ZS5ib3JkZXJNb2RlLFQ9ZS5vdXRwdXRUZW5zb3JGbG9hdFJhbmdlLFA9cnQodCksRj1mdW5jdGlvbih0LGUpe3JldHVybiBlP3t4Q2VudGVyOmUueENlbnRlcip0LndpZHRoLHlDZW50ZXI6ZS55Q2VudGVyKnQuaGVpZ2h0LHdpZHRoOmUud2lkdGgqdC53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQqdC5oZWlnaHQscm90YXRpb246ZS5yb3RhdGlvbn06e3hDZW50ZXI6LjUqdC53aWR0aCx5Q2VudGVyOi41KnQuaGVpZ2h0LHdpZHRoOnQud2lkdGgsaGVpZ2h0OnQuaGVpZ2h0LHJvdGF0aW9uOjB9fShQLG4pLF89ZnVuY3Rpb24odCxlLG4pe2lmKHZvaWQgMD09PW4mJihuPSExKSwhbilyZXR1cm57dG9wOjAsbGVmdDowLHJpZ2h0OjAsYm90dG9tOjB9O3ZhciBpPWUuaGVpZ2h0LHI9ZS53aWR0aDt1dChlLFwidGFyZ2V0U2l6ZVwiKSx1dCh0LFwicm9pXCIpO3ZhciBvLGEscz1pL3IsdT10LmhlaWdodC90LndpZHRoLGg9MCxsPTA7cmV0dXJuIHM+dT8obz10LndpZHRoLGE9dC53aWR0aCpzLGw9KDEtdS9zKS8yKToobz10LmhlaWdodC9zLGE9dC5oZWlnaHQsaD0oMS1zL3UpLzIpLHQud2lkdGg9byx0LmhlaWdodD1hLHt0b3A6bCxsZWZ0OmgscmlnaHQ6aCxib3R0b206bH19KEYsYixNKSxPPShpPUYsbz1QLndpZHRoLGE9UC5oZWlnaHQsYz0hMSxwPWkud2lkdGgsZj1pLmhlaWdodCxkPWM/LTE6MSxtPU1hdGguY29zKGkucm90YXRpb24pLGc9TWF0aC5zaW4oaS5yb3RhdGlvbikseT1pLnhDZW50ZXIsdj1pLnlDZW50ZXIseD0xL28sdz0xL2EsKGs9bmV3IEFycmF5KDE2KSlbMF09cCptKmQqeCxrWzFdPS1mKmcqeCxrWzJdPTAsa1szXT0oLS41KnAqbSpkKy41KmYqZyt5KSp4LGtbNF09cCpnKmQqdyxrWzVdPWYqbSp3LGtbNl09MCxrWzddPSgtLjUqZiptLS41KnAqZypkK3YpKncsa1s4XT0wLGtbOV09MCxrWzEwXT1wKngsa1sxMV09MCxrWzEyXT0wLGtbMTNdPTAsa1sxNF09MCxrWzE1XT0xLGx0KGspKTtyZXR1cm57aW1hZ2VUZW5zb3I6cigoZnVuY3Rpb24oKXt2YXIgZT1hdCh0KSxuPXMoc3QoTyxQLGIpLFsxLDhdKSxpPVwiemVyb1wiPT09Uz9cImNvbnN0YW50XCI6XCJuZWFyZXN0XCIscj11LnRyYW5zZm9ybShoKGwoZSxcImZsb2F0MzJcIikpLG4sXCJiaWxpbmVhclwiLGksMCxbYi5oZWlnaHQsYi53aWR0aF0pO3JldHVybiBudWxsIT1UP2R0KHIsVCk6cn0pKSxwYWRkaW5nOl8sdHJhbnNmb3JtYXRpb25NYXRyaXg6T319ZnVuY3Rpb24gZ3QodCxlLG4saSl7cmV0dXJuIDE9PT1pPy41Kih0K2UpOnQrKGUtdCkqbi8oaS0xKX1mdW5jdGlvbiB5dCh0KXtyZXR1cm4gcigoZnVuY3Rpb24oKXt2YXIgZT1mdW5jdGlvbih0KXtyZXR1cm4gcigoZnVuY3Rpb24oKXtyZXR1cm5bYyh0LFswLDAsMF0sWzEsLTEsMV0pLGModCxbMCwwLDFdLFsxLC0xLC0xXSldfSkpfSh0KSxuPWVbMF0saT1lWzFdO3JldHVybntib3hlczpwKGkpLGxvZ2l0czpwKG4pfX0pKX1mdW5jdGlvbiB2dCh0KXtyZXR1cm4gbnVsbCE9dCYmbnVsbCE9dC5jdXJyZW50VGltZX1mdW5jdGlvbiB4dCh0KXtmb3IodmFyIGU9e2xvY2F0aW9uRGF0YTp7cmVsYXRpdmVLZXlwb2ludHM6W119fSxuPU51bWJlci5NQVhfU0FGRV9JTlRFR0VSLGk9TnVtYmVyLk1JTl9TQUZFX0lOVEVHRVIscj1OdW1iZXIuTUFYX1NBRkVfSU5URUdFUixvPU51bWJlci5NSU5fU0FGRV9JTlRFR0VSLGE9MDthPHQubGVuZ3RoOysrYSl7dmFyIHM9dFthXTtuPU1hdGgubWluKG4scy54KSxpPU1hdGgubWF4KGkscy54KSxyPU1hdGgubWluKHIscy55KSxvPU1hdGgubWF4KG8scy55KSxlLmxvY2F0aW9uRGF0YS5yZWxhdGl2ZUtleXBvaW50cy5wdXNoKHt4OnMueCx5OnMueX0pfXJldHVybiBlLmxvY2F0aW9uRGF0YS5yZWxhdGl2ZUJvdW5kaW5nQm94PXt4TWluOm4seU1pbjpyLHhNYXg6aSx5TWF4Om8sd2lkdGg6aS1uLGhlaWdodDpvLXJ9LGV9ZnVuY3Rpb24gd3QodCxlLG4saSl7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLHIsbyxhLGg7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24obCl7c3dpdGNoKGwubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdC5zb3J0KChmdW5jdGlvbih0LGUpe3JldHVybiBNYXRoLm1heC5hcHBseShNYXRoLGUuc2NvcmUpLU1hdGgubWF4LmFwcGx5KE1hdGgsdC5zY29yZSl9KSksaT1zKHQubWFwKChmdW5jdGlvbih0KXtyZXR1cm5bdC5sb2NhdGlvbkRhdGEucmVsYXRpdmVCb3VuZGluZ0JveC55TWluLHQubG9jYXRpb25EYXRhLnJlbGF0aXZlQm91bmRpbmdCb3gueE1pbix0LmxvY2F0aW9uRGF0YS5yZWxhdGl2ZUJvdW5kaW5nQm94LnlNYXgsdC5sb2NhdGlvbkRhdGEucmVsYXRpdmVCb3VuZGluZ0JveC54TWF4XX0pKSkscj1kKHQubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5zY29yZVswXX0pKSksWzQsdS5ub25NYXhTdXBwcmVzc2lvbkFzeW5jKGkscixlLG4pXTtjYXNlIDE6cmV0dXJuWzQsKG89bC5zZW50KCkpLmFycmF5KCldO2Nhc2UgMjpyZXR1cm4gYT1sLnNlbnQoKSxoPXQuZmlsdGVyKChmdW5jdGlvbih0LGUpe3JldHVybiBhLmluZGV4T2YoZSk+LTF9KSksZihbaSxyLG9dKSxbMixoXX19KSl9KSl9ZnVuY3Rpb24ga3QodCxlKXtyZXR1cm4gdC5tYXAoKGZ1bmN0aW9uKHQpe3ZhciBuPUIoQih7fSx0KSx7eDp0LngqZS53aWR0aCx5OnQueSplLmhlaWdodH0pO3JldHVybiBudWxsIT10LnomJihuLno9dC56KmUud2lkdGgpLG59KSl9ZnVuY3Rpb24gYnQodCxlLG4pe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgaSxyLG8sYSxzLHUsaCxsLGMsZixkLG0sZyx5LHYseCx3LGssYixNLFMsVCxQLEY7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oXyl7c3dpdGNoKF8ubGFiZWwpe2Nhc2UgMDppZihpPXAoZSxbMF0pLHI9aS5zaGFwZSxvPXJbMF0sYT1yWzFdLHM9clsyXSx0Lmxlbmd0aCE9PXMpdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgaGVhdG1hcCB0byBoYXZlIHNhbWUgbnVtYmVyIG9mIGNoYW5uZWxzIGFzIHRoZSBudW1iZXIgb2YgbGFuZG1hcmtzLiBCdXQgZ290IGxhbmRtYXJrcyBsZW5ndGg6IFwiK1wiXCIuY29uY2F0KHQubGVuZ3RoLFwiLCBoZWF0bWFwIGxlbmd0aDogXCIpLmNvbmNhdChzKSk7cmV0dXJuIHU9W10sWzQsaS5idWZmZXIoKV07Y2FzZSAxOmZvcihoPV8uc2VudCgpLGw9MDtsPHQubGVuZ3RoO2wrKylpZihjPXRbbF0sZj1CKHt9LGMpLHUucHVzaChmKSxkPU1hdGgudHJ1bmMoZi54KmEpLG09TWF0aC50cnVuYyhmLnkqbyksIShkPDB8fGQ+PWF8fG08MHx8ZD49bykpe2ZvcihnPU1hdGgudHJ1bmMoKG4ua2VybmVsU2l6ZS0xKS8yKSx5PU1hdGgubWF4KDAsZC1nKSx2PU1hdGgubWluKGEsZCtnKzEpLHg9TWF0aC5tYXgoMCxtLWcpLHc9TWF0aC5taW4obyxtK2crMSksaz0wLGI9MCxNPTAsUz0wLFQ9eDtUPHc7KytUKWZvcihQPXk7UDx2OysrUClGPWguZ2V0KFQsUCxsKSxrKz1GLFM9TWF0aC5tYXgoUyxGKSxiKz1QKkYsTSs9VCpGO1M+PW4ubWluQ29uZmlkZW5jZVRvUmVmaW5lJiZrPjAmJihmLng9Yi9hL2ssZi55PU0vby9rKX1yZXR1cm4gaS5kaXNwb3NlKCksWzIsdV19fSkpfSkpfWZ1bmN0aW9uIE10KHQsZSl7dmFyIG49ZS5sZWZ0LGk9ZS50b3Ascj1lLmxlZnQrZS5yaWdodCxvPWUudG9wK2UuYm90dG9tO3JldHVybiB0Lm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIEIoQih7fSx0KSx7eDoodC54LW4pLygxLXIpLHk6KHQueS1pKS8oMS1vKSx6OnQuei8oMS1yKX0pfSkpfWZ1bmN0aW9uIFN0KHQsZSxuKXtyZXR1cm5cIndlYmdsXCI9PT1tKCk/ZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4uY29tYmluZVdpdGhQcmV2aW91c1JhdGlvLnRvRml4ZWQoMiksbz17dmFyaWFibGVOYW1lczpbXCJwcmV2TWFza1wiLFwibmV3TWFza1wiXSxvdXRwdXRTaGFwZTp0LnNoYXBlLHVzZXJDb2RlOlwiXFxuICB2b2lkIG1haW4oKSB7XFxuICAgICAgaXZlYzIgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XFxuICAgICAgaW50IGhlaWdodCA9IGNvb3Jkc1swXTtcXG4gICAgICBpbnQgd2lkdGggPSBjb29yZHNbMV07XFxuXFxuICAgICAgZmxvYXQgcHJldk1hc2tWYWx1ZSA9IGdldFByZXZNYXNrKGhlaWdodCwgd2lkdGgpO1xcbiAgICAgIGZsb2F0IG5ld01hc2tWYWx1ZSA9IGdldE5ld01hc2soaGVpZ2h0LCB3aWR0aCk7XFxuXFxuICAgICAgLypcXG4gICAgICAqIEFzc3VtZSBwIDo9IG5ld01hc2tWYWx1ZVxcbiAgICAgICogSChwKSA6PSAxICsgKHAgKiBsb2cocCkgKyAoMS1wKSAqIGxvZygxLXApKSAvIGxvZygyKVxcbiAgICAgICogdW5jZXJ0YWludHkgYWxwaGEocCkgPVxcbiAgICAgICogICBDbGFtcCgxIC0gKDEgLSBIKHApKSAqICgxIC0gSChwKSksIDAsIDEpIFtzcXVhcmluZyB0aGVcXG4gICAgICAqIHVuY2VydGFpbnR5XVxcbiAgICAgICpcXG4gICAgICAqIFRoZSBmb2xsb3dpbmcgcG9seW5vbWlhbCBhcHByb3hpbWF0ZXMgdW5jZXJ0YWludHkgYWxwaGEgYXMgYVxcbiAgICAgICogZnVuY3Rpb24gb2YgKHAgKyAwLjUpOlxcbiAgICAgICovXFxuICAgICAgY29uc3QgZmxvYXQgYzEgPSA1LjY4ODQyO1xcbiAgICAgIGNvbnN0IGZsb2F0IGMyID0gLTAuNzQ4Njk5O1xcbiAgICAgIGNvbnN0IGZsb2F0IGMzID0gLTU3LjgwNTE7XFxuICAgICAgY29uc3QgZmxvYXQgYzQgPSAyOTEuMzA5O1xcbiAgICAgIGNvbnN0IGZsb2F0IGM1ID0gLTYyNC43MTc7XFxuICAgICAgZmxvYXQgdCA9IG5ld01hc2tWYWx1ZSAtIDAuNTtcXG4gICAgICBmbG9hdCB4ID0gdCAqIHQ7XFxuXFxuICAgICAgZmxvYXQgdW5jZXJ0YWludHkgPVxcbiAgICAgICAgMS4wIC0gbWluKDEuMCwgeCAqIChjMSArIHggKiAoYzIgKyB4ICogKGMzICsgeCAqIChjNCArIHggKiBjNSkpKSkpO1xcblxcbiAgICAgIGZsb2F0IG91dHB1dFZhbHVlID0gbmV3TWFza1ZhbHVlICsgKHByZXZNYXNrVmFsdWUgLSBuZXdNYXNrVmFsdWUpICpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICh1bmNlcnRhaW50eSAqIFwiLmNvbmNhdChpLFwiKTtcXG5cXG4gICAgICBzZXRPdXRwdXQob3V0cHV0VmFsdWUpO1xcbiAgICB9XFxuXCIpfSxhPXcoKTtyZXR1cm4gcigoZnVuY3Rpb24oKXt2YXIgbj1hLmNvbXBpbGVBbmRSdW4obyxbdCxlXSk7cmV0dXJuIGcoKS5tYWtlVGVuc29yRnJvbURhdGFJZChuLmRhdGFJZCxuLnNoYXBlLG4uZHR5cGUpfSkpfSh0LGUsbik6cigoZnVuY3Rpb24oKXt2YXIgaT15KGUsLjUpLHI9dihpKSxzPXkoMSx4KDEsYShyLG8oNS42ODg0MixhKHIsbygtLjc0ODY5OSxhKHIsbygtNTcuODA1MSxhKHIsbygyOTEuMzA5LGEociwtNjI0LjcxNykpKSkpKSkpKSkpO3JldHVybiBvKGUsYSh5KHQsZSksYShzLG4uY29tYmluZVdpdGhQcmV2aW91c1JhdGlvKSkpfSkpfWZ1bmN0aW9uIFR0KHQsZSxuKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGkscyx1LGgsbDtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbihkKXtzd2l0Y2goZC5sYWJlbCl7Y2FzZSAwOnJldHVybiBpPXRbMF0scz10WzFdLHU9ZnVuY3Rpb24odCxlLG4pe3JldHVybiByKChmdW5jdGlvbigpe3ZhciBpLHIscyx1O24ucmV2ZXJzZU91dHB1dE9yZGVyPyhyPXAoYyh0LFswLG4uYm94Q29vcmRPZmZzZXQrMF0sWy0xLDFdKSksaT1wKGModCxbMCxuLmJveENvb3JkT2Zmc2V0KzFdLFstMSwxXSkpLHU9cChjKHQsWzAsbi5ib3hDb29yZE9mZnNldCsyXSxbLTEsMV0pKSxzPXAoYyh0LFswLG4uYm94Q29vcmRPZmZzZXQrM10sWy0xLDFdKSkpOihpPXAoYyh0LFswLG4uYm94Q29vcmRPZmZzZXQrMF0sWy0xLDFdKSkscj1wKGModCxbMCxuLmJveENvb3JkT2Zmc2V0KzFdLFstMSwxXSkpLHM9cChjKHQsWzAsbi5ib3hDb29yZE9mZnNldCsyXSxbLTEsMV0pKSx1PXAoYyh0LFswLG4uYm94Q29vcmRPZmZzZXQrM10sWy0xLDFdKSkpLHI9byhhKGsocixuLnhTY2FsZSksZS53KSxlLngpLGk9byhhKGsoaSxuLnlTY2FsZSksZS5oKSxlLnkpLG4uYXBwbHlFeHBvbmVudGlhbE9uQm94U2l6ZT8ocz1hKGIoayhzLG4uaFNjYWxlKSksZS5oKSx1PWEoYihrKHUsbi53U2NhbGUpKSxlLncpKToocz1hKGsocyxuLmhTY2FsZSksZS5oKSx1PWEoayh1LG4ud1NjYWxlKSxlLmgpKTt2YXIgaD15KGksayhzLDIpKSxsPXkocixrKHUsMikpLGY9byhpLGsocywyKSksZD1vKHIsayh1LDIpKSxtPU0oW1MoaCxbbi5udW1Cb3hlcywxXSksUyhsLFtuLm51bUJveGVzLDFdKSxTKGYsW24ubnVtQm94ZXMsMV0pLFMoZCxbbi5udW1Cb3hlcywxXSldLDEpO2lmKG4ubnVtS2V5cG9pbnRzKWZvcih2YXIgZz0wO2c8bi5udW1LZXlwb2ludHM7KytnKXt2YXIgdj1uLmtleXBvaW50Q29vcmRPZmZzZXQrZypuLm51bVZhbHVlc1BlcktleXBvaW50LHg9dm9pZCAwLHc9dm9pZCAwO24ucmV2ZXJzZU91dHB1dE9yZGVyPyh4PXAoYyh0LFswLHZdLFstMSwxXSkpLHc9cChjKHQsWzAsdisxXSxbLTEsMV0pKSk6KHc9cChjKHQsWzAsdl0sWy0xLDFdKSkseD1wKGModCxbMCx2KzFdLFstMSwxXSkpKTt2YXIgVD1vKGEoayh4LG4ueFNjYWxlKSxlLncpLGUueCksUD1vKGEoayh3LG4ueVNjYWxlKSxlLmgpLGUueSk7bT1NKFttLFMoVCxbbi5udW1Cb3hlcywxXSksUyhQLFtuLm51bUJveGVzLDFdKV0sMSl9cmV0dXJuIG19KSl9KHMsZSxuKSxoPXIoKGZ1bmN0aW9uKCl7dmFyIHQ9aTtyZXR1cm4gbi5zaWdtb2lkU2NvcmU/KG51bGwhPW4uc2NvcmVDbGlwcGluZ1RocmVzaCYmKHQ9VChpLC1uLnNjb3JlQ2xpcHBpbmdUaHJlc2gsbi5zY29yZUNsaXBwaW5nVGhyZXNoKSksdD1QKHQpKTp0fSkpLFs0LFB0KHUsaCxuKV07Y2FzZSAxOnJldHVybiBsPWQuc2VudCgpLGYoW3UsaF0pLFsyLGxdfX0pKX0pKX1mdW5jdGlvbiBQdCh0LGUsbil7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLHIsbyxhLHMsdSxoLGwsYyxwLGYsZDtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbihtKXtzd2l0Y2gobS5sYWJlbCl7Y2FzZSAwOnJldHVybiBpPVtdLFs0LHQuZGF0YSgpXTtjYXNlIDE6cmV0dXJuIHI9bS5zZW50KCksWzQsZS5kYXRhKCldO2Nhc2UgMjpmb3Iobz1tLnNlbnQoKSxhPTA7YTxuLm51bUJveGVzOysrYSlpZighKG51bGwhPW4ubWluU2NvcmVUaHJlc2gmJm9bYV08bi5taW5TY29yZVRocmVzaHx8KHM9YSpuLm51bUNvb3Jkcyx1PUZ0KHJbcyswXSxyW3MrMV0scltzKzJdLHJbcyszXSxvW2FdLG4uZmxpcFZlcnRpY2FsbHksYSksKGg9dS5sb2NhdGlvbkRhdGEucmVsYXRpdmVCb3VuZGluZ0JveCkud2lkdGg8MHx8aC5oZWlnaHQ8MCkpKXtpZihuLm51bUtleXBvaW50cz4wKWZvcigobD11LmxvY2F0aW9uRGF0YSkucmVsYXRpdmVLZXlwb2ludHM9W10sYz1uLm51bUtleXBvaW50cypuLm51bVZhbHVlc1BlcktleXBvaW50LHA9MDtwPGM7cCs9bi5udW1WYWx1ZXNQZXJLZXlwb2ludClmPXMrbi5rZXlwb2ludENvb3JkT2Zmc2V0K3AsZD17eDpyW2YrMF0seTpuLmZsaXBWZXJ0aWNhbGx5PzEtcltmKzFdOnJbZisxXX0sbC5yZWxhdGl2ZUtleXBvaW50cy5wdXNoKGQpO2kucHVzaCh1KX1yZXR1cm5bMixpXX19KSl9KSl9ZnVuY3Rpb24gRnQodCxlLG4saSxyLG8sYSl7cmV0dXJue3Njb3JlOltyXSxpbmQ6YSxsb2NhdGlvbkRhdGE6e3JlbGF0aXZlQm91bmRpbmdCb3g6e3hNaW46ZSx5TWluOm8/MS1uOnQseE1heDppLHlNYXg6bz8xLXQ6bix3aWR0aDppLWUsaGVpZ2h0Om4tdH19fX1mdW5jdGlvbiBfdCh0LGUpe3JldHVyblwibm9uZVwiPT09dD9lOmZ1bmN0aW9uKHQpe3JldHVybiAxLygxK01hdGguZXhwKC10KSl9KGUpfWZ1bmN0aW9uIE90KHQsZSxuLGkpe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcixvLGEscyx1LGgsbCxjO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKHApe3N3aXRjaChwLmxhYmVsKXtjYXNlIDA6cmV0dXJuIG49bnx8ZS5mbGlwSG9yaXpvbnRhbGx5fHwhMSxpPWl8fGUuZmxpcFZlcnRpY2FsbHl8fCExLHI9dC5zaXplLG89ci9lLm51bUxhbmRtYXJrcyxbNCx0LmRhdGEoKV07Y2FzZSAxOmZvcihhPXAuc2VudCgpLHM9W10sdT0wO3U8ZS5udW1MYW5kbWFya3M7Kyt1KWg9dSpvLChjPXt4OjAseTowfSkueD1uP2UuaW5wdXRJbWFnZVdpZHRoLWFbaF06YVtoXSxvPjEmJihjLnk9aT9lLmlucHV0SW1hZ2VIZWlnaHQtYVtoKzFdOmFbaCsxXSksbz4yJiYoYy56PWFbaCsyXSksbz4zJiYoYy5zY29yZT1fdChlLnZpc2liaWxpdHlBY3RpdmF0aW9uLGFbaCszXSkpLHMucHVzaChjKTtmb3IobD0wO2w8cy5sZW5ndGg7KytsKShjPXNbbF0pLng9Yy54L2UuaW5wdXRJbWFnZVdpZHRoLGMueT1jLnkvZS5pbnB1dEltYWdlSGVpZ2h0LGMuej1jLnovZS5pbnB1dEltYWdlV2lkdGgvKGUubm9ybWFsaXplWnx8MSk7cmV0dXJuWzIsc119fSkpfSkpfWZ1bmN0aW9uIEl0KHQsZSxuKXt2YXIgaT10LndpZHRoLHI9dC5oZWlnaHQsbz10LnJvdGF0aW9uO2lmKG51bGw9PW4ucm90YXRpb24mJm51bGw9PW4ucm90YXRpb25EZWdyZWV8fChvPWZ1bmN0aW9uKHQsZSl7bnVsbCE9ZS5yb3RhdGlvbj90Kz1lLnJvdGF0aW9uOm51bGwhPWUucm90YXRpb25EZWdyZWUmJih0Kz1NYXRoLlBJKmUucm90YXRpb25EZWdyZWUvMTgwKTtyZXR1cm4gb3QodCl9KG8sbikpLDA9PT1vKXQueENlbnRlcj10LnhDZW50ZXIraSpuLnNoaWZ0WCx0LnlDZW50ZXI9dC55Q2VudGVyK3Iqbi5zaGlmdFk7ZWxzZXt2YXIgYT0oZS53aWR0aCppKm4uc2hpZnRYKk1hdGguY29zKG8pLWUuaGVpZ2h0KnIqbi5zaGlmdFkqTWF0aC5zaW4obykpL2Uud2lkdGgscz0oZS53aWR0aCppKm4uc2hpZnRYKk1hdGguc2luKG8pK2UuaGVpZ2h0KnIqbi5zaGlmdFkqTWF0aC5jb3MobykpL2UuaGVpZ2h0O3QueENlbnRlcj10LnhDZW50ZXIrYSx0LnlDZW50ZXI9dC55Q2VudGVyK3N9aWYobi5zcXVhcmVMb25nKXt2YXIgdT1NYXRoLm1heChpKmUud2lkdGgsciplLmhlaWdodCk7aT11L2Uud2lkdGgscj11L2UuaGVpZ2h0fWVsc2UgaWYobi5zcXVhcmVTaG9ydCl7dmFyIGg9TWF0aC5taW4oaSplLndpZHRoLHIqZS5oZWlnaHQpO2k9aC9lLndpZHRoLHI9aC9lLmhlaWdodH1yZXR1cm4gdC53aWR0aD1pKm4uc2NhbGVYLHQuaGVpZ2h0PXIqbi5zY2FsZVksdH1mdW5jdGlvbiBBdCh0LGUpe3JldHVybiB0Lm1hcCgoZnVuY3Rpb24odCl7dmFyIG49QihCKHt9LHQpLHt4OnQueC9lLndpZHRoLHk6dC55L2UuaGVpZ2h0fSk7cmV0dXJuIG51bGwhPXQueiYmKHQuej10LnovZS53aWR0aCksbn0pKX12YXIgenQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuYWxwaGE9dCx0aGlzLmluaXRpYWxpemVkPSExfXJldHVybiB0LnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0LGUpe3ZhciBuO3JldHVybiB0aGlzLmluaXRpYWxpemVkP249bnVsbD09ZT90aGlzLnN0b3JlZFZhbHVlK3RoaXMuYWxwaGEqKHQtdGhpcy5zdG9yZWRWYWx1ZSk6dGhpcy5zdG9yZWRWYWx1ZSt0aGlzLmFscGhhKmUqTWF0aC5hc2luaCgodC10aGlzLnN0b3JlZFZhbHVlKS9lKToobj10LHRoaXMuaW5pdGlhbGl6ZWQ9ITApLHRoaXMucmF3VmFsdWU9dCx0aGlzLnN0b3JlZFZhbHVlPW4sbn0sdC5wcm90b3R5cGUuYXBwbHlXaXRoQWxwaGE9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLmFscGhhPWUsdGhpcy5hcHBseSh0LG4pfSx0LnByb3RvdHlwZS5oYXNMYXN0UmF3VmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbml0aWFsaXplZH0sdC5wcm90b3R5cGUubGFzdFJhd1ZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmF3VmFsdWV9LHQucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5pbml0aWFsaXplZD0hMX0sdH0oKSxDdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dGhpcy5mcmVxdWVuY3k9dC5mcmVxdWVuY3ksdGhpcy5taW5DdXRPZmY9dC5taW5DdXRPZmYsdGhpcy5iZXRhPXQuYmV0YSx0aGlzLnRocmVzaG9sZEN1dE9mZj10LnRocmVzaG9sZEN1dE9mZix0aGlzLnRocmVzaG9sZEJldGE9dC50aHJlc2hvbGRCZXRhLHRoaXMuZGVyaXZhdGVDdXRPZmY9dC5kZXJpdmF0ZUN1dE9mZix0aGlzLng9bmV3IHp0KHRoaXMuZ2V0QWxwaGEodGhpcy5taW5DdXRPZmYpKSx0aGlzLmR4PW5ldyB6dCh0aGlzLmdldEFscGhhKHRoaXMuZGVyaXZhdGVDdXRPZmYpKSx0aGlzLmxhc3RUaW1lc3RhbXA9MH1yZXR1cm4gdC5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlLG4pe2lmKG51bGw9PXQpcmV0dXJuIHQ7dmFyIGk9TWF0aC50cnVuYyhlKTtpZih0aGlzLmxhc3RUaW1lc3RhbXA+PWkpcmV0dXJuIHQ7MCE9PXRoaXMubGFzdFRpbWVzdGFtcCYmMCE9PWkmJih0aGlzLmZyZXF1ZW5jeT0xLygxZS02KihpLXRoaXMubGFzdFRpbWVzdGFtcCkpKSx0aGlzLmxhc3RUaW1lc3RhbXA9aTt2YXIgcj10aGlzLnguaGFzTGFzdFJhd1ZhbHVlKCk/KHQtdGhpcy54Lmxhc3RSYXdWYWx1ZSgpKSpuKnRoaXMuZnJlcXVlbmN5OjAsbz10aGlzLmR4LmFwcGx5V2l0aEFscGhhKHIsdGhpcy5nZXRBbHBoYSh0aGlzLmRlcml2YXRlQ3V0T2ZmKSksYT10aGlzLm1pbkN1dE9mZit0aGlzLmJldGEqTWF0aC5hYnMobykscz1udWxsIT10aGlzLnRocmVzaG9sZEN1dE9mZj90aGlzLnRocmVzaG9sZEN1dE9mZit0aGlzLnRocmVzaG9sZEJldGEqTWF0aC5hYnMobyk6bnVsbDtyZXR1cm4gdGhpcy54LmFwcGx5V2l0aEFscGhhKHQsdGhpcy5nZXRBbHBoYShhKSxzKX0sdC5wcm90b3R5cGUuZ2V0QWxwaGE9ZnVuY3Rpb24odCl7cmV0dXJuIDEvKDErdGhpcy5mcmVxdWVuY3kvKDIqTWF0aC5QSSp0KSl9LHR9KCksRXQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuY29uZmlnPXR9cmV0dXJuIHQucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzO2lmKG51bGw9PXQpcmV0dXJuIHRoaXMucmVzZXQoKSxudWxsO3RoaXMuaW5pdGlhbGl6ZUZpbHRlcnNJZkVtcHR5KHQpO3ZhciByPTE7aWYoIXRoaXMuY29uZmlnLmRpc2FibGVWYWx1ZVNjYWxpbmcpe2lmKG48dGhpcy5jb25maWcubWluQWxsb3dlZE9iamVjdFNjYWxlKXJldHVybiBLKFtdLHQsITApO3I9MS9ufXJldHVybiB0Lm1hcCgoZnVuY3Rpb24odCxuKXt2YXIgbz1CKEIoe30sdCkse3g6aS54RmlsdGVyc1tuXS5hcHBseSh0LngsZSxyKSx5OmkueUZpbHRlcnNbbl0uYXBwbHkodC55LGUscil9KTtyZXR1cm4gbnVsbCE9dC56JiYoby56PWkuekZpbHRlcnNbbl0uYXBwbHkodC56LGUscikpLG99KSl9LHQucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy54RmlsdGVycz1udWxsLHRoaXMueUZpbHRlcnM9bnVsbCx0aGlzLnpGaWx0ZXJzPW51bGx9LHQucHJvdG90eXBlLmluaXRpYWxpemVGaWx0ZXJzSWZFbXB0eT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO251bGwhPXRoaXMueEZpbHRlcnMmJnRoaXMueEZpbHRlcnMubGVuZ3RoPT09dC5sZW5ndGh8fCh0aGlzLnhGaWx0ZXJzPXQubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEN0KGUuY29uZmlnKX0pKSx0aGlzLnlGaWx0ZXJzPXQubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEN0KGUuY29uZmlnKX0pKSx0aGlzLnpGaWx0ZXJzPXQubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEN0KGUuY29uZmlnKX0pKSl9LHR9KCksUnQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3RoaXMuY29uZmlnPXQsdGhpcy53aW5kb3c9W10sdGhpcy5sb3dQYXNzRmlsdGVyPW5ldyB6dCgxKSx0aGlzLmxhc3RWYWx1ZT0wLHRoaXMubGFzdFZhbHVlU2NhbGU9MSx0aGlzLmxhc3RUaW1lc3RhbXA9LTF9cmV0dXJuIHQucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSxuKXtpZihudWxsPT10KXJldHVybiB0O3ZhciBpLHI9TWF0aC50cnVuYyhlKTtpZih0aGlzLmxhc3RUaW1lc3RhbXA+PXIpcmV0dXJuIHQ7aWYoLTE9PT10aGlzLmxhc3RUaW1lc3RhbXApaT0xO2Vsc2V7Zm9yKHZhciBvPXQqbi10aGlzLmxhc3RWYWx1ZSp0aGlzLmxhc3RWYWx1ZVNjYWxlLGE9ci10aGlzLmxhc3RUaW1lc3RhbXAscz1vLHU9YSxoPSgxK3RoaXMud2luZG93Lmxlbmd0aCkqKDFlNi8zMCksbD0wLGM9dGhpcy53aW5kb3c7bDxjLmxlbmd0aDtsKyspe3ZhciBwPWNbbF07aWYodStwLmR1cmF0aW9uPmgpYnJlYWs7cys9cC5kaXN0YW5jZSx1Kz1wLmR1cmF0aW9ufXZhciBmPXMvKDFlLTYqdSk7aT0xLTEvKDErdGhpcy5jb25maWcudmVsb2NpdHlTY2FsZSpNYXRoLmFicyhmKSksdGhpcy53aW5kb3cudW5zaGlmdCh7ZGlzdGFuY2U6byxkdXJhdGlvbjphfSksdGhpcy53aW5kb3cubGVuZ3RoPnRoaXMuY29uZmlnLndpbmRvd1NpemUmJnRoaXMud2luZG93LnBvcCgpfXJldHVybiB0aGlzLmxhc3RWYWx1ZT10LHRoaXMubGFzdFZhbHVlU2NhbGU9bix0aGlzLmxhc3RUaW1lc3RhbXA9cix0aGlzLmxvd1Bhc3NGaWx0ZXIuYXBwbHlXaXRoQWxwaGEodCxpKX0sdH0oKSxMdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dGhpcy5jb25maWc9dH1yZXR1cm4gdC5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXM7aWYobnVsbD09dClyZXR1cm4gdGhpcy5yZXNldCgpLG51bGw7dmFyIHI9MTtpZighdGhpcy5jb25maWcuZGlzYWJsZVZhbHVlU2NhbGluZyl7aWYobjx0aGlzLmNvbmZpZy5taW5BbGxvd2VkT2JqZWN0U2NhbGUpcmV0dXJuIEsoW10sdCwhMCk7cj0xL259cmV0dXJuIHRoaXMuaW5pdGlhbGl6ZUZpbHRlcnNJZkVtcHR5KHQpLHQubWFwKChmdW5jdGlvbih0LG4pe3ZhciBvPUIoQih7fSx0KSx7eDppLnhGaWx0ZXJzW25dLmFwcGx5KHQueCxlLHIpLHk6aS55RmlsdGVyc1tuXS5hcHBseSh0LnksZSxyKX0pO3JldHVybiBudWxsIT10LnomJihvLno9aS56RmlsdGVyc1tuXS5hcHBseSh0LnosZSxyKSksb30pKX0sdC5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLnhGaWx0ZXJzPW51bGwsdGhpcy55RmlsdGVycz1udWxsLHRoaXMuekZpbHRlcnM9bnVsbH0sdC5wcm90b3R5cGUuaW5pdGlhbGl6ZUZpbHRlcnNJZkVtcHR5PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7bnVsbCE9dGhpcy54RmlsdGVycyYmdGhpcy54RmlsdGVycy5sZW5ndGg9PT10Lmxlbmd0aHx8KHRoaXMueEZpbHRlcnM9dC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUnQoZS5jb25maWcpfSkpLHRoaXMueUZpbHRlcnM9dC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUnQoZS5jb25maWcpfSkpLHRoaXMuekZpbHRlcnM9dC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUnQoZS5jb25maWcpfSkpKX0sdH0oKSxWdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aWYobnVsbCE9dC52ZWxvY2l0eUZpbHRlcil0aGlzLmtleXBvaW50c0ZpbHRlcj1uZXcgTHQodC52ZWxvY2l0eUZpbHRlcik7ZWxzZXtpZihudWxsPT10Lm9uZUV1cm9GaWx0ZXIpdGhyb3cgbmV3IEVycm9yKFwiRWl0aGVyIGNvbmZpZ3VyZSB2ZWxvY2l0eUZpbHRlciBvciBvbmVFdXJvRmlsdGVyLCBidXQgZ290IFwiK1wiXCIuY29uY2F0KHQsXCIuXCIpKTt0aGlzLmtleXBvaW50c0ZpbHRlcj1uZXcgRXQodC5vbmVFdXJvRmlsdGVyKX19cmV0dXJuIHQucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQsZSxuLGkscil7aWYodm9pZCAwPT09aSYmKGk9ITEpLG51bGw9PXQpcmV0dXJuIHRoaXMua2V5cG9pbnRzRmlsdGVyLnJlc2V0KCksbnVsbDt2YXIgbz1udWxsIT1yP2Z1bmN0aW9uKHQsZSl7cmV0dXJuKHQud2lkdGgqZS53aWR0aCt0LmhlaWdodCplLmhlaWdodCkvMn0ocixuKToxLGE9aT9rdCh0LG4pOnQscz10aGlzLmtleXBvaW50c0ZpbHRlci5hcHBseShhLGUsbyk7cmV0dXJuIGk/QXQocyxuKTpzfSx0fSgpLEJ0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLmFscGhhPXQuYWxwaGF9cmV0dXJuIHQucHJvdG90eXBlLmFwcGx5PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYobnVsbD09dClyZXR1cm4gdGhpcy52aXNpYmlsaXR5RmlsdGVycz1udWxsLG51bGw7bnVsbCE9dGhpcy52aXNpYmlsaXR5RmlsdGVycyYmdGhpcy52aXNpYmlsaXR5RmlsdGVycy5sZW5ndGg9PT10Lmxlbmd0aHx8KHRoaXMudmlzaWJpbGl0eUZpbHRlcnM9dC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgenQoZS5hbHBoYSl9KSkpO2Zvcih2YXIgbj1bXSxpPTA7aTx0Lmxlbmd0aDsrK2kpe3ZhciByPXRbaV0sbz1CKHt9LHIpO28uc2NvcmU9dGhpcy52aXNpYmlsaXR5RmlsdGVyc1tpXS5hcHBseShyLnNjb3JlKSxuLnB1c2gobyl9cmV0dXJuIG59LHR9KCksTnQ9e3JlZHVjZUJveGVzSW5Mb3dlc3RsYXllcjohMSxpbnRlcnBvbGF0ZWRTY2FsZUFzcGVjdFJhdGlvOjEsZmVhdHVyZU1hcEhlaWdodDpbXSxmZWF0dXJlTWFwV2lkdGg6W10sbnVtTGF5ZXJzOjUsbWluU2NhbGU6LjE0ODQzNzUsbWF4U2NhbGU6Ljc1LGlucHV0U2l6ZUhlaWdodDoyMjQsaW5wdXRTaXplV2lkdGg6MjI0LGFuY2hvck9mZnNldFg6LjUsYW5jaG9yT2Zmc2V0WTouNSxzdHJpZGVzOls4LDE2LDMyLDMyLDMyXSxhc3BlY3RSYXRpb3M6WzFdLGZpeGVkQW5jaG9yU2l6ZTohMH0sRHQ9e3J1bnRpbWU6XCJ0ZmpzXCIsbW9kZWxUeXBlOlwiZnVsbFwiLGVuYWJsZVNtb290aGluZzohMCxlbmFibGVTZWdtZW50YXRpb246ITEsc21vb3RoU2VnbWVudGF0aW9uOiEwLGRldGVjdG9yTW9kZWxVcmw6XCJodHRwczovL3RmaHViLmRldi9tZWRpYXBpcGUvdGZqcy1tb2RlbC9ibGF6ZXBvc2VfM2QvZGV0ZWN0b3IvMVwiLGxhbmRtYXJrTW9kZWxVcmw6XCJodHRwczovL3RmaHViLmRldi9tZWRpYXBpcGUvdGZqcy1tb2RlbC9ibGF6ZXBvc2VfM2QvbGFuZG1hcmsvZnVsbC8yXCJ9LEt0PXttYXhQb3NlczoxLGZsaXBIb3Jpem9udGFsOiExfSxVdD17YXBwbHlFeHBvbmVudGlhbE9uQm94U2l6ZTohMSxmbGlwVmVydGljYWxseTohMSxpZ25vcmVDbGFzc2VzOltdLG51bUNsYXNzZXM6MSxudW1Cb3hlczoyMjU0LG51bUNvb3JkczoxMixib3hDb29yZE9mZnNldDowLGtleXBvaW50Q29vcmRPZmZzZXQ6NCxudW1LZXlwb2ludHM6NCxudW1WYWx1ZXNQZXJLZXlwb2ludDoyLHNpZ21vaWRTY29yZTohMCxzY29yZUNsaXBwaW5nVGhyZXNoOjEwMCxyZXZlcnNlT3V0cHV0T3JkZXI6ITAseFNjYWxlOjIyNCx5U2NhbGU6MjI0LGhTY2FsZToyMjQsd1NjYWxlOjIyNCxtaW5TY29yZVRocmVzaDouNX0sanQ9LjMsSHQ9e3NoaWZ0WDowLHNoaWZ0WTowLHNjYWxlWDoxLjI1LHNjYWxlWToxLjI1LHNxdWFyZUxvbmc6ITB9LHF0PXtvdXRwdXRUZW5zb3JTaXplOnt3aWR0aDoyMjQsaGVpZ2h0OjIyNH0sa2VlcEFzcGVjdFJhdGlvOiEwLG91dHB1dFRlbnNvckZsb2F0UmFuZ2U6Wy0xLDFdLGJvcmRlck1vZGU6XCJ6ZXJvXCJ9LFh0PXtvdXRwdXRUZW5zb3JTaXplOnt3aWR0aDoyNTYsaGVpZ2h0OjI1Nn0sa2VlcEFzcGVjdFJhdGlvOiEwLG91dHB1dFRlbnNvckZsb2F0UmFuZ2U6WzAsMV0sYm9yZGVyTW9kZTpcInplcm9cIn0sWXQ9e251bUxhbmRtYXJrczozOSxpbnB1dEltYWdlV2lkdGg6MjU2LGlucHV0SW1hZ2VIZWlnaHQ6MjU2LHZpc2liaWxpdHlBY3RpdmF0aW9uOlwic2lnbW9pZFwiLGZsaXBIb3Jpem9udGFsbHk6ITEsZmxpcFZlcnRpY2FsbHk6ITF9LFd0PXtudW1MYW5kbWFya3M6MzksaW5wdXRJbWFnZVdpZHRoOjEsaW5wdXRJbWFnZUhlaWdodDoxLHZpc2liaWxpdHlBY3RpdmF0aW9uOlwic2lnbW9pZFwiLGZsaXBIb3Jpem9udGFsbHk6ITEsZmxpcFZlcnRpY2FsbHk6ITF9LEd0PXtrZXJuZWxTaXplOjcsbWluQ29uZmlkZW5jZVRvUmVmaW5lOi41fSxRdD17YWxwaGE6LjF9LFp0PXtvbmVFdXJvRmlsdGVyOntmcmVxdWVuY3k6MzAsbWluQ3V0T2ZmOi4wNSxiZXRhOjgwLGRlcml2YXRlQ3V0T2ZmOjEsbWluQWxsb3dlZE9iamVjdFNjYWxlOjFlLTZ9fSwkdD17b25lRXVyb0ZpbHRlcjp7ZnJlcXVlbmN5OjMwLG1pbkN1dE9mZjouMDEsYmV0YToxMCxkZXJpdmF0ZUN1dE9mZjoxLG1pbkFsbG93ZWRPYmplY3RTY2FsZToxZS02fX0sSnQ9e29uZUV1cm9GaWx0ZXI6e2ZyZXF1ZW5jeTozMCxtaW5DdXRPZmY6LjEsYmV0YTo0MCxkZXJpdmF0ZUN1dE9mZjoxLG1pbkFsbG93ZWRPYmplY3RTY2FsZToxZS02LGRpc2FibGVWYWx1ZVNjYWxpbmc6ITB9fSx0ZT17YWN0aXZhdGlvbjpcIm5vbmVcIn0sZWU9e2NvbWJpbmVXaXRoUHJldmlvdXNSYXRpbzouN307dmFyIG5lPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLm1hc2s9dH1yZXR1cm4gdC5wcm90b3R5cGUudG9DYW52YXNJbWFnZVNvdXJjZT1mdW5jdGlvbigpe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbih0KXtyZXR1cm5bMixHKHRoaXMubWFzayldfSkpfSkpfSx0LnByb3RvdHlwZS50b0ltYWdlRGF0YT1mdW5jdGlvbigpe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbih0KXtyZXR1cm5bMixRKHRoaXMubWFzayldfSkpfSkpfSx0LnByb3RvdHlwZS50b1RlbnNvcj1mdW5jdGlvbigpe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbih0KXtyZXR1cm5bMix0aGlzLm1hc2tdfSkpfSkpfSx0LnByb3RvdHlwZS5nZXRVbmRlcmx5aW5nVHlwZT1mdW5jdGlvbigpe3JldHVyblwidGVuc29yXCJ9LHR9KCk7ZnVuY3Rpb24gaWUodCl7cmV0dXJuICQodCksXCJwZXJzb25cIn12YXIgcmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxuLGkscixvKXt0aGlzLmRldGVjdG9yTW9kZWw9dCx0aGlzLmxhbmRtYXJrTW9kZWw9ZSx0aGlzLmVuYWJsZVNtb290aGluZz1uLHRoaXMuZW5hYmxlU2VnbWVudGF0aW9uPWksdGhpcy5zbW9vdGhTZWdtZW50YXRpb249cix0aGlzLm1vZGVsVHlwZT1vLHRoaXMucmVnaW9uT2ZJbnRlcmVzdD1udWxsLHRoaXMucHJldkZpbHRlcmVkU2VnbWVudGF0aW9uTWFzaz1udWxsLHRoaXMuYW5jaG9ycz1mdW5jdGlvbih0KXtudWxsPT10LnJlZHVjZUJveGVzSW5Mb3dlc3RMYXllciYmKHQucmVkdWNlQm94ZXNJbkxvd2VzdExheWVyPSExKSxudWxsPT10LmludGVycG9sYXRlZFNjYWxlQXNwZWN0UmF0aW8mJih0LmludGVycG9sYXRlZFNjYWxlQXNwZWN0UmF0aW89MSksbnVsbD09dC5maXhlZEFuY2hvclNpemUmJih0LmZpeGVkQW5jaG9yU2l6ZT0hMSk7Zm9yKHZhciBlPVtdLG49MDtuPHQubnVtTGF5ZXJzOyl7Zm9yKHZhciBpPVtdLHI9W10sbz1bXSxhPVtdLHM9bjtzPHQuc3RyaWRlcy5sZW5ndGgmJnQuc3RyaWRlc1tzXT09PXQuc3RyaWRlc1tuXTspe3ZhciB1PWd0KHQubWluU2NhbGUsdC5tYXhTY2FsZSxzLHQuc3RyaWRlcy5sZW5ndGgpO2lmKDA9PT1zJiZ0LnJlZHVjZUJveGVzSW5Mb3dlc3RMYXllcilvLnB1c2goMSksby5wdXNoKDIpLG8ucHVzaCguNSksYS5wdXNoKC4xKSxhLnB1c2godSksYS5wdXNoKHUpO2Vsc2V7Zm9yKHZhciBoPTA7aDx0LmFzcGVjdFJhdGlvcy5sZW5ndGg7KytoKW8ucHVzaCh0LmFzcGVjdFJhdGlvc1toXSksYS5wdXNoKHUpO2lmKHQuaW50ZXJwb2xhdGVkU2NhbGVBc3BlY3RSYXRpbz4wKXt2YXIgbD1zPT09dC5zdHJpZGVzLmxlbmd0aC0xPzE6Z3QodC5taW5TY2FsZSx0Lm1heFNjYWxlLHMrMSx0LnN0cmlkZXMubGVuZ3RoKTthLnB1c2goTWF0aC5zcXJ0KHUqbCkpLG8ucHVzaCh0LmludGVycG9sYXRlZFNjYWxlQXNwZWN0UmF0aW8pfX1zKyt9Zm9yKHZhciBjPTA7YzxvLmxlbmd0aDsrK2Mpe3ZhciBwPU1hdGguc3FydChvW2NdKTtpLnB1c2goYVtjXS9wKSxyLnB1c2goYVtjXSpwKX12YXIgZj0wLGQ9MDtpZih0LmZlYXR1cmVNYXBIZWlnaHQubGVuZ3RoPjApZj10LmZlYXR1cmVNYXBIZWlnaHRbbl0sZD10LmZlYXR1cmVNYXBXaWR0aFtuXTtlbHNle3ZhciBtPXQuc3RyaWRlc1tuXTtmPU1hdGguY2VpbCh0LmlucHV0U2l6ZUhlaWdodC9tKSxkPU1hdGguY2VpbCh0LmlucHV0U2l6ZVdpZHRoL20pfWZvcih2YXIgZz0wO2c8ZjsrK2cpZm9yKHZhciB5PTA7eTxkOysreSlmb3IodmFyIHY9MDt2PGkubGVuZ3RoOysrdil7dmFyIHg9e3hDZW50ZXI6KHkrdC5hbmNob3JPZmZzZXRYKS9kLHlDZW50ZXI6KGcrdC5hbmNob3JPZmZzZXRZKS9mLHdpZHRoOjAsaGVpZ2h0OjB9O3QuZml4ZWRBbmNob3JTaXplPyh4LndpZHRoPTEseC5oZWlnaHQ9MSk6KHgud2lkdGg9clt2XSx4LmhlaWdodD1pW3ZdKSxlLnB1c2goeCl9bj1zfXJldHVybiBlfShOdCk7dmFyIGE9ZCh0aGlzLmFuY2hvcnMubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC53aWR0aH0pKSksdT1kKHRoaXMuYW5jaG9ycy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmhlaWdodH0pKSksaD1kKHRoaXMuYW5jaG9ycy5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LnhDZW50ZXJ9KSkpLGw9ZCh0aGlzLmFuY2hvcnMubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC55Q2VudGVyfSkpKTt0aGlzLmFuY2hvclRlbnNvcj17eDpoLHk6bCx3OmEsaDp1fSx0aGlzLnByZXZGaWx0ZXJlZFNlZ21lbnRhdGlvbk1hc2s9dGhpcy5lbmFibGVTZWdtZW50YXRpb24/cyhbXSxbMCwwXSk6bnVsbH1yZXR1cm4gdC5wcm90b3R5cGUuZXN0aW1hdGVQb3Nlcz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLG8sYSxzLHUsYyxwLGQsbSxnLHksdix4LHcsayxiLE0sUyxULFAsTyxJLEE7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oeil7c3dpdGNoKHoubGFiZWwpe2Nhc2UgMDpyZXR1cm4gaT1mdW5jdGlvbih0KXt2YXIgZTtpZihudWxsPT0oZT1udWxsPT10P0t0OkIoe30sdCkpLm1heFBvc2VzJiYoZS5tYXhQb3Nlcz0xKSxlLm1heFBvc2VzPD0wKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbWF4UG9zZXMgXCIuY29uY2F0KGUubWF4UG9zZXMsXCIuIFNob3VsZCBiZSA+IDAuXCIpKTtpZihlLm1heFBvc2VzPjEpdGhyb3cgbmV3IEVycm9yKFwiTXVsdGktcG9zZSBkZXRlY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIHlldC4gUGxlYXNlIHNldCBtYXhQb3NlcyB0byAxLlwiKTtyZXR1cm4gZX0oZSksbnVsbD09dD8odGhpcy5yZXNldCgpLFsyLFtdXSk6KHRoaXMubWF4UG9zZXM9aS5tYXhQb3Nlcyx0aGlzLnRpbWVzdGFtcD1udWxsIT1uPzFlMypuOnZ0KHQpPzFlNip0LmN1cnJlbnRUaW1lOm51bGwsbz1ydCh0KSxhPXIoKGZ1bmN0aW9uKCl7cmV0dXJuIGwoYXQodCksXCJmbG9hdDMyXCIpfSkpLG51bGwhPShzPXRoaXMucmVnaW9uT2ZJbnRlcmVzdCk/WzMsMl06WzQsdGhpcy5kZXRlY3RQb3NlKGEpXSk7Y2FzZSAxOmlmKDA9PT0odT16LnNlbnQoKSkubGVuZ3RoKXJldHVybiB0aGlzLnJlc2V0KCksYS5kaXNwb3NlKCksWzIsW11dO2M9dVswXSxzPXRoaXMucG9zZURldGVjdGlvblRvUm9pKGMsbyksei5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bNCx0aGlzLnBvc2VMYW5kbWFya3NCeVJvaShzLGEpXTtjYXNlIDM6cmV0dXJuIHA9ei5zZW50KCksYS5kaXNwb3NlKCksbnVsbD09cD8odGhpcy5yZXNldCgpLFsyLFtdXSk6KGQ9cC5sYW5kbWFya3MsbT1wLmF1eGlsaWFyeUxhbmRtYXJrcyxnPXAucG9zZVNjb3JlLHk9cC53b3JsZExhbmRtYXJrcyx2PXAuc2VnbWVudGF0aW9uTWFzayx4PXRoaXMucG9zZUxhbmRtYXJrRmlsdGVyaW5nKGQsbSx5LG8pLHc9eC5hY3R1YWxMYW5kbWFya3NGaWx0ZXJlZCxrPXguYXV4aWxpYXJ5TGFuZG1hcmtzRmlsdGVyZWQsYj14LmFjdHVhbFdvcmxkTGFuZG1hcmtzRmlsdGVyZWQsTT10aGlzLnBvc2VMYW5kbWFya3NUb1JvaShrLG8pLHRoaXMucmVnaW9uT2ZJbnRlcmVzdD1NLFM9dGhpcy5zbW9vdGhTZWdtZW50YXRpb24mJm51bGwhPXY/dGhpcy5wb3NlU2VnbWVudGF0aW9uRmlsdGVyaW5nKHYpOnYsbnVsbCE9KFQ9bnVsbCE9dz9rdCh3LG8pOm51bGwpJiZULmZvckVhY2goKGZ1bmN0aW9uKHQsZSl7dC5uYW1lPWpbZV19KSksbnVsbCE9KFA9YikmJlAuZm9yRWFjaCgoZnVuY3Rpb24odCxlKXt0Lm5hbWU9altlXX0pKSxPPXtzY29yZTpnLGtleXBvaW50czpULGtleXBvaW50czNEOlB9LG51bGwhPT1TJiYoST1yKChmdW5jdGlvbigpe3ZhciB0PWgoUywyKSxlPUYodCxbWzAsMF0sWzAsMF0sWzAsMV1dKTtyZXR1cm4gXyhlLFtbMCwwXSxbMCwwXSxbMCwyXV0sXCJzeW1tZXRyaWNcIil9KSksdGhpcy5zbW9vdGhTZWdtZW50YXRpb258fGYoUyksQT17bWFza1ZhbHVlVG9MYWJlbDppZSxtYXNrOm5ldyBuZShJKX0sTy5zZWdtZW50YXRpb249QSksWzIsW09dXSl9fSkpfSkpfSx0LnByb3RvdHlwZS5wb3NlU2VnbWVudGF0aW9uRmlsdGVyaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucHJldkZpbHRlcmVkU2VnbWVudGF0aW9uTWFzaztyZXR1cm4gMD09PWUuc2l6ZT90aGlzLnByZXZGaWx0ZXJlZFNlZ21lbnRhdGlvbk1hc2s9dDoodGhpcy5wcmV2RmlsdGVyZWRTZWdtZW50YXRpb25NYXNrPVN0KGUsdCxlZSksZih0KSksZihlKSx0aGlzLnByZXZGaWx0ZXJlZFNlZ21lbnRhdGlvbk1hc2t9LHQucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmRldGVjdG9yTW9kZWwuZGlzcG9zZSgpLHRoaXMubGFuZG1hcmtNb2RlbC5kaXNwb3NlKCksZihbdGhpcy5hbmNob3JUZW5zb3IueCx0aGlzLmFuY2hvclRlbnNvci55LHRoaXMuYW5jaG9yVGVuc29yLncsdGhpcy5hbmNob3JUZW5zb3IuaCx0aGlzLnByZXZGaWx0ZXJlZFNlZ21lbnRhdGlvbk1hc2tdKX0sdC5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLnJlZ2lvbk9mSW50ZXJlc3Q9bnVsbCx0aGlzLmVuYWJsZVNlZ21lbnRhdGlvbiYmKGYodGhpcy5wcmV2RmlsdGVyZWRTZWdtZW50YXRpb25NYXNrKSx0aGlzLnByZXZGaWx0ZXJlZFNlZ21lbnRhdGlvbk1hc2s9cyhbXSxbMCwwXSkpLHRoaXMudmlzaWJpbGl0eVNtb290aGluZ0ZpbHRlckFjdHVhbD1udWxsLHRoaXMudmlzaWJpbGl0eVNtb290aGluZ0ZpbHRlckF1eGlsaWFyeT1udWxsLHRoaXMubGFuZG1hcmtzU21vb3RoaW5nRmlsdGVyQWN0dWFsPW51bGwsdGhpcy5sYW5kbWFya3NTbW9vdGhpbmdGaWx0ZXJBdXhpbGlhcnk9bnVsbH0sdC5wcm90b3R5cGUuZGV0ZWN0UG9zZT1mdW5jdGlvbih0KXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUsbixpLHIsbyxhLHMsdSxoLGw7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oYyl7c3dpdGNoKGMubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1tdCh0LHF0KSxuPWUuaW1hZ2VUZW5zb3IsaT1lLnBhZGRpbmcscj10aGlzLmRldGVjdG9yTW9kZWwucHJlZGljdChuKSxvPXl0KHIpLGE9by5ib3hlcyxbNCxUdChbcz1vLmxvZ2l0cyxhXSx0aGlzLmFuY2hvclRlbnNvcixVdCldO2Nhc2UgMTpyZXR1cm4gMD09PSh1PWMuc2VudCgpKS5sZW5ndGg/KGYoW24scixzLGFdKSxbMix1XSk6WzQsd3QodSx0aGlzLm1heFBvc2VzLGp0KV07Y2FzZSAyOnJldHVybiBoPWMuc2VudCgpLGw9ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT10JiYodD1bXSk7Zm9yKHZhciBuPWUubGVmdCxpPWUudG9wLHI9ZS5sZWZ0K2UucmlnaHQsbz1lLnRvcCtlLmJvdHRvbSxhPTA7YTx0Lmxlbmd0aDthKyspe3ZhciBzPXRbYV0sdT1zLmxvY2F0aW9uRGF0YS5yZWxhdGl2ZUJvdW5kaW5nQm94LGg9KHUueE1pbi1uKS8oMS1yKSxsPSh1LnlNaW4taSkvKDEtbyksYz11LndpZHRoLygxLXIpLHA9dS5oZWlnaHQvKDEtbyk7dS54TWluPWgsdS55TWluPWwsdS53aWR0aD1jLHUuaGVpZ2h0PXAsdS54TWF4PWgrYyx1LnlNYXg9bCtwO3ZhciBmPXMubG9jYXRpb25EYXRhLnJlbGF0aXZlS2V5cG9pbnRzO2YmJmYuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIGU9KHQueC1uKS8oMS1yKSxhPSh0LnktaSkvKDEtbyk7dC54PWUsdC55PWF9KSl9cmV0dXJuIHR9KGgsaSksZihbbixyLHMsYV0pLFsyLGxdfX0pKX0pKX0sdC5wcm90b3R5cGUucG9zZURldGVjdGlvblRvUm9pPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIDAsMSxJdChodCh0LGUse3JvdGF0aW9uVmVjdG9yRW5kS2V5cG9pbnRJbmRleDoxLHJvdGF0aW9uVmVjdG9yU3RhcnRLZXlwb2ludEluZGV4OjAscm90YXRpb25WZWN0b3JUYXJnZXRBbmdsZURlZ3JlZTo5MH0pLGUsSHQpfSx0LnByb3RvdHlwZS5wb3NlTGFuZG1hcmtzQnlSb2k9ZnVuY3Rpb24odCxlKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIG4saSxyLG8sYSxzLHUsaCxsLGMscCxkLG0sZztyZXR1cm4gRCh0aGlzLChmdW5jdGlvbih5KXtzd2l0Y2goeS5sYWJlbCl7Y2FzZSAwOmlmKG49cnQoZSksaT1tdChlLFh0LHQpLHI9aS5pbWFnZVRlbnNvcixvPWkucGFkZGluZyxhPWkudHJhbnNmb3JtYXRpb25NYXRyaXgsXCJsaXRlXCIhPT10aGlzLm1vZGVsVHlwZSYmXCJmdWxsXCIhPT10aGlzLm1vZGVsVHlwZSYmXCJoZWF2eVwiIT09dGhpcy5tb2RlbFR5cGUpdGhyb3cgbmV3IEVycm9yKFwiTW9kZWwgdHlwZSBtdXN0IGJlIG9uZSBvZiBsaXRlLCBmdWxsIG9yIGhlYXZ5LFwiK1wiYnV0IGdvdCBcIi5jb25jYXQodGhpcy5tb2RlbFR5cGUpKTtyZXR1cm4gcz1bXCJsZF8zZFwiLFwib3V0cHV0X3Bvc2VmbGFnXCIsXCJhY3RpdmF0aW9uX2hlYXRtYXBcIixcIndvcmxkXzNkXCJdLHRoaXMuZW5hYmxlU2VnbWVudGF0aW9uJiZzLnB1c2goXCJhY3RpdmF0aW9uX3NlZ21lbnRhdGlvblwiKSx1PXRoaXMubGFuZG1hcmtNb2RlbC5leGVjdXRlKHIscyksWzQsdGhpcy50ZW5zb3JzVG9Qb3NlTGFuZG1hcmtzQW5kU2VnbWVudGF0aW9uKHUpXTtjYXNlIDE6cmV0dXJuIG51bGw9PShoPXkuc2VudCgpKT8oZih1KSxmKHIpLFsyLG51bGxdKToobD1oLmxhbmRtYXJrcyxjPWguYXV4aWxpYXJ5TGFuZG1hcmtzLHA9aC5wb3NlU2NvcmUsZD1oLndvcmxkTGFuZG1hcmtzLG09aC5zZWdtZW50YXRpb25NYXNrLFs0LHRoaXMucG9zZUxhbmRtYXJrc0FuZFNlZ21lbnRhdGlvbkludmVyc2VQcm9qZWN0aW9uKG4sdCxvLGEsbCxjLGQsbSldKTtjYXNlIDI6cmV0dXJuIGc9eS5zZW50KCksZih1KSxmKHIpLFsyLEIoe3Bvc2VTY29yZTpwfSxnKV19fSkpfSkpfSx0LnByb3RvdHlwZS5wb3NlTGFuZG1hcmtzQW5kU2VnbWVudGF0aW9uSW52ZXJzZVByb2plY3Rpb249ZnVuY3Rpb24odCxlLG4saSxvLGEsaCxsKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGMsZCxtLGcseSx2O3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKHgpe3JldHVybiBjPU10KG8sbiksZD1NdChhLG4pLG09ZnQoYyxlKSxnPWZ0KGQsZSkseT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1bXSxpPTAscj10O2k8ci5sZW5ndGg7aSsrKXt2YXIgbz1yW2ldLGE9by54LHM9by55LHU9ZS5yb3RhdGlvbixoPU1hdGguY29zKHUpKmEtTWF0aC5zaW4odSkqcyxsPU1hdGguc2luKHUpKmErTWF0aC5jb3ModSkqcyxjPUIoe30sbyk7Yy54PWgsYy55PWwsbi5wdXNoKGMpfXJldHVybiBufShoLGUpLHY9bnVsbCx0aGlzLmVuYWJsZVNlZ21lbnRhdGlvbiYmKHY9cigoZnVuY3Rpb24oKXt2YXIgZT1sLnNoYXBlLG49ZVswXSxyPWVbMV0sbz1mdW5jdGlvbih0KXt2YXIgZT1sdChuZXcgQXJyYXkoMTYpLmZpbGwoMCkpO2VbMF1bMF09cHQodCwwLDApLGVbMV1bMF09LXB0KHQsMCwxKSxlWzJdWzBdPXB0KHQsMCwyKSxlWzNdWzBdPS1wdCh0LDAsMyksZVswXVsyXT1wdCh0LDIsMCksZVsxXVsyXT0tcHQodCwyLDEpLGVbMl1bMl09cHQodCwyLDIpLGVbM11bMl09LXB0KHQsMiwzKSxlWzBdWzFdPS1wdCh0LDEsMCksZVsxXVsxXT1wdCh0LDEsMSksZVsyXVsxXT0tcHQodCwxLDIpLGVbM11bMV09cHQodCwxLDMpLGVbMF1bM109LXB0KHQsMywwKSxlWzFdWzNdPXB0KHQsMywxKSxlWzJdWzNdPS1wdCh0LDMsMiksZVszXVszXT1wdCh0LDMsMyk7Zm9yKHZhciBuPXRbMF1bMF0qZVswXVswXSt0WzFdWzBdKmVbMF1bMV0rdFsyXVswXSplWzBdWzJdK3RbM11bMF0qZVswXVszXSxpPTA7aTxlLmxlbmd0aDtpKyspZm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspZVtpXVtyXS89bjtyZXR1cm4gZX0oaSksYT1zKHN0KG8se3dpZHRoOnIsaGVpZ2h0Om59LHQpLFsxLDhdKSxoPVsxLG4sciwxXTtyZXR1cm4gcCh1LnRyYW5zZm9ybShTKGwsaCksYSxcImJpbGluZWFyXCIsXCJjb25zdGFudFwiLDAsW3QuaGVpZ2h0LHQud2lkdGhdKSxbMCwzXSl9KSksZihsKSksWzIse2xhbmRtYXJrczptLGF1eGlsaWFyeUxhbmRtYXJrczpnLHdvcmxkTGFuZG1hcmtzOnksc2VnbWVudGF0aW9uTWFzazp2fV19KSl9KSl9LHQucHJvdG90eXBlLnRlbnNvcnNUb1Bvc2VMYW5kbWFya3NBbmRTZWdtZW50YXRpb249ZnVuY3Rpb24odCl7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlLG4saSxvLGEscyxoLGwsYyxmLGQsbSxnO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKHkpe3N3aXRjaCh5LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9dFswXSxuPXRbMV0saT10WzJdLG89dFszXSxhPXRoaXMuZW5hYmxlU2VnbWVudGF0aW9uP3RbNF06bnVsbCxbNCxuLmRhdGEoKV07Y2FzZSAxOnJldHVybihzPXkuc2VudCgpWzBdKTwuNT9bMixudWxsXTpbNCxPdChlLFl0KV07Y2FzZSAyOnJldHVybls0LGJ0KHkuc2VudCgpLGksR3QpXTtjYXNlIDM6cmV0dXJuIGg9eS5zZW50KCksbD1oLnNsaWNlKDAsMzMpLGM9aC5zbGljZSgzMywzNSksWzQsT3QobyxXdCldO2Nhc2UgNDpyZXR1cm4gZj15LnNlbnQoKSxkPWYuc2xpY2UoMCwzMyksbT1mdW5jdGlvbih0LGUsbil7dm9pZCAwPT09biYmKG49ITApO2Zvcih2YXIgaT1bXSxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPUIoe30sZVtyXSk7biYmKG8uc2NvcmU9dFtyXS5zY29yZSksaS5wdXNoKG8pfXJldHVybiBpfShsLGQsITApLGc9dGhpcy5lbmFibGVTZWdtZW50YXRpb24/ZnVuY3Rpb24odCxlLG4pe3JldHVybiByKChmdW5jdGlvbigpe3ZhciBpPXAodCxbMF0pLHI9aS5zaGFwZVsyXTtpZigxPT09cil7dmFyIG89aTtzd2l0Y2goZS5hY3RpdmF0aW9uKXtjYXNlXCJub25lXCI6YnJlYWs7Y2FzZVwic2lnbW9pZFwiOm89UChvKTticmVhaztjYXNlXCJzb2Z0bWF4XCI6dGhyb3cgbmV3IEVycm9yKFwiU29mdG1heCBhY3RpdmF0aW9uIHJlcXVpcmVzIHR3byBjaGFubmVscy5cIik7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJBY3RpdmF0aW9uIG5vdCBzdXBwb3J0ZWQgKFwiLmNvbmNhdChlLmFjdGl2YXRpb24sXCIpXCIpKX12YXIgYT1uP3UucmVzaXplQmlsaW5lYXIobyxbbi5oZWlnaHQsbi53aWR0aF0pOm87cmV0dXJuIHAoYSxbMl0pfXRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIG51bWJlciBvZiB0ZW5zb3IgY2hhbm5lbHMgXCIuY29uY2F0KHIpKX0pKX0oYSx0ZSk6bnVsbCxbMix7bGFuZG1hcmtzOmwsYXV4aWxpYXJ5TGFuZG1hcmtzOmMscG9zZVNjb3JlOnMsd29ybGRMYW5kbWFya3M6bSxzZWdtZW50YXRpb25NYXNrOmd9XX19KSl9KSl9LHQucHJvdG90eXBlLnBvc2VMYW5kbWFya3NUb1JvaT1mdW5jdGlvbih0LGUpe3JldHVybiBJdChodCh4dCh0KSxlLHtyb3RhdGlvblZlY3RvclN0YXJ0S2V5cG9pbnRJbmRleDowLHJvdGF0aW9uVmVjdG9yRW5kS2V5cG9pbnRJbmRleDoxLHJvdGF0aW9uVmVjdG9yVGFyZ2V0QW5nbGVEZWdyZWU6OTB9KSxlLEh0KX0sdC5wcm90b3R5cGUucG9zZUxhbmRtYXJrRmlsdGVyaW5nPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByLG8sYTtpZihudWxsIT10aGlzLnRpbWVzdGFtcCYmdGhpcy5lbmFibGVTbW9vdGhpbmcpe3ZhciBzPWh0KHh0KGUpLGkse3JvdGF0aW9uVmVjdG9yRW5kS2V5cG9pbnRJbmRleDowLHJvdGF0aW9uVmVjdG9yU3RhcnRLZXlwb2ludEluZGV4OjEscm90YXRpb25WZWN0b3JUYXJnZXRBbmdsZURlZ3JlZTo5MH0pO251bGw9PXRoaXMudmlzaWJpbGl0eVNtb290aGluZ0ZpbHRlckFjdHVhbCYmKHRoaXMudmlzaWJpbGl0eVNtb290aGluZ0ZpbHRlckFjdHVhbD1uZXcgQnQoUXQpKSxyPXRoaXMudmlzaWJpbGl0eVNtb290aGluZ0ZpbHRlckFjdHVhbC5hcHBseSh0KSxudWxsPT10aGlzLnZpc2liaWxpdHlTbW9vdGhpbmdGaWx0ZXJBdXhpbGlhcnkmJih0aGlzLnZpc2liaWxpdHlTbW9vdGhpbmdGaWx0ZXJBdXhpbGlhcnk9bmV3IEJ0KFF0KSksbz10aGlzLnZpc2liaWxpdHlTbW9vdGhpbmdGaWx0ZXJBdXhpbGlhcnkuYXBwbHkoZSksYT10aGlzLnZpc2liaWxpdHlTbW9vdGhpbmdGaWx0ZXJBY3R1YWwuYXBwbHkobiksbnVsbD09dGhpcy5sYW5kbWFya3NTbW9vdGhpbmdGaWx0ZXJBY3R1YWwmJih0aGlzLmxhbmRtYXJrc1Ntb290aGluZ0ZpbHRlckFjdHVhbD1uZXcgVnQoWnQpKSxyPXRoaXMubGFuZG1hcmtzU21vb3RoaW5nRmlsdGVyQWN0dWFsLmFwcGx5KHIsdGhpcy50aW1lc3RhbXAsaSwhMCxzKSxudWxsPT10aGlzLmxhbmRtYXJrc1Ntb290aGluZ0ZpbHRlckF1eGlsaWFyeSYmKHRoaXMubGFuZG1hcmtzU21vb3RoaW5nRmlsdGVyQXV4aWxpYXJ5PW5ldyBWdCgkdCkpLG89dGhpcy5sYW5kbWFya3NTbW9vdGhpbmdGaWx0ZXJBdXhpbGlhcnkuYXBwbHkobyx0aGlzLnRpbWVzdGFtcCxpLCEwLHMpLG51bGw9PXRoaXMud29ybGRMYW5kbWFya3NTbW9vdGhpbmdGaWx0ZXJBY3R1YWwmJih0aGlzLndvcmxkTGFuZG1hcmtzU21vb3RoaW5nRmlsdGVyQWN0dWFsPW5ldyBWdChKdCkpLGE9dGhpcy53b3JsZExhbmRtYXJrc1Ntb290aGluZ0ZpbHRlckFjdHVhbC5hcHBseShuLHRoaXMudGltZXN0YW1wKX1lbHNlIHI9dCxvPWUsYT1uO3JldHVybnthY3R1YWxMYW5kbWFya3NGaWx0ZXJlZDpyLGF1eGlsaWFyeUxhbmRtYXJrc0ZpbHRlcmVkOm8sYWN0dWFsV29ybGRMYW5kbWFya3NGaWx0ZXJlZDphfX0sdH0oKTtmdW5jdGlvbiBvZSh0KXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUsbixpLHIsbyxhO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKHMpe3N3aXRjaChzLmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9ZnVuY3Rpb24odCl7dmFyIGU9Qih7fSxudWxsPT10P0R0OnQpO2lmKG51bGw9PWUuZW5hYmxlU21vb3RoaW5nJiYoZS5lbmFibGVTbW9vdGhpbmc9RHQuZW5hYmxlU21vb3RoaW5nKSxudWxsPT1lLmVuYWJsZVNlZ21lbnRhdGlvbiYmKGUuZW5hYmxlU2VnbWVudGF0aW9uPUR0LmVuYWJsZVNlZ21lbnRhdGlvbiksbnVsbD09ZS5zbW9vdGhTZWdtZW50YXRpb24mJihlLnNtb290aFNlZ21lbnRhdGlvbj1EdC5zbW9vdGhTZWdtZW50YXRpb24pLG51bGw9PWUubW9kZWxUeXBlJiYoZS5tb2RlbFR5cGU9RHQubW9kZWxUeXBlKSxudWxsPT1lLmRldGVjdG9yTW9kZWxVcmwmJihlLmRldGVjdG9yTW9kZWxVcmw9RHQuZGV0ZWN0b3JNb2RlbFVybCksbnVsbD09ZS5sYW5kbWFya01vZGVsVXJsKXN3aXRjaChlLm1vZGVsVHlwZSl7Y2FzZVwibGl0ZVwiOmUubGFuZG1hcmtNb2RlbFVybD1cImh0dHBzOi8vdGZodWIuZGV2L21lZGlhcGlwZS90ZmpzLW1vZGVsL2JsYXplcG9zZV8zZC9sYW5kbWFyay9saXRlLzJcIjticmVhaztjYXNlXCJoZWF2eVwiOmUubGFuZG1hcmtNb2RlbFVybD1cImh0dHBzOi8vdGZodWIuZGV2L21lZGlhcGlwZS90ZmpzLW1vZGVsL2JsYXplcG9zZV8zZC9sYW5kbWFyay9oZWF2eS8yXCI7YnJlYWs7Y2FzZVwiZnVsbFwiOmRlZmF1bHQ6ZS5sYW5kbWFya01vZGVsVXJsPVwiaHR0cHM6Ly90Zmh1Yi5kZXYvbWVkaWFwaXBlL3RmanMtbW9kZWwvYmxhemVwb3NlXzNkL2xhbmRtYXJrL2Z1bGwvMlwifXJldHVybiBlfSh0KSxuPVwic3RyaW5nXCI9PXR5cGVvZiBlLmRldGVjdG9yTW9kZWxVcmwmJmUuZGV0ZWN0b3JNb2RlbFVybC5pbmRleE9mKFwiaHR0cHM6Ly90Zmh1Yi5kZXZcIik+LTEsaT1cInN0cmluZ1wiPT10eXBlb2YgZS5sYW5kbWFya01vZGVsVXJsJiZlLmxhbmRtYXJrTW9kZWxVcmwuaW5kZXhPZihcImh0dHBzOi8vdGZodWIuZGV2XCIpPi0xLFs0LFByb21pc2UuYWxsKFtDKGUuZGV0ZWN0b3JNb2RlbFVybCx7ZnJvbVRGSHViOm59KSxDKGUubGFuZG1hcmtNb2RlbFVybCx7ZnJvbVRGSHViOml9KV0pXTtjYXNlIDE6cmV0dXJuIHI9cy5zZW50KCksbz1yWzBdLGE9clsxXSxbMixuZXcgcmUobyxhLGUuZW5hYmxlU21vb3RoaW5nLGUuZW5hYmxlU2VnbWVudGF0aW9uLGUuc21vb3RoU2VnbWVudGF0aW9uLGUubW9kZWxUeXBlKV19fSkpfSkpfXZhciBhZSxzZSx1ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7IWZ1bmN0aW9uKHQpe2lmKHQubWF4VHJhY2tzPDEpdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBzcGVjaWZ5ICdtYXhUcmFja3MnIHRvIGJlIGF0IGxlYXN0IDEsIGJ1dCBcIitcImVuY291bnRlcmVkIFwiLmNvbmNhdCh0Lm1heFRyYWNrcykpO2lmKHQubWF4QWdlPD0wKXRocm93IG5ldyBFcnJvcihcIk11c3Qgc3BlY2lmeSAnbWF4QWdlJyB0byBiZSBwb3NpdGl2ZSwgYnV0IFwiK1wiZW5jb3VudGVyZWQgXCIuY29uY2F0KHQubWF4QWdlKSk7aWYodm9pZCAwIT09dC5rZXlwb2ludFRyYWNrZXJQYXJhbXMpe2lmKHQua2V5cG9pbnRUcmFja2VyUGFyYW1zLmtleXBvaW50Q29uZmlkZW5jZVRocmVzaG9sZDwwfHx0LmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludENvbmZpZGVuY2VUaHJlc2hvbGQ+MSl0aHJvdyBuZXcgRXJyb3IoXCJNdXN0IHNwZWNpZnkgJ2tleXBvaW50Q29uZmlkZW5jZVRocmVzaG9sZCcgdG8gYmUgaW4gdGhlIHJhbmdlIFswLCAxXSwgYnV0IGVuY291bnRlcmVkIFwiK1wiXCIuY29uY2F0KHQua2V5cG9pbnRUcmFja2VyUGFyYW1zLmtleXBvaW50Q29uZmlkZW5jZVRocmVzaG9sZCkpO2lmKHQua2V5cG9pbnRUcmFja2VyUGFyYW1zLm1pbk51bWJlck9mS2V5cG9pbnRzPDEpdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBzcGVjaWZ5ICdtaW5OdW1iZXJPZktleXBvaW50cycgdG8gYmUgYXQgbGVhc3QgMSwgYnV0IFwiK1wiZW5jb3VudGVyZWQgXCIuY29uY2F0KHQua2V5cG9pbnRUcmFja2VyUGFyYW1zLm1pbk51bWJlck9mS2V5cG9pbnRzKSk7Zm9yKHZhciBlPTAsbj10LmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludEZhbGxvZmY7ZTxuLmxlbmd0aDtlKyspe3ZhciBpPW5bZV07aWYoaTw9MCl0aHJvdyBuZXcgRXJyb3IoXCJNdXN0IHNwZWNpZnkgZWFjaCBrZXlwb2ludCBmYWxsb2ZmIHBhcmFtZXRlcnRvIGJlIHBvc2l0aXZlIFwiK1wiYnV0IGVuY291bnRlcmVkIFwiLmNvbmNhdChpKSl9fX0odCksdGhpcy50cmFja3M9W10sdGhpcy5tYXhUcmFja3M9dC5tYXhUcmFja3MsdGhpcy5tYXhBZ2U9MWUzKnQubWF4QWdlLHRoaXMubWluU2ltaWxhcml0eT10Lm1pblNpbWlsYXJpdHksdGhpcy5uZXh0SUQ9MX1yZXR1cm4gdC5wcm90b3R5cGUuYXBwbHk9ZnVuY3Rpb24odCxlKXt0aGlzLmZpbHRlck9sZFRyYWNrcyhlKTt2YXIgbj10aGlzLmNvbXB1dGVTaW1pbGFyaXR5KHQpO3JldHVybiB0aGlzLmFzc2lnblRyYWNrcyh0LG4sZSksdGhpcy51cGRhdGVUcmFja3MoZSksdH0sdC5wcm90b3R5cGUuZ2V0VHJhY2tzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJhY2tzLnNsaWNlKCl9LHQucHJvdG90eXBlLmdldFRyYWNrSURzPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBTZXQodGhpcy50cmFja3MubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5pZH0pKSl9LHQucHJvdG90eXBlLmZpbHRlck9sZFRyYWNrcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMudHJhY2tzPXRoaXMudHJhY2tzLmZpbHRlcigoZnVuY3Rpb24obil7cmV0dXJuIHQtbi5sYXN0VGltZXN0YW1wPD1lLm1heEFnZX0pKX0sdC5wcm90b3R5cGUuYXNzaWduVHJhY2tzPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGk9QXJyYXkuZnJvbShBcnJheShlWzBdLmxlbmd0aCkua2V5cygpKSxyPVtdLG89MCxhPUFycmF5LmZyb20oQXJyYXkodC5sZW5ndGgpLmtleXMoKSk7bzxhLmxlbmd0aDtvKyspe3ZhciBzPWFbb107aWYoMCE9PWkubGVuZ3RoKXtmb3IodmFyIHU9LTEsaD0tMSxsPTAsYz1pO2w8Yy5sZW5ndGg7bCsrKXt2YXIgcD1jW2xdLGY9ZVtzXVtwXTtmPj10aGlzLm1pblNpbWlsYXJpdHkmJmY+aCYmKHU9cCxoPWYpfWlmKHU+PTApe3ZhciBkPXRoaXMudHJhY2tzW3VdO2Q9T2JqZWN0LmFzc2lnbihkLHRoaXMuY3JlYXRlVHJhY2sodFtzXSxuLGQuaWQpKSx0W3NdLmlkPWQuaWQ7dmFyIG09aS5pbmRleE9mKHUpO2kuc3BsaWNlKG0sMSl9ZWxzZSByLnB1c2gocyl9ZWxzZSByLnB1c2gocyl9Zm9yKHZhciBnPTAseT1yO2c8eS5sZW5ndGg7ZysrKXtzPXlbZ107dmFyIHY9dGhpcy5jcmVhdGVUcmFjayh0W3NdLG4pO3RoaXMudHJhY2tzLnB1c2godiksdFtzXS5pZD12LmlkfX0sdC5wcm90b3R5cGUudXBkYXRlVHJhY2tzPWZ1bmN0aW9uKHQpe3RoaXMudHJhY2tzLnNvcnQoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUubGFzdFRpbWVzdGFtcC10Lmxhc3RUaW1lc3RhbXB9KSksdGhpcy50cmFja3M9dGhpcy50cmFja3Muc2xpY2UoMCx0aGlzLm1heFRyYWNrcyl9LHQucHJvdG90eXBlLmNyZWF0ZVRyYWNrPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT17aWQ6bnx8dGhpcy5uZXh0VHJhY2tJRCgpLGxhc3RUaW1lc3RhbXA6ZSxrZXlwb2ludHM6SyhbXSx0LmtleXBvaW50cywhMCkubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gQih7fSx0KX0pKX07cmV0dXJuIHZvaWQgMCE9PXQuYm94JiYoaS5ib3g9Qih7fSx0LmJveCkpLGl9LHQucHJvdG90eXBlLm5leHRUcmFja0lEPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5uZXh0SUQ7cmV0dXJuIHRoaXMubmV4dElEKz0xLHR9LHQucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTt0aGlzLnRyYWNrcz10aGlzLnRyYWNrcy5maWx0ZXIoKGZ1bmN0aW9uKGUpe3JldHVybiF0LmluY2x1ZGVzKGUuaWQpfSkpfSx0LnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMudHJhY2tzPVtdfSx0fSgpLGhlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpfHx0aGlzfXJldHVybiBWKGUsdCksZS5wcm90b3R5cGUuY29tcHV0ZVNpbWlsYXJpdHk9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gMD09PXQubGVuZ3RofHwwPT09dGhpcy50cmFja3MubGVuZ3RoP1tbXV06dC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBlLnRyYWNrcy5tYXAoKGZ1bmN0aW9uKG4pe3JldHVybiBlLmlvdSh0LG4pfSkpfSkpfSxlLnByb3RvdHlwZS5pb3U9ZnVuY3Rpb24odCxlKXt2YXIgbj1NYXRoLm1heCh0LmJveC54TWluLGUuYm94LnhNaW4pLGk9TWF0aC5tYXgodC5ib3gueU1pbixlLmJveC55TWluKSxyPU1hdGgubWluKHQuYm94LnhNYXgsZS5ib3gueE1heCksbz1NYXRoLm1pbih0LmJveC55TWF4LGUuYm94LnlNYXgpO2lmKG4+PXJ8fGk+PW8pcmV0dXJuIDA7dmFyIGE9KHItbikqKG8taSk7cmV0dXJuIGEvKHQuYm94LndpZHRoKnQuYm94LmhlaWdodCtlLmJveC53aWR0aCplLmJveC5oZWlnaHQtYSl9LGV9KHVlKSxsZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUpe3ZhciBuPXQuY2FsbCh0aGlzLGUpfHx0aGlzO3JldHVybiBuLmtleXBvaW50VGhyZXNob2xkPWUua2V5cG9pbnRUcmFja2VyUGFyYW1zLmtleXBvaW50Q29uZmlkZW5jZVRocmVzaG9sZCxuLmtleXBvaW50RmFsbG9mZj1lLmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludEZhbGxvZmYsbi5taW5OdW1LZXlvaW50cz1lLmtleXBvaW50VHJhY2tlclBhcmFtcy5taW5OdW1iZXJPZktleXBvaW50cyxufXJldHVybiBWKGUsdCksZS5wcm90b3R5cGUuY29tcHV0ZVNpbWlsYXJpdHk9ZnVuY3Rpb24odCl7aWYoMD09PXQubGVuZ3RofHwwPT09dGhpcy50cmFja3MubGVuZ3RoKXJldHVybltbXV07Zm9yKHZhciBlPVtdLG49MCxpPXQ7bjxpLmxlbmd0aDtuKyspe2Zvcih2YXIgcj1pW25dLG89W10sYT0wLHM9dGhpcy50cmFja3M7YTxzLmxlbmd0aDthKyspe3ZhciB1PXNbYV07by5wdXNoKHRoaXMub2tzKHIsdSkpfWUucHVzaChvKX1yZXR1cm4gZX0sZS5wcm90b3R5cGUub2tzPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMuYXJlYShlLmtleXBvaW50cykrMWUtNixpPTAscj0wLG89MDtvPHQua2V5cG9pbnRzLmxlbmd0aDsrK28pe3ZhciBhPXQua2V5cG9pbnRzW29dLHM9ZS5rZXlwb2ludHNbb107aWYoIShhLnNjb3JlPHRoaXMua2V5cG9pbnRUaHJlc2hvbGR8fHMuc2NvcmU8dGhpcy5rZXlwb2ludFRocmVzaG9sZCkpe3IrPTE7dmFyIHU9TWF0aC5wb3coYS54LXMueCwyKStNYXRoLnBvdyhhLnktcy55LDIpLGg9Mip0aGlzLmtleXBvaW50RmFsbG9mZltvXTtpKz1NYXRoLmV4cCgtMSp1LygyKm4qTWF0aC5wb3coaCwyKSkpfX1yZXR1cm4gcjx0aGlzLm1pbk51bUtleW9pbnRzPzA6aS9yfSxlLnByb3RvdHlwZS5hcmVhPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10LmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2NvcmU+ZS5rZXlwb2ludFRocmVzaG9sZH0pKSxpPU1hdGgubWluLmFwcGx5KE1hdGgsSyhbMV0sbi5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lnh9KSksITEpKSxyPU1hdGgubWF4LmFwcGx5KE1hdGgsSyhbMF0sbi5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lnh9KSksITEpKSxvPU1hdGgubWluLmFwcGx5KE1hdGgsSyhbMV0sbi5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lnl9KSksITEpKTtyZXR1cm4oci1pKSooTWF0aC5tYXguYXBwbHkoTWF0aCxLKFswXSxuLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQueX0pKSwhMSkpLW8pfSxlfSh1ZSk7ZnVuY3Rpb24gY2UodCl7c3dpdGNoKHQpe2Nhc2Ugc2UuQmxhemVQb3NlOnJldHVybiBqLnJlZHVjZSgoZnVuY3Rpb24odCxlLG4pe3JldHVybiB0W2VdPW4sdH0pLHt9KTtjYXNlIHNlLlBvc2VOZXQ6Y2FzZSBzZS5Nb3ZlTmV0OnJldHVybiBVLnJlZHVjZSgoZnVuY3Rpb24odCxlLG4pe3JldHVybiB0W2VdPW4sdH0pLHt9KTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIk1vZGVsIFwiLmNvbmNhdCh0LFwiIGlzIG5vdCBzdXBwb3J0ZWQuXCIpKX19IWZ1bmN0aW9uKHQpe3QuS2V5cG9pbnQ9XCJrZXlwb2ludFwiLHQuQm91bmRpbmdCb3g9XCJib3VuZGluZ0JveFwifShhZXx8KGFlPXt9KSksZnVuY3Rpb24odCl7dC5Nb3ZlTmV0PVwiTW92ZU5ldFwiLHQuQmxhemVQb3NlPVwiQmxhemVQb3NlXCIsdC5Qb3NlTmV0PVwiUG9zZU5ldFwifShzZXx8KHNlPXt9KSk7dmFyIHBlPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGdldEtleXBvaW50SW5kZXhCeVNpZGU6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2Ugc2UuQmxhemVQb3NlOnJldHVybiBIO2Nhc2Ugc2UuUG9zZU5ldDpjYXNlIHNlLk1vdmVOZXQ6cmV0dXJuIHE7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJNb2RlbCBcIi5jb25jYXQodCxcIiBpcyBub3Qgc3VwcG9ydGVkLlwiKSl9fSxnZXRBZGphY2VudFBhaXJzOmZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlIHNlLkJsYXplUG9zZTpyZXR1cm4gWTtjYXNlIHNlLlBvc2VOZXQ6Y2FzZSBzZS5Nb3ZlTmV0OnJldHVybiBYO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiTW9kZWwgXCIuY29uY2F0KHQsXCIgaXMgbm90IHN1cHBvcnRlZC5cIikpfX0sZ2V0S2V5cG9pbnRJbmRleEJ5TmFtZTpjZX0pLGZlPVtcIlNpbmdsZVBvc2UuTGlnaHRuaW5nXCIsXCJTaW5nbGVQb3NlLlRodW5kZXJcIixcIk11bHRpUG9zZS5MaWdodG5pbmdcIl0sZGU9e21vZGVsVHlwZTpcIlNpbmdsZVBvc2UuTGlnaHRuaW5nXCIsZW5hYmxlU21vb3RoaW5nOiEwfSxtZT17fSxnZT17ZnJlcXVlbmN5OjMwLG1pbkN1dE9mZjoyLjUsYmV0YTozMDAsZGVyaXZhdGVDdXRPZmY6Mi41LHRocmVzaG9sZEN1dE9mZjouNSx0aHJlc2hvbGRCZXRhOjUsZGlzYWJsZVZhbHVlU2NhbGluZzohMH0seWU9e21heFRyYWNrczoxOCxtYXhBZ2U6MWUzLG1pblNpbWlsYXJpdHk6LjIsa2V5cG9pbnRUcmFja2VyUGFyYW1zOntrZXlwb2ludENvbmZpZGVuY2VUaHJlc2hvbGQ6LjMsa2V5cG9pbnRGYWxsb2ZmOlsuMDI2LC4wMjUsLjAyNSwuMDM1LC4wMzUsLjA3OSwuMDc5LC4wNzIsLjA3MiwuMDYyLC4wNjIsLjEwNywuMTA3LC4wODcsLjA4NywuMDg5LC4wODldLG1pbk51bWJlck9mS2V5cG9pbnRzOjR9fSx2ZT17bWF4VHJhY2tzOjE4LG1heEFnZToxZTMsbWluU2ltaWxhcml0eTouMTUsdHJhY2tlclBhcmFtczp7fX07ZnVuY3Rpb24geGUodCxlLG4saSl7Zm9yKHZhciByPXt9LG89MCxhPVU7bzxhLmxlbmd0aDtvKyspe3ZhciBzPWFbb107cltzXT1bZVtuW3NdXS55KmkuaGVpZ2h0LGVbbltzXV0ueCppLndpZHRoXX1pZihmdW5jdGlvbih0LGUpe3JldHVybih0W2UubGVmdF9oaXBdLnNjb3JlPi4yfHx0W2UucmlnaHRfaGlwXS5zY29yZT4uMikmJih0W2UubGVmdF9zaG91bGRlcl0uc2NvcmU+LjJ8fHRbZS5yaWdodF9zaG91bGRlcl0uc2NvcmU+LjIpfShlLG4pKXt2YXIgdT0oci5sZWZ0X2hpcFswXStyLnJpZ2h0X2hpcFswXSkvMixoPShyLmxlZnRfaGlwWzFdK3IucmlnaHRfaGlwWzFdKS8yLGw9ZnVuY3Rpb24odCxlLG4saSxyKXtmb3IodmFyIG89W1wibGVmdF9zaG91bGRlclwiLFwicmlnaHRfc2hvdWxkZXJcIixcImxlZnRfaGlwXCIsXCJyaWdodF9oaXBcIl0sYT0wLHM9MCx1PTA7dTxvLmxlbmd0aDt1KyspeyhmPU1hdGguYWJzKGktbltvW3VdXVswXSkpPmEmJihhPWYpLChkPU1hdGguYWJzKHItbltvW3VdXVsxXSkpPnMmJihzPWQpfWZvcih2YXIgaD0wLGw9MCxjPTAscD1PYmplY3Qua2V5cyhuKTtjPHAubGVuZ3RoO2MrKyl7dmFyIGYsZCxtPXBbY107aWYoISh0W2VbbV1dLnNjb3JlPC4yKSkoZj1NYXRoLmFicyhpLW5bbV1bMF0pKT5oJiYoaD1mKSwoZD1NYXRoLmFicyhyLW5bbV1bMV0pKT5sJiYobD1kKX1yZXR1cm5bYSxzLGgsbF19KGUsbixyLHUsaCksYz1sWzBdLHA9bFsxXSxmPWxbMl0sZD1sWzNdLG09TWF0aC5tYXgoMS45KnAsMS45KmMsMS4yKmYsMS4yKmQpLGc9W3UtKG09TWF0aC5taW4obSxNYXRoLm1heChoLGkud2lkdGgtaCx1LGkuaGVpZ2h0LXUpKSksaC1tXTtpZihtPk1hdGgubWF4KGkud2lkdGgsaS5oZWlnaHQpLzIpcmV0dXJuIHdlKG51bGw9PXQsaSk7dmFyIHk9MiptO3JldHVybnt5TWluOmdbMF0vaS5oZWlnaHQseE1pbjpnWzFdL2kud2lkdGgseU1heDooZ1swXSt5KS9pLmhlaWdodCx4TWF4OihnWzFdK3kpL2kud2lkdGgsaGVpZ2h0OihnWzBdK3kpL2kuaGVpZ2h0LWdbMF0vaS5oZWlnaHQsd2lkdGg6KGdbMV0reSkvaS53aWR0aC1nWzFdL2kud2lkdGh9fXJldHVybiB3ZShudWxsPT10LGkpfWZ1bmN0aW9uIHdlKHQsZSl7dmFyIG4saSxyLG87cmV0dXJuIHQ/ZS53aWR0aD5lLmhlaWdodD8obj0xLGk9ZS5oZWlnaHQvZS53aWR0aCxyPTAsbz0oZS53aWR0aC8yLWUuaGVpZ2h0LzIpL2Uud2lkdGgpOihuPWUud2lkdGgvZS5oZWlnaHQsaT0xLHI9KGUuaGVpZ2h0LzItZS53aWR0aC8yKS9lLmhlaWdodCxvPTApOmUud2lkdGg+ZS5oZWlnaHQ/KG49ZS53aWR0aC9lLmhlaWdodCxpPTEscj0oZS5oZWlnaHQvMi1lLndpZHRoLzIpL2UuaGVpZ2h0LG89MCk6KG49MSxpPWUuaGVpZ2h0L2Uud2lkdGgscj0wLG89KGUud2lkdGgvMi1lLmhlaWdodC8yKS9lLndpZHRoKSx7eU1pbjpyLHhNaW46byx5TWF4OnIrbix4TWF4Om8raSxoZWlnaHQ6bix3aWR0aDppfX1mdW5jdGlvbiBrZSh0KXt2YXIgZSxuPW51bGw9PXQ/ZGU6Qih7fSx0KTtpZihudWxsPT1uLm1vZGVsVHlwZSluLm1vZGVsVHlwZT1cIlNpbmdsZVBvc2UuTGlnaHRuaW5nXCI7ZWxzZSBpZihmZS5pbmRleE9mKG4ubW9kZWxUeXBlKTwwKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYXJjaGl0ZWN0dXJlIFwiLmNvbmNhdChuLm1vZGVsVHlwZSxcIi4gXCIpK1wiU2hvdWxkIGJlIG9uZSBvZiBcIi5jb25jYXQoZmUpKTtpZihudWxsPT1uLmVuYWJsZVNtb290aGluZyYmKG4uZW5hYmxlU21vb3RoaW5nPSEwKSxudWxsIT1uLm1pblBvc2VTY29yZSYmKG4ubWluUG9zZVNjb3JlPDB8fG4ubWluUG9zZVNjb3JlPjEpKXRocm93IG5ldyBFcnJvcihcIm1pblBvc2VTY29yZSBzaG91bGQgYmUgYmV0d2VlbiAwLjAgYW5kIDEuMFwiKTtpZihudWxsIT1uLm11bHRpUG9zZU1heERpbWVuc2lvbiYmKG4ubXVsdGlQb3NlTWF4RGltZW5zaW9uJTMyIT0wfHxuLm11bHRpUG9zZU1heERpbWVuc2lvbjwzMikpdGhyb3cgbmV3IEVycm9yKFwibXVsdGlQb3NlTWF4RGltZW5zaW9uIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMiBhbmQgaGlnaGVyIHRoYW4gMFwiKTtpZihcIk11bHRpUG9zZS5MaWdodG5pbmdcIj09PW4ubW9kZWxUeXBlJiZudWxsPT1uLmVuYWJsZVRyYWNraW5nJiYobi5lbmFibGVUcmFja2luZz0hMCksXCJNdWx0aVBvc2UuTGlnaHRuaW5nXCI9PT1uLm1vZGVsVHlwZSYmITA9PT1uLmVuYWJsZVRyYWNraW5nKWlmKG51bGw9PW4udHJhY2tlclR5cGUmJihuLnRyYWNrZXJUeXBlPWFlLkJvdW5kaW5nQm94KSxuLnRyYWNrZXJUeXBlPT09YWUuS2V5cG9pbnQpbnVsbCE9bi50cmFja2VyQ29uZmlnP24udHJhY2tlckNvbmZpZz1mdW5jdGlvbih0KXt2YXIgZT1iZSh5ZSx0KTtlLmtleXBvaW50VHJhY2tlclBhcmFtcz1CKHt9LHllLmtleXBvaW50VHJhY2tlclBhcmFtcyksbnVsbCE9dC5rZXlwb2ludFRyYWNrZXJQYXJhbXMmJihudWxsIT10LmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludENvbmZpZGVuY2VUaHJlc2hvbGQmJihlLmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludENvbmZpZGVuY2VUaHJlc2hvbGQ9dC5rZXlwb2ludFRyYWNrZXJQYXJhbXMua2V5cG9pbnRDb25maWRlbmNlVGhyZXNob2xkKSxudWxsIT10LmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludEZhbGxvZmYmJihlLmtleXBvaW50VHJhY2tlclBhcmFtcy5rZXlwb2ludEZhbGxvZmY9dC5rZXlwb2ludFRyYWNrZXJQYXJhbXMua2V5cG9pbnRGYWxsb2ZmKSxudWxsIT10LmtleXBvaW50VHJhY2tlclBhcmFtcy5taW5OdW1iZXJPZktleXBvaW50cyYmKGUua2V5cG9pbnRUcmFja2VyUGFyYW1zLm1pbk51bWJlck9mS2V5cG9pbnRzPXQua2V5cG9pbnRUcmFja2VyUGFyYW1zLm1pbk51bWJlck9mS2V5cG9pbnRzKSk7cmV0dXJuIGV9KG4udHJhY2tlckNvbmZpZyk6bi50cmFja2VyQ29uZmlnPXllO2Vsc2V7aWYobi50cmFja2VyVHlwZSE9PWFlLkJvdW5kaW5nQm94KXRocm93IG5ldyBFcnJvcihcIlRyYWNrZXIgdHlwZSBub3Qgc3VwcG9ydGVkIGJ5IE1vdmVOZXRcIik7bnVsbCE9bi50cmFja2VyQ29uZmlnP24udHJhY2tlckNvbmZpZz0oZT1uLnRyYWNrZXJDb25maWcsYmUodmUsZSkpOm4udHJhY2tlckNvbmZpZz12ZX1yZXR1cm4gbn1mdW5jdGlvbiBiZSh0LGUpe3ZhciBuPXttYXhUcmFja3M6dC5tYXhUcmFja3MsbWF4QWdlOnQubWF4QWdlLG1pblNpbWlsYXJpdHk6dC5taW5TaW1pbGFyaXR5fTtyZXR1cm4gbnVsbCE9ZS5tYXhUcmFja3MmJihuLm1heFRyYWNrcz1lLm1heFRyYWNrcyksbnVsbCE9ZS5tYXhBZ2UmJihuLm1heEFnZT1lLm1heEFnZSksbnVsbCE9ZS5taW5TaW1pbGFyaXR5JiYobi5taW5TaW1pbGFyaXR5PWUubWluU2ltaWxhcml0eSksbn12YXIgTWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy5tb3ZlTmV0TW9kZWw9dCx0aGlzLm1vZGVsSW5wdXRSZXNvbHV0aW9uPXtoZWlnaHQ6MCx3aWR0aDowfSx0aGlzLmtleXBvaW50SW5kZXhCeU5hbWU9Y2Uoc2UuTW92ZU5ldCksXCJTaW5nbGVQb3NlLkxpZ2h0bmluZ1wiPT09ZS5tb2RlbFR5cGU/KHRoaXMubW9kZWxJbnB1dFJlc29sdXRpb24ud2lkdGg9MTkyLHRoaXMubW9kZWxJbnB1dFJlc29sdXRpb24uaGVpZ2h0PTE5Mik6XCJTaW5nbGVQb3NlLlRodW5kZXJcIj09PWUubW9kZWxUeXBlJiYodGhpcy5tb2RlbElucHV0UmVzb2x1dGlvbi53aWR0aD0yNTYsdGhpcy5tb2RlbElucHV0UmVzb2x1dGlvbi5oZWlnaHQ9MjU2KSx0aGlzLm11bHRpUG9zZU1vZGVsPVwiTXVsdGlQb3NlLkxpZ2h0bmluZ1wiPT09ZS5tb2RlbFR5cGUsdGhpcy5tdWx0aVBvc2VNb2RlbHx8KHRoaXMua2V5cG9pbnRGaWx0ZXI9bmV3IEV0KGdlKSx0aGlzLmNyb3BSZWdpb25GaWx0ZXJZTWluPW5ldyB6dCguOSksdGhpcy5jcm9wUmVnaW9uRmlsdGVyWE1pbj1uZXcgenQoLjkpLHRoaXMuY3JvcFJlZ2lvbkZpbHRlcllNYXg9bmV3IHp0KC45KSx0aGlzLmNyb3BSZWdpb25GaWx0ZXJYTWF4PW5ldyB6dCguOSkpLHRoaXMuZW5hYmxlU21vb3RoaW5nPWUuZW5hYmxlU21vb3RoaW5nLGUubWluUG9zZVNjb3JlP3RoaXMubWluUG9zZVNjb3JlPWUubWluUG9zZVNjb3JlOnRoaXMubWluUG9zZVNjb3JlPS4yNSxlLm11bHRpUG9zZU1heERpbWVuc2lvbj90aGlzLm11bHRpUG9zZU1heERpbWVuc2lvbj1lLm11bHRpUG9zZU1heERpbWVuc2lvbjp0aGlzLm11bHRpUG9zZU1heERpbWVuc2lvbj0yNTYsdGhpcy5lbmFibGVUcmFja2luZz1lLmVuYWJsZVRyYWNraW5nLHRoaXMubXVsdGlQb3NlTW9kZWwmJnRoaXMuZW5hYmxlVHJhY2tpbmcmJihlLnRyYWNrZXJUeXBlPT09YWUuS2V5cG9pbnQ/dGhpcy50cmFja2VyPW5ldyBsZShlLnRyYWNrZXJDb25maWcpOmUudHJhY2tlclR5cGU9PT1hZS5Cb3VuZGluZ0JveCYmKHRoaXMudHJhY2tlcj1uZXcgaGUoZS50cmFja2VyQ29uZmlnKSksdGhpcy5lbmFibGVTbW9vdGhpbmcmJih0aGlzLmtleXBvaW50RmlsdGVyTWFwPW5ldyBNYXApKX1yZXR1cm4gdC5wcm90b3R5cGUucnVuU2luZ2xlUGVyc29uUG9zZU1vZGVsPWZ1bmN0aW9uKHQpe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZSxuLGkscixvO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKGEpe3N3aXRjaChhLmxhYmVsKXtjYXNlIDA6aWYoNCE9PShlPXRoaXMubW92ZU5ldE1vZGVsLmV4ZWN1dGUodCkpLnNoYXBlLmxlbmd0aHx8MSE9PWUuc2hhcGVbMF18fDEhPT1lLnNoYXBlWzFdfHwxNyE9PWUuc2hhcGVbMl18fDMhPT1lLnNoYXBlWzNdKXRocm93IGUuZGlzcG9zZSgpLG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgb3V0cHV0IHNoYXBlIGZyb20gbW9kZWw6IFtcIi5jb25jYXQoZS5zaGFwZSxcIl1cIikpO3JldHVyblwid2ViZ3B1XCI9PT1tKCk/WzMsMV06KG49ZS5kYXRhU3luYygpLFszLDNdKTtjYXNlIDE6cmV0dXJuWzQsZS5kYXRhKCldO2Nhc2UgMjpuPWEuc2VudCgpLGEubGFiZWw9MztjYXNlIDM6Zm9yKGUuZGlzcG9zZSgpLGk9e2tleXBvaW50czpbXSxzY29yZTowfSxyPTAsbz0wO288MTc7KytvKWkua2V5cG9pbnRzW29dPXt5Om5bMypvXSx4Om5bMypvKzFdLHNjb3JlOm5bMypvKzJdfSxpLmtleXBvaW50c1tvXS5zY29yZT4uMiYmKCsrcixpLnNjb3JlKz1pLmtleXBvaW50c1tvXS5zY29yZSk7cmV0dXJuIHI+MCYmKGkuc2NvcmUvPXIpLFsyLGldfX0pKX0pKX0sdC5wcm90b3R5cGUucnVuTXVsdGlQZXJzb25Qb3NlTW9kZWw9ZnVuY3Rpb24odCl7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBlLG4saSxyLG8sYSxzLHU7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oaCl7c3dpdGNoKGgubGFiZWwpe2Nhc2UgMDppZigzIT09KGU9dGhpcy5tb3ZlTmV0TW9kZWwuZXhlY3V0ZSh0KSkuc2hhcGUubGVuZ3RofHwxIT09ZS5zaGFwZVswXXx8NTYhPT1lLnNoYXBlWzJdKXRocm93IGUuZGlzcG9zZSgpLG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgb3V0cHV0IHNoYXBlIGZyb20gbW9kZWw6IFtcIi5jb25jYXQoZS5zaGFwZSxcIl1cIikpO3JldHVyblwid2ViZ3B1XCI9PT1tKCk/WzMsMV06KG49ZS5kYXRhU3luYygpLFszLDNdKTtjYXNlIDE6cmV0dXJuWzQsZS5kYXRhKCldO2Nhc2UgMjpuPWguc2VudCgpLGgubGFiZWw9MztjYXNlIDM6Zm9yKGUuZGlzcG9zZSgpLGk9W10scj1uLmxlbmd0aC81NixvPTA7bzxyOysrbylmb3IoaVtvXT17a2V5cG9pbnRzOltdfSxhPTU2Km8rNTEsaVtvXS5ib3g9e3lNaW46blthXSx4TWluOm5bYSsxXSx5TWF4Om5bYSsyXSx4TWF4Om5bYSszXSx3aWR0aDpuW2ErM10tblthKzFdLGhlaWdodDpuW2ErMl0tblthXX0scz01NipvKzU1LGlbb10uc2NvcmU9bltzXSxpW29dLmtleXBvaW50cz1bXSx1PTA7dTwxNzsrK3UpaVtvXS5rZXlwb2ludHNbdV09e3k6bls1NipvKzMqdV0seDpuWzU2Km8rMyp1KzFdLHNjb3JlOm5bNTYqbyszKnUrMl19O3JldHVyblsyLGldfX0pKX0pKX0sdC5wcm90b3R5cGUuZXN0aW1hdGVQb3Nlcz1mdW5jdGlvbih0LG4saSl7cmV0dXJuIHZvaWQgMD09PW4mJihuPW1lKSxOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgcixvLGEscyx1LGw7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oYyl7c3dpdGNoKGMubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbj1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD9tZTpCKHt9LHQpfShuKSxudWxsPT10Pyh0aGlzLnJlc2V0KCksWzIsW11dKToobnVsbD09aT92dCh0KSYmKGk9MWU2KnQuY3VycmVudFRpbWUpOmkqPTFlMyxyPWF0KHQpLG89cnQociksYT1oKHIsMCksdCBpbnN0YW5jZW9mIGV8fHIuZGlzcG9zZSgpLHM9W10sdGhpcy5tdWx0aVBvc2VNb2RlbD9bMywyXTpbNCx0aGlzLmVzdGltYXRlU2luZ2xlUG9zZShhLG8saSldKTtjYXNlIDE6cmV0dXJuIHM9Yy5zZW50KCksWzMsNF07Y2FzZSAyOnJldHVybls0LHRoaXMuZXN0aW1hdGVNdWx0aXBsZVBvc2VzKGEsbyxpKV07Y2FzZSAzOnM9Yy5zZW50KCksYy5sYWJlbD00O2Nhc2UgNDpmb3IodT0wO3U8cy5sZW5ndGg7Kyt1KWZvcihsPTA7bDxzW3VdLmtleXBvaW50cy5sZW5ndGg7KytsKXNbdV0ua2V5cG9pbnRzW2xdLm5hbWU9VVtsXSxzW3VdLmtleXBvaW50c1tsXS55Kj1vLmhlaWdodCxzW3VdLmtleXBvaW50c1tsXS54Kj1vLndpZHRoO3JldHVyblsyLHNdfX0pKX0pKX0sdC5wcm90b3R5cGUuZXN0aW1hdGVTaW5nbGVQb3NlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGksbyxhLGgsYz10aGlzO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKHApe3N3aXRjaChwLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMuY3JvcFJlZ2lvbnx8KHRoaXMuY3JvcFJlZ2lvbj13ZShudWxsPT10aGlzLmNyb3BSZWdpb24sZSkpLGk9cigoZnVuY3Rpb24oKXt2YXIgZT1zKFtbYy5jcm9wUmVnaW9uLnlNaW4sYy5jcm9wUmVnaW9uLnhNaW4sYy5jcm9wUmVnaW9uLnlNYXgsYy5jcm9wUmVnaW9uLnhNYXhdXSksbj1JKFsxXSxcImludDMyXCIpLGk9W2MubW9kZWxJbnB1dFJlc29sdXRpb24uaGVpZ2h0LGMubW9kZWxJbnB1dFJlc29sdXRpb24ud2lkdGhdO3JldHVybiBsKHUuY3JvcEFuZFJlc2l6ZSh0LGUsbixpLFwiYmlsaW5lYXJcIiwwKSxcImludDMyXCIpfSkpLHQuZGlzcG9zZSgpLFs0LHRoaXMucnVuU2luZ2xlUGVyc29uUG9zZU1vZGVsKGkpXTtjYXNlIDE6aWYobz1wLnNlbnQoKSxpLmRpc3Bvc2UoKSxvLnNjb3JlPHRoaXMubWluUG9zZVNjb3JlKXJldHVybiB0aGlzLnJlc2V0KCksWzIsW11dO2ZvcihhPTA7YTxvLmtleXBvaW50cy5sZW5ndGg7KythKW8ua2V5cG9pbnRzW2FdLnk9dGhpcy5jcm9wUmVnaW9uLnlNaW4rby5rZXlwb2ludHNbYV0ueSp0aGlzLmNyb3BSZWdpb24uaGVpZ2h0LG8ua2V5cG9pbnRzW2FdLng9dGhpcy5jcm9wUmVnaW9uLnhNaW4rby5rZXlwb2ludHNbYV0ueCp0aGlzLmNyb3BSZWdpb24ud2lkdGg7cmV0dXJuIG51bGwhPW4mJnRoaXMuZW5hYmxlU21vb3RoaW5nJiYoby5rZXlwb2ludHM9dGhpcy5rZXlwb2ludEZpbHRlci5hcHBseShvLmtleXBvaW50cyxuLDEpKSxoPXhlKHRoaXMuY3JvcFJlZ2lvbixvLmtleXBvaW50cyx0aGlzLmtleXBvaW50SW5kZXhCeU5hbWUsZSksdGhpcy5jcm9wUmVnaW9uPXRoaXMuZmlsdGVyQ3JvcFJlZ2lvbihoKSxbMixbb11dfX0pKX0pKX0sdC5wcm90b3R5cGUuZXN0aW1hdGVNdWx0aXBsZVBvc2VzPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGkscixvLGEscyxoLGMscCxmLGQsbSxnPXRoaXM7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oeSl7c3dpdGNoKHkubGFiZWwpe2Nhc2UgMDpyZXR1cm4gMzIsZS53aWR0aD5lLmhlaWdodD8ocj10aGlzLm11bHRpUG9zZU1heERpbWVuc2lvbixvPU1hdGgucm91bmQodGhpcy5tdWx0aVBvc2VNYXhEaW1lbnNpb24qZS5oZWlnaHQvZS53aWR0aCksaT11LnJlc2l6ZUJpbGluZWFyKHQsW28scl0pLHM9cixoPTMyKk1hdGguY2VpbChvLzMyKSxhPUYoaSxbWzAsMF0sWzAsaC1vXSxbMCwwXSxbMCwwXV0pKToocj1NYXRoLnJvdW5kKHRoaXMubXVsdGlQb3NlTWF4RGltZW5zaW9uKmUud2lkdGgvZS5oZWlnaHQpLG89dGhpcy5tdWx0aVBvc2VNYXhEaW1lbnNpb24saT11LnJlc2l6ZUJpbGluZWFyKHQsW28scl0pLHM9MzIqTWF0aC5jZWlsKHIvMzIpLGg9byxhPUYoaSxbWzAsMF0sWzAsMF0sWzAscy1yXSxbMCwwXV0pKSxpLmRpc3Bvc2UoKSx0LmRpc3Bvc2UoKSxjPWwoYSxcImludDMyXCIpLGEuZGlzcG9zZSgpLFs0LHRoaXMucnVuTXVsdGlQZXJzb25Qb3NlTW9kZWwoYyldO2Nhc2UgMTpmb3IocD15LnNlbnQoKSxjLmRpc3Bvc2UoKSxwPXAuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5zY29yZT49Zy5taW5Qb3NlU2NvcmV9KSksZD0wO2Q8cC5sZW5ndGg7KytkKWZvcihmPTA7ZjxwW2RdLmtleXBvaW50cy5sZW5ndGg7KytmKXBbZF0ua2V5cG9pbnRzW2ZdLnkqPWgvbyxwW2RdLmtleXBvaW50c1tmXS54Kj1zL3I7aWYodGhpcy5lbmFibGVUcmFja2luZyYmKHRoaXMudHJhY2tlci5hcHBseShwLG4pLHRoaXMuZW5hYmxlU21vb3RoaW5nKSl7Zm9yKGQ9MDtkPHAubGVuZ3RoOysrZCl0aGlzLmtleXBvaW50RmlsdGVyTWFwLmhhcyhwW2RdLmlkKXx8dGhpcy5rZXlwb2ludEZpbHRlck1hcC5zZXQocFtkXS5pZCxuZXcgRXQoZ2UpKSxwW2RdLmtleXBvaW50cz10aGlzLmtleXBvaW50RmlsdGVyTWFwLmdldChwW2RdLmlkKS5hcHBseShwW2RdLmtleXBvaW50cyxuLDEpO209dGhpcy50cmFja2VyLmdldFRyYWNrSURzKCksdGhpcy5rZXlwb2ludEZpbHRlck1hcC5mb3JFYWNoKChmdW5jdGlvbih0LGUpe20uaGFzKGUpfHxnLmtleXBvaW50RmlsdGVyTWFwLmRlbGV0ZShlKX0pKX1yZXR1cm5bMixwXX19KSl9KSl9LHQucHJvdG90eXBlLmZpbHRlckNyb3BSZWdpb249ZnVuY3Rpb24odCl7aWYodCl7dmFyIGU9dGhpcy5jcm9wUmVnaW9uRmlsdGVyWU1pbi5hcHBseSh0LnlNaW4pLG49dGhpcy5jcm9wUmVnaW9uRmlsdGVyWE1pbi5hcHBseSh0LnhNaW4pLGk9dGhpcy5jcm9wUmVnaW9uRmlsdGVyWU1heC5hcHBseSh0LnlNYXgpLHI9dGhpcy5jcm9wUmVnaW9uRmlsdGVyWE1heC5hcHBseSh0LnhNYXgpO3JldHVybnt5TWluOmUseE1pbjpuLHlNYXg6aSx4TWF4OnIsaGVpZ2h0OmktZSx3aWR0aDpyLW59fXJldHVybiB0aGlzLmNyb3BSZWdpb25GaWx0ZXJZTWluLnJlc2V0KCksdGhpcy5jcm9wUmVnaW9uRmlsdGVyWE1pbi5yZXNldCgpLHRoaXMuY3JvcFJlZ2lvbkZpbHRlcllNYXgucmVzZXQoKSx0aGlzLmNyb3BSZWdpb25GaWx0ZXJYTWF4LnJlc2V0KCksbnVsbH0sdC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMubW92ZU5ldE1vZGVsLmRpc3Bvc2UoKX0sdC5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmNyb3BSZWdpb249bnVsbCx0aGlzLnJlc2V0RmlsdGVycygpfSx0LnByb3RvdHlwZS5yZXNldEZpbHRlcnM9ZnVuY3Rpb24oKXt0aGlzLmtleXBvaW50RmlsdGVyLnJlc2V0KCksdGhpcy5jcm9wUmVnaW9uRmlsdGVyWU1pbi5yZXNldCgpLHRoaXMuY3JvcFJlZ2lvbkZpbHRlclhNaW4ucmVzZXQoKSx0aGlzLmNyb3BSZWdpb25GaWx0ZXJZTWF4LnJlc2V0KCksdGhpcy5jcm9wUmVnaW9uRmlsdGVyWE1heC5yZXNldCgpfSx0fSgpO2Z1bmN0aW9uIFNlKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD1kZSksTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7dmFyIGUsbixpLHI7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24obyl7c3dpdGNoKG8ubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1rZSh0KSxpPSEwLGUubW9kZWxVcmw/KGk9XCJzdHJpbmdcIj09dHlwZW9mIGUubW9kZWxVcmwmJmUubW9kZWxVcmwuaW5kZXhPZihcImh0dHBzOi8vdGZodWIuZGV2XCIpPi0xLFs0LEMoZS5tb2RlbFVybCx7ZnJvbVRGSHViOml9KV0pOlszLDJdO2Nhc2UgMTpyZXR1cm4gbj1vLnNlbnQoKSxbMyw0XTtjYXNlIDI6cmV0dXJuIHI9dm9pZCAwLFwiU2luZ2xlUG9zZS5MaWdodG5pbmdcIj09PWUubW9kZWxUeXBlP3I9XCJodHRwczovL3RmaHViLmRldi9nb29nbGUvdGZqcy1tb2RlbC9tb3ZlbmV0L3NpbmdsZXBvc2UvbGlnaHRuaW5nLzRcIjpcIlNpbmdsZVBvc2UuVGh1bmRlclwiPT09ZS5tb2RlbFR5cGU/cj1cImh0dHBzOi8vdGZodWIuZGV2L2dvb2dsZS90ZmpzLW1vZGVsL21vdmVuZXQvc2luZ2xlcG9zZS90aHVuZGVyLzRcIjpcIk11bHRpUG9zZS5MaWdodG5pbmdcIj09PWUubW9kZWxUeXBlJiYocj1cImh0dHBzOi8vdGZodWIuZGV2L2dvb2dsZS90ZmpzLW1vZGVsL21vdmVuZXQvbXVsdGlwb3NlL2xpZ2h0bmluZy8xXCIpLFs0LEMocix7ZnJvbVRGSHViOml9KV07Y2FzZSAzOm49by5zZW50KCksby5sYWJlbD00O2Nhc2UgNDpyZXR1cm5cIndlYmdsXCI9PT1tKCkmJk8oKS5zZXQoXCJUT1BLX0xBU1RfRElNX0NQVV9IQU5ET0ZGX1NJWkVfVEhSRVNIT0xEXCIsMCksWzIsbmV3IE1lKG4sZSldfX0pKX0pKX12YXIgVGU9e2FyY2hpdGVjdHVyZTpcIk1vYmlsZU5ldFYxXCIsb3V0cHV0U3RyaWRlOjE2LG11bHRpcGxpZXI6Ljc1LGlucHV0UmVzb2x1dGlvbjp7aGVpZ2h0OjI1Nyx3aWR0aDoyNTd9fSxQZT1bXCJNb2JpbGVOZXRWMVwiLFwiUmVzTmV0NTBcIl0sRmU9e01vYmlsZU5ldFYxOls4LDE2XSxSZXNOZXQ1MDpbMTZdfSxfZT1bOCwxNiwzMl0sT2U9e01vYmlsZU5ldFYxOlsuNSwuNzUsMV0sUmVzTmV0NTA6WzFdfSxJZT1bMSwyLDRdLEFlPXttYXhQb3NlczoxLGZsaXBIb3Jpem9udGFsOiExfSx6ZT17bWF4UG9zZXM6NSxmbGlwSG9yaXpvbnRhbDohMSxzY29yZVRocmVzaG9sZDouNSxubXNSYWRpdXM6MjB9LENlPVstMTIzLjE1LC0xMTUuOSwtMTAzLjA2XTtmdW5jdGlvbiBFZSh0KXtyZXR1cm4gTWF0aC5mbG9vcih0LzIpfXZhciBSZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aGlzLnByaW9yaXR5UXVldWU9bmV3IEFycmF5KHQpLHRoaXMubnVtYmVyT2ZFbGVtZW50cz0tMSx0aGlzLmdldEVsZW1lbnRWYWx1ZT1lfXJldHVybiB0LnByb3RvdHlwZS5lbnF1ZXVlPWZ1bmN0aW9uKHQpe3RoaXMucHJpb3JpdHlRdWV1ZVsrK3RoaXMubnVtYmVyT2ZFbGVtZW50c109dCx0aGlzLnN3aW0odGhpcy5udW1iZXJPZkVsZW1lbnRzKX0sdC5wcm90b3R5cGUuZGVxdWV1ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMucHJpb3JpdHlRdWV1ZVswXTtyZXR1cm4gdGhpcy5leGNoYW5nZSgwLHRoaXMubnVtYmVyT2ZFbGVtZW50cy0tKSx0aGlzLnNpbmsoMCksdGhpcy5wcmlvcml0eVF1ZXVlW3RoaXMubnVtYmVyT2ZFbGVtZW50cysxXT1udWxsLHR9LHQucHJvdG90eXBlLmVtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuLTE9PT10aGlzLm51bWJlck9mRWxlbWVudHN9LHQucHJvdG90eXBlLnNpemU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5udW1iZXJPZkVsZW1lbnRzKzF9LHQucHJvdG90eXBlLmFsbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByaW9yaXR5UXVldWUuc2xpY2UoMCx0aGlzLm51bWJlck9mRWxlbWVudHMrMSl9LHQucHJvdG90eXBlLm1heD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByaW9yaXR5UXVldWVbMF19LHQucHJvdG90eXBlLnN3aW09ZnVuY3Rpb24odCl7Zm9yKDt0PjAmJnRoaXMubGVzcyhFZSh0KSx0KTspdGhpcy5leGNoYW5nZSh0LEVlKHQpKSx0PUVlKHQpfSx0LnByb3RvdHlwZS5zaW5rPWZ1bmN0aW9uKHQpe2Zvcig7Mip0PD10aGlzLm51bWJlck9mRWxlbWVudHM7KXt2YXIgZT0yKnQ7aWYoZTx0aGlzLm51bWJlck9mRWxlbWVudHMmJnRoaXMubGVzcyhlLGUrMSkmJmUrKywhdGhpcy5sZXNzKHQsZSkpYnJlYWs7dGhpcy5leGNoYW5nZSh0LGUpLHQ9ZX19LHQucHJvdG90eXBlLmdldFZhbHVlQXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZ2V0RWxlbWVudFZhbHVlKHRoaXMucHJpb3JpdHlRdWV1ZVt0XSl9LHQucHJvdG90eXBlLmxlc3M9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5nZXRWYWx1ZUF0KHQpPHRoaXMuZ2V0VmFsdWVBdChlKX0sdC5wcm90b3R5cGUuZXhjaGFuZ2U9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLnByaW9yaXR5UXVldWVbdF07dGhpcy5wcmlvcml0eVF1ZXVlW3RdPXRoaXMucHJpb3JpdHlRdWV1ZVtlXSx0aGlzLnByaW9yaXR5UXVldWVbZV09bn0sdH0oKTtmdW5jdGlvbiBMZSh0LGUsbixpLHIsbyl7Zm9yKHZhciBhPW8uc2hhcGUscz1hWzBdLHU9YVsxXSxoPSEwLGw9TWF0aC5tYXgobi1yLDApLGM9TWF0aC5taW4obityKzEscykscD1sO3A8YzsrK3Ape2Zvcih2YXIgZj1NYXRoLm1heChpLXIsMCksZD1NYXRoLm1pbihpK3IrMSx1KSxtPWY7bTxkOysrbSlpZihvLmdldChwLG0sdCk+ZSl7aD0hMTticmVha31pZighaClicmVha31yZXR1cm4gaH1mdW5jdGlvbiBWZSh0KXtyZXR1cm4gTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oZSl7cmV0dXJuWzIsUHJvbWlzZS5hbGwodC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmJ1ZmZlcigpfSkpKV19KSl9KSl9ZnVuY3Rpb24gQmUodCxlLG4saSl7cmV0dXJue3k6aS5nZXQodCxlLG4pLHg6aS5nZXQodCxlLG4rMTcpfX1mdW5jdGlvbiBOZSh0LGUsbil7dmFyIGk9QmUodC5oZWF0bWFwWSx0LmhlYXRtYXBYLHQuaWQsbikscj1pLnksbz1pLng7cmV0dXJue3g6dC5oZWF0bWFwWCplK28seTp0LmhlYXRtYXBZKmUrcn19ZnVuY3Rpb24gRGUodCxlLG4saSl7dmFyIHI9bi54LG89bi55O3JldHVybiB0LnNvbWUoKGZ1bmN0aW9uKHQpe3ZhciBuLGEscyx1LGgsbCxjPXQua2V5cG9pbnRzO3JldHVybiBuPW8sYT1yLHM9Y1tpXS55LHU9Y1tpXS54LChoPXMtbikqaCsobD11LWEpKmw8PWV9KSl9dmFyIEtlPVUucmVkdWNlKChmdW5jdGlvbih0LGUsbil7cmV0dXJuIHRbZV09bix0fSkse30pLFVlPVtbXCJub3NlXCIsXCJsZWZ0X2V5ZVwiXSxbXCJsZWZ0X2V5ZVwiLFwibGVmdF9lYXJcIl0sW1wibm9zZVwiLFwicmlnaHRfZXllXCJdLFtcInJpZ2h0X2V5ZVwiLFwicmlnaHRfZWFyXCJdLFtcIm5vc2VcIixcImxlZnRfc2hvdWxkZXJcIl0sW1wibGVmdF9zaG91bGRlclwiLFwibGVmdF9lbGJvd1wiXSxbXCJsZWZ0X2VsYm93XCIsXCJsZWZ0X3dyaXN0XCJdLFtcImxlZnRfc2hvdWxkZXJcIixcImxlZnRfaGlwXCJdLFtcImxlZnRfaGlwXCIsXCJsZWZ0X2tuZWVcIl0sW1wibGVmdF9rbmVlXCIsXCJsZWZ0X2Fua2xlXCJdLFtcIm5vc2VcIixcInJpZ2h0X3Nob3VsZGVyXCJdLFtcInJpZ2h0X3Nob3VsZGVyXCIsXCJyaWdodF9lbGJvd1wiXSxbXCJyaWdodF9lbGJvd1wiLFwicmlnaHRfd3Jpc3RcIl0sW1wicmlnaHRfc2hvdWxkZXJcIixcInJpZ2h0X2hpcFwiXSxbXCJyaWdodF9oaXBcIixcInJpZ2h0X2tuZWVcIl0sW1wicmlnaHRfa25lZVwiLFwicmlnaHRfYW5rbGVcIl1dLm1hcCgoZnVuY3Rpb24odCl7dmFyIGU9dFswXSxuPXRbMV07cmV0dXJuW0tlW2VdLEtlW25dXX0pKSxqZT1VZS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiB0WzFdfSkpLEhlPVVlLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHRbMF19KSk7ZnVuY3Rpb24gcWUodCxlLG4pe3JldHVybiB0PGU/ZTp0Pm4/bjp0fWZ1bmN0aW9uIFhlKHQsZSxuLGkpe3JldHVybnt5OnFlKE1hdGgucm91bmQodC55L2UpLDAsbi0xKSx4OnFlKE1hdGgucm91bmQodC54L2UpLDAsaS0xKX19ZnVuY3Rpb24gWWUodCxlKXtyZXR1cm57eDp0LngrZS54LHk6dC55K2UueX19ZnVuY3Rpb24gV2UodCxlLG4saSxyLG8sYSxzKXt2b2lkIDA9PT1zJiYocz0yKTtmb3IodmFyIHU9aS5zaGFwZSxoPXVbMF0sbD11WzFdLGM9e3k6ZS55LHg6ZS54fSxwPVllKGMsZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4uc2hhcGVbMl0vMjtyZXR1cm57eTpuLmdldChlLnksZS54LHQpLHg6bi5nZXQoZS55LGUueCxpK3QpfX0odCxYZShjLG8saCxsKSxhKSksZj0wO2Y8cztmKyspe3ZhciBkPVhlKHAsbyxoLGwpLG09QmUoZC55LGQueCxuLHIpO3A9WWUoe3g6ZC54Km8seTpkLnkqb30se3g6bS54LHk6bS55fSl9dmFyIGc9WGUocCxvLGgsbCkseT1pLmdldChnLnksZy54LG4pO3JldHVybnt5OnAueSx4OnAueCxuYW1lOlVbbl0sc2NvcmU6eX19ZnVuY3Rpb24gR2UodCxlLG4saSxyLG8pe3ZhciBhPWUuc2hhcGVbMl0scz1qZS5sZW5ndGgsdT1uZXcgQXJyYXkoYSksaD10LnBhcnQsbD10LnNjb3JlLGM9TmUoaCxpLG4pO3VbaC5pZF09e3Njb3JlOmwsbmFtZTpVW2guaWRdLHk6Yy55LHg6Yy54fTtmb3IodmFyIHA9cy0xO3A+PTA7LS1wKXt2YXIgZj1qZVtwXSxkPUhlW3BdO3VbZl0mJiF1W2RdJiYodVtkXT1XZShwLHVbZl0sZCxlLG4saSxvKSl9Zm9yKHA9MDtwPHM7KytwKXtmPUhlW3BdLGQ9amVbcF07dVtmXSYmIXVbZF0mJih1W2RdPVdlKHAsdVtmXSxkLGUsbixpLHIpKX1yZXR1cm4gdX1mdW5jdGlvbiBRZSh0LGUsbil7cmV0dXJuIG4ucmVkdWNlKChmdW5jdGlvbihuLGkscil7dmFyIG89aS55LGE9aS54LHM9aS5zY29yZTtyZXR1cm4gRGUodCxlLHt5Om8seDphfSxyKXx8KG4rPXMpLG59KSwwKS9uLmxlbmd0aH1mdW5jdGlvbiBaZSh0LGUsbixpLHIsbyxhLHMpe3JldHVybiB2b2lkIDA9PT1hJiYoYT0uNSksdm9pZCAwPT09cyYmKHM9MjApLE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciB1LGgsbCxjLHAsZixkLG0sZyx5LHYseDtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbih3KXtzd2l0Y2gody5sYWJlbCl7Y2FzZSAwOnJldHVybls0LFZlKFt0LGUsbixpXSldO2Nhc2UgMTpmb3IodT13LnNlbnQoKSxoPXVbMF0sbD11WzFdLGM9dVsyXSxwPXVbM10sZj1bXSxkPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGk9bi5zaGFwZSxyPWlbMF0sbz1pWzFdLGE9aVsyXSxzPW5ldyBSZShyKm8qYSwoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2NvcmV9KSksdT0wO3U8cjsrK3UpZm9yKHZhciBoPTA7aDxvOysraClmb3IodmFyIGw9MDtsPGE7KytsKXt2YXIgYz1uLmdldCh1LGgsbCk7Yzx0fHxMZShsLGMsdSxoLGUsbikmJnMuZW5xdWV1ZSh7c2NvcmU6YyxwYXJ0OntoZWF0bWFwWTp1LGhlYXRtYXBYOmgsaWQ6bH19KX1yZXR1cm4gc30oYSwxLGgpLG09cypzO2YubGVuZ3RoPG8mJiFkLmVtcHR5KCk7KWc9ZC5kZXF1ZXVlKCkseT1OZShnLnBhcnQscixsKSxEZShmLG0seSxnLnBhcnQuaWQpfHwodj1HZShnLGgsbCxyLGMscCkseD1RZShmLG0sdiksZi5wdXNoKHtrZXlwb2ludHM6dixzY29yZTp4fSkpO3JldHVyblsyLGZdfX0pKX0pKX1mdW5jdGlvbiAkZSgpe2Zvcih2YXIgdCxlPVtdLG49MDtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbl09YXJndW1lbnRzW25dO3N3aXRjaChlLmxlbmd0aCl7Y2FzZSAwOnQ9XCJmbiBtYWluKCkgXCI7YnJlYWs7Y2FzZSAxOnQ9XCJmbiBtYWluKFwiLmNvbmNhdChlWzBdLFwiIDogaTMyKVwiKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKFwiVW5yZWFjaGFibGVcIil9cmV0dXJuIHR9dmFyIEplPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt0aGlzLnZhcmlhYmxlTmFtZXM9W1wiQVwiLFwiQlwiXSx0aGlzLnNpemU9ITA7dGhpcy53b3JrZ3JvdXBTaXplPVszMiwxLDFdLHRoaXMub3V0cHV0U2hhcGU9W3RbMF0sMV0sdGhpcy5kaXNwYXRjaExheW91dD1FLmZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKSx0aGlzLmRpc3BhdGNoPUUuY29tcHV0ZURpc3BhdGNoKHRoaXMuZGlzcGF0Y2hMYXlvdXQsdGhpcy5vdXRwdXRTaGFwZSx0aGlzLndvcmtncm91cFNpemUpLHRoaXMuc2hhZGVyS2V5PVwiZ2V0cG9pbnRzQ29uZmlkZW5jZU9wXCJ9cmV0dXJuIHQucHJvdG90eXBlLmdldFVzZXJDb2RlPWZ1bmN0aW9uKCl7cmV0dXJuXCJcXG4gICAgICAgIFwiLmNvbmNhdCgkZShcImluZGV4XCIpLFwiIHtcXG4gICAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xcbiAgICAgICAgICAgIGxldCB5ID0gQltpbmRleCAqIDJdO1xcbiAgICAgICAgICAgIGxldCB4ID0gQltpbmRleCAqIDIgKyAxXTtcXG4gICAgICAgICAgICBsZXQgb3V0SW5kZXggPSB5ICogdW5pZm9ybXMuYVNoYXBlLnggKiB1bmlmb3Jtcy5hU2hhcGUueiArIHggKiB1bmlmb3Jtcy5hU2hhcGUueiArIGluZGV4O1xcbiAgICAgICAgICAgIHJlc3VsdFtpbmRleF0gPSBBW291dEluZGV4XTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICAgICAgXCIpfSx0fSgpO2Z1bmN0aW9uIHRuKHQsZSl7aWYodygpaW5zdGFuY2VvZiBSKXJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPXcoKSxpPW5ldyBKZShlLnNoYXBlKSxyPW4ucnVuV2ViR1BVUHJvZ3JhbShpLFt0LGVdLFwiZmxvYXQzMlwiKTtyZXR1cm4gZygpLm1ha2VUZW5zb3JGcm9tVGVuc29ySW5mbyhyKX0odCxlKTt0aHJvdyBuZXcgRXJyb3IoXCJnZXRQb2ludHNDb25maWRlbmNlV2ViR1BVIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBiYWNrZW5kIVwiKX12YXIgZW49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe2lmKHRoaXMudmFyaWFibGVOYW1lcz1bXCJBXCIsXCJCXCJdLHRoaXMuc2l6ZT0hMCx0aGlzLnN1cHBvcnRlZExhc3REaW1lbnNpb249MiwyIT09dC5sZW5ndGh8fHRbMV0hPT10aGlzLnN1cHBvcnRlZExhc3REaW1lbnNpb24pdGhyb3cgbmV3IEVycm9yKFwiR2V0T2Zmc2V0VmVjdG9yc1Byb2dyYW0gb25seSBzdXBwb3J0cyBzaGFwZSBvZiBbeCwgXCIuY29uY2F0KHRoaXMuc3VwcG9ydGVkTGFzdERpbWVuc2lvbixcIl0sIGJ1dCBjdXJyZW50IHNoYXBlIGlzIFwiKS5jb25jYXQodCkpO3RoaXMud29ya2dyb3VwU2l6ZT1bMzIsMSwxXSx0aGlzLm91dHB1dFNoYXBlPXQ7dmFyIGU9W3RbMF0sMV07dGhpcy5kaXNwYXRjaExheW91dD1FLmZsYXREaXNwYXRjaExheW91dChlKSx0aGlzLmRpc3BhdGNoPUUuY29tcHV0ZURpc3BhdGNoKHRoaXMuZGlzcGF0Y2hMYXlvdXQsZSx0aGlzLndvcmtncm91cFNpemUpLHRoaXMuc2hhZGVyS2V5PVwiR2V0T2Zmc2V0VmVjdG9yc1wifXJldHVybiB0LnByb3RvdHlwZS5nZXRVc2VyQ29kZT1mdW5jdGlvbigpe3JldHVyblwiXFxuICAgIGZuIGdldE9mZnNldFBvaW50KHk6IGkzMiwgeDogaTMyLCBpbmRleDogaTMyKSAtPiB2ZWMyPGkzMj4ge1xcbiAgICAgIGxldCBvdXRJbmRleFkgPSB5ICogdW5pZm9ybXMuYlNoYXBlLnggKiB1bmlmb3Jtcy5iU2hhcGUueSArIHggKiB1bmlmb3Jtcy5iU2hhcGUueSArIGluZGV4O1xcbiAgICAgIGxldCBvdXRJbmRleFggPSBvdXRJbmRleFkgKyB1bmlmb3Jtcy5iU2hhcGUuejtcXG4gICAgICBsZXQgb3V0WSA9IGkzMihCW291dEluZGV4WV0pO1xcbiAgICAgIGxldCBvdXRYID0gaTMyKEJbb3V0SW5kZXhYXSk7XFxuICAgICAgcmV0dXJuIHZlYzI8aTMyPihvdXRZLCBvdXRYKTtcXG4gICAgfVxcblxcbiAgICBcIi5jb25jYXQoJGUoXCJpbmRleFwiKSxcIiB7XFxuICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xcbiAgICAgICAgbGV0IGluZGV4WSA9IGluZGV4ICogXCIpLmNvbmNhdCh0aGlzLnN1cHBvcnRlZExhc3REaW1lbnNpb24sXCI7XFxuICAgICAgICBsZXQgaW5kZXhYID0gaW5kZXhZICsgMTtcXG4gICAgICAgIGxldCBoZWF0bWFwWSA9IEFbaW5kZXhZXTtcXG4gICAgICAgIGxldCBoZWF0bWFwWCA9IEFbaW5kZXhYXTtcXG4gICAgICAgIGxldCBvdXQgPSBnZXRPZmZzZXRQb2ludChpMzIoaGVhdG1hcFkpLCBpMzIoaGVhdG1hcFgpLCBpbmRleCk7XFxuICAgICAgICByZXN1bHRbaW5kZXhZXSA9IGYzMihvdXRbMF0pO1xcbiAgICAgICAgcmVzdWx0W2luZGV4WF0gPSBmMzIob3V0WzFdKTtcXG4gICAgICB9XFxuICAgIH1cXG4gICAgXCIpfSx0fSgpO2Z1bmN0aW9uIG5uKHQsZSl7aWYodygpaW5zdGFuY2VvZiBSKXJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPXcoKSxpPW5ldyBlbih0LnNoYXBlKSxyPW4ucnVuV2ViR1BVUHJvZ3JhbShpLFt0LGVdLFwiZmxvYXQzMlwiKTtyZXR1cm4gZygpLm1ha2VUZW5zb3JGcm9tVGVuc29ySW5mbyhyKX0odCxlKTt0aHJvdyBuZXcgRXJyb3IoXCJnZXRPZmZzZXRWZWN0b3JzR1BVIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBiYWNrZW5kIVwiKX1mdW5jdGlvbiBybih0KXt2YXIgZT10LnNoYXBlLG49ZVswXSxpPWVbMV0sbz1lWzJdO3JldHVybiByKChmdW5jdGlvbigpe3ZhciBlLHMsdT1TKHQsW24qaSxvXSksbD16KHUsMCksYz1oKGsobCxBKGksXCJpbnQzMlwiKSksMSkscD1oKChlPWwscz1pLHIoKGZ1bmN0aW9uKCl7dmFyIHQ9ayhlLEEocyxcImludDMyXCIpKTtyZXR1cm4geShlLGEodCxBKHMsXCJpbnQzMlwiKSkpfSkpKSwxKTtyZXR1cm4gTShbYyxwXSwxKX0pKX1mdW5jdGlvbiBvbih0LGUsbil7cmV0dXJuIHIoKGZ1bmN0aW9uKCl7dmFyIGk9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W10saT0wO2k8VS5sZW5ndGg7aSsrKXt2YXIgcj10LmdldChpLDApLnZhbHVlT2YoKSxvPXQuZ2V0KGksMSkudmFsdWVPZigpLGE9YW4ocixvLGksZSksdT1hLngsaD1hLnk7bi5wdXNoKGgpLG4ucHVzaCh1KX1yZXR1cm4gcyhuLFtVLmxlbmd0aCwyXSl9KHQsbik7cmV0dXJuIG8obChhKHQudG9UZW5zb3IoKSxBKGUsXCJpbnQzMlwiKSksXCJmbG9hdDMyXCIpLGkpfSkpfWZ1bmN0aW9uIGFuKHQsZSxuLGkpe3JldHVybnt5OmkuZ2V0KHQsZSxuKSx4OmkuZ2V0KHQsZSxuK1UubGVuZ3RoKX19ZnVuY3Rpb24gc24odCxlLG4pe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgaSxyLG8sYSxzLHUsaCxsLGMscDtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbihmKXtzd2l0Y2goZi5sYWJlbCl7Y2FzZSAwOnJldHVybiBpPTAscj1ybih0KSxbNCxQcm9taXNlLmFsbChbdC5idWZmZXIoKSxlLmJ1ZmZlcigpLHIuYnVmZmVyKCldKV07Y2FzZSAxOnJldHVybiBvPWYuc2VudCgpLGE9b1swXSxzPW9bMV0sdT1vWzJdLFs0LChoPW9uKHUsbixzKSkuYnVmZmVyKCldO2Nhc2UgMjpyZXR1cm4gbD1mLnNlbnQoKSxjPUFycmF5LmZyb20oZnVuY3Rpb24odCxlKXtmb3IodmFyIG49ZS5zaGFwZVswXSxpPW5ldyBGbG9hdDMyQXJyYXkobikscj0wO3I8bjtyKyspe3ZhciBvPWUuZ2V0KHIsMCksYT1lLmdldChyLDEpO2lbcl09dC5nZXQobyxhLHIpfXJldHVybiBpfShhLHUpKSxwPWMubWFwKChmdW5jdGlvbih0LGUpe3JldHVybiBpKz10LHt5OmwuZ2V0KGUsMCkseDpsLmdldChlLDEpLHNjb3JlOnQsbmFtZTpVW2VdfX0pKSxyLmRpc3Bvc2UoKSxoLmRpc3Bvc2UoKSxbMix7a2V5cG9pbnRzOnAsc2NvcmU6aS9wLmxlbmd0aH1dfX0pKX0pKX1mdW5jdGlvbiB1bih0LGUsbil7cmV0dXJuIE4odGhpcyx2b2lkIDAsdm9pZCAwLChmdW5jdGlvbigpe3ZhciBpLHMsdTtyZXR1cm4gRCh0aGlzLChmdW5jdGlvbihoKXtyZXR1cm4gaT1ybih0KSxzPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gcigoZnVuY3Rpb24oKXt2YXIgaT1ubih0LG4pO3JldHVybiBvKGwoYSh0LEEoZSxcImludDMyXCIpKSxcImZsb2F0MzJcIiksaSl9KSl9KGksbixlKSx1PXRuKHQsaSksWzIsW3MsdV1dfSkpfSkpfWZ1bmN0aW9uIGhuKHQsZSl7cmV0dXJuKHQtMSklZT09MH12YXIgbG49XCJodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vdGZqcy1tb2RlbHMvc2F2ZWRtb2RlbC9wb3NlbmV0L21vYmlsZW5ldC9cIixjbj1cImh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS90ZmpzLW1vZGVscy9zYXZlZG1vZGVsL3Bvc2VuZXQvcmVzbmV0NTAvXCI7ZnVuY3Rpb24gcG4odCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4odC0xKSVlPT0wfSh0LGUpP3Q6TWF0aC5mbG9vcih0L2UpKmUrMX12YXIgZm49ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhpcy5wb3NlbmV0TW9kZWw9dDt2YXIgbj10aGlzLnBvc2VuZXRNb2RlbC5pbnB1dHNbMF0uc2hhcGU7aS5hc3NlcnQoLTE9PT1uWzFdJiYtMT09PW5bMl0sKGZ1bmN0aW9uKCl7cmV0dXJuXCJJbnB1dCBzaGFwZSBbXCIuY29uY2F0KG5bMV0sXCIsIFwiKS5jb25jYXQoblsyXSxcIl0gXCIpK1wibXVzdCBib3RoIGJlIGVxdWFsIHRvIG9yIC0xXCJ9KSk7dmFyIHIsbyxhPShyPWUuaW5wdXRSZXNvbHV0aW9uLG89ZS5vdXRwdXRTdHJpZGUse2hlaWdodDpwbihyLmhlaWdodCxvKSx3aWR0aDpwbihyLndpZHRoLG8pfSk7IWZ1bmN0aW9uKHQpe2kuYXNzZXJ0KF9lLmluZGV4T2YodCk+PTAsKGZ1bmN0aW9uKCl7cmV0dXJuXCJvdXRwdXRTdHJpZGUgb2YgXCIuY29uY2F0KHQsXCIgaXMgaW52YWxpZC4gXCIpK1wiSXQgbXVzdCBiZSBlaXRoZXIgOCBvciAxNi5cIn0pKX0oZS5vdXRwdXRTdHJpZGUpLGZ1bmN0aW9uKHQsZSl7aS5hc3NlcnQoaG4odC5oZWlnaHQsZSksKGZ1bmN0aW9uKCl7cmV0dXJuXCJoZWlnaHQgb2YgXCIuY29uY2F0KHQuaGVpZ2h0LFwiIGlzIGludmFsaWQgZm9yIG91dHB1dCBzdHJpZGUgXCIpK1wiXCIuY29uY2F0KGUsXCIuXCIpfSkpLGkuYXNzZXJ0KGhuKHQud2lkdGgsZSksKGZ1bmN0aW9uKCl7cmV0dXJuXCJ3aWR0aCBvZiBcIi5jb25jYXQodC53aWR0aCxcIiBpcyBpbnZhbGlkIGZvciBvdXRwdXQgc3RyaWRlIFwiKStcIlwiLmNvbmNhdChlLFwiLlwiKX0pKX0oYSxlLm91dHB1dFN0cmlkZSksdGhpcy5pbnB1dFJlc29sdXRpb249YSx0aGlzLm91dHB1dFN0cmlkZT1lLm91dHB1dFN0cmlkZSx0aGlzLmFyY2hpdGVjdHVyZT1lLmFyY2hpdGVjdHVyZX1yZXR1cm4gdC5wcm90b3R5cGUuZXN0aW1hdGVQb3Nlcz1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1BZSksTih0aGlzLHZvaWQgMCx2b2lkIDAsKGZ1bmN0aW9uKCl7cmV0dXJuIEQodGhpcywoZnVuY3Rpb24obil7cmV0dXJuWzIsdGhpcy5lc3RpbWF0ZVBvc2VzR1BVKHQsZSwhMSldfSkpfSkpfSx0LnByb3RvdHlwZS5lc3RpbWF0ZVBvc2VzR1BVPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9QWUpLHZvaWQgMD09PW4mJihuPSExKSxOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgaSxyLGEscyx1LGgsbCxjLGQsbSxnLHksdix4LHcsayxiLE07cmV0dXJuIEQodGhpcywoZnVuY3Rpb24oUyl7c3dpdGNoKFMubGFiZWwpe2Nhc2UgMDpyZXR1cm4gaT1mdW5jdGlvbih0KXt2YXIgZT10O2lmKG51bGw9PWUubWF4UG9zZXMmJihlLm1heFBvc2VzPTEpLGUubWF4UG9zZXM8PTApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBtYXhQb3NlcyBcIi5jb25jYXQoZS5tYXhQb3NlcyxcIi4gU2hvdWxkIGJlID4gMC5cIikpO2lmKGUubWF4UG9zZXM+MSl7aWYoKGU9QihCKHt9LHplKSxlKSkuc2NvcmVUaHJlc2hvbGQ8MHx8ZS5zY29yZVRocmVzaG9sZD4xKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgc2NvcmVUaHJlc2hvbGQgXCIuY29uY2F0KGUuc2NvcmVUaHJlc2hvbGQsXCIuIFwiKStcIlNob3VsZCBiZSBpbiByYW5nZSBbMC4wLCAxLjBdXCIpO2lmKGUubm1zUmFkaXVzPD0wKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbm1zUmFkaXVzIFwiLmNvbmNhdChlLm5tc1JhZGl1cyxcIi5cIikpfXJldHVybiBlfShlKSxudWxsPT10P1syLG4/W1tdLFtdXTpbXV06KHRoaXMubWF4UG9zZXM9aS5tYXhQb3NlcyxyPW10KHQse291dHB1dFRlbnNvclNpemU6dGhpcy5pbnB1dFJlc29sdXRpb24sa2VlcEFzcGVjdFJhdGlvOiEwLGJvcmRlck1vZGU6XCJyZXBsaWNhdGVcIn0pLGE9ci5pbWFnZVRlbnNvcixzPXIucGFkZGluZyx1PVwiUmVzTmV0NTBcIj09PXRoaXMuYXJjaGl0ZWN0dXJlP28oYSxDZSk6ZHQoYSxbLTEsMV0pLGg9dGhpcy5wb3NlbmV0TW9kZWwucHJlZGljdCh1KSxcIlJlc05ldDUwXCI9PT10aGlzLmFyY2hpdGVjdHVyZT8obD1wKGhbMl0sWzBdKSxjPXAoaFszXSxbMF0pLGQ9cChoWzBdLFswXSksbT1wKGhbMV0sWzBdKSk6KGw9cChoWzBdLFswXSksYz1wKGhbMV0sWzBdKSxkPXAoaFsyXSxbMF0pLG09cChoWzNdLFswXSkpLGc9UChjKSwxIT09dGhpcy5tYXhQb3Nlcz9bMyw1XTpuP1s0LHVuKGcsbCx0aGlzLm91dHB1dFN0cmlkZSldOlszLDJdKTtjYXNlIDE6cmV0dXJuIHY9Uy5zZW50KCksdz12WzBdLHg9dlsxXSx5PVt3LHhdLFszLDRdO2Nhc2UgMjpyZXR1cm5bNCxzbihnLGwsdGhpcy5vdXRwdXRTdHJpZGUpXTtjYXNlIDM6dz1TLnNlbnQoKSx5PVt3XSxTLmxhYmVsPTQ7Y2FzZSA0OnJldHVyblszLDddO2Nhc2UgNTppZihuKXRocm93IG5ldyBFcnJvcihcIkdQVSByZW5kZXJlciBvbmx5IHN1cHBvcnRzIHNpbmdsZSBwb3NlIVwiKTtyZXR1cm5bNCxaZShnLGwsZCxtLHRoaXMub3V0cHV0U3RyaWRlLHRoaXMubWF4UG9zZXMsaS5zY29yZVRocmVzaG9sZCxpLm5tc1JhZGl1cyldO2Nhc2UgNjp5PVMuc2VudCgpLFMubGFiZWw9NztjYXNlIDc6aWYobil7aWYoITA9PT1pLmZsaXBIb3Jpem9udGFsKXRocm93IG5ldyBFcnJvcihcImZsaXBIb3Jpem9udGFsIGlzIG5vdCBzdXBwb3J0ZWQhXCIpO2s9dGhpcy5nZXRDYW52YXNJbmZvKHJ0KHQpLHRoaXMuaW5wdXRSZXNvbHV0aW9uLHMpfWVsc2UgTT1ydCh0KSxiPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPWUuaGVpZ2h0LG89ZS53aWR0aCxhPXIvKG4uaGVpZ2h0KigxLWkudG9wLWkuYm90dG9tKSkscz1vLyhuLndpZHRoKigxLWkubGVmdC1pLnJpZ2h0KSksdT0taS50b3Aqbi5oZWlnaHQsaD0taS5sZWZ0Km4ud2lkdGg7aWYoMT09PXMmJjE9PT1hJiYwPT09dSYmMD09PWgpcmV0dXJuIHQ7Zm9yKHZhciBsPTAsYz10O2w8Yy5sZW5ndGg7bCsrKWZvcih2YXIgcD0wLGY9Y1tsXS5rZXlwb2ludHM7cDxmLmxlbmd0aDtwKyspe3ZhciBkPWZbcF07ZC54PShkLngraCkqcyxkLnk9KGQueSt1KSphfXJldHVybiB0fSh5LE0sdGhpcy5pbnB1dFJlc29sdXRpb24scyksaS5mbGlwSG9yaXpvbnRhbCYmKGI9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxpPXQ7bjxpLmxlbmd0aDtuKyspZm9yKHZhciByPTAsbz1pW25dLmtleXBvaW50cztyPG8ubGVuZ3RoO3IrKyl7dmFyIGE9b1tyXTthLng9ZS53aWR0aC0xLWEueH1yZXR1cm4gdH0oYixNKSk7cmV0dXJuIGEuZGlzcG9zZSgpLHUuZGlzcG9zZSgpLGYoaCksbC5kaXNwb3NlKCksYy5kaXNwb3NlKCksZC5kaXNwb3NlKCksbS5kaXNwb3NlKCksZy5kaXNwb3NlKCksWzIsbj9beSxrXTpiXX19KSl9KSl9LHQucHJvdG90eXBlLmdldENhbnZhc0luZm89ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQuaGVpZ2h0LHI9dC53aWR0aCxvPWkvKGUuaGVpZ2h0KigxLW4udG9wLW4uYm90dG9tKSksYT1yLyhlLndpZHRoKigxLW4ubGVmdC1uLnJpZ2h0KSkscz0tbi50b3AqZS5oZWlnaHQ7cmV0dXJuWy1uLmxlZnQqZS53aWR0aCxzLGEsbyx0LndpZHRoLHQuaGVpZ2h0XX0sdC5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe3RoaXMucG9zZW5ldE1vZGVsLmRpc3Bvc2UoKX0sdC5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt9LHR9KCk7ZnVuY3Rpb24gZG4odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PVRlKSxOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgZSxuLGkscixvO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKGEpe3N3aXRjaChhLmxhYmVsKXtjYXNlIDA6cmV0dXJuXCJSZXNOZXQ1MFwiIT09KGU9ZnVuY3Rpb24odCl7dmFyIGU9dHx8VGU7aWYobnVsbD09ZS5hcmNoaXRlY3R1cmUmJihlLmFyY2hpdGVjdHVyZT1cIk1vYmlsZU5ldFYxXCIpLFBlLmluZGV4T2YoZS5hcmNoaXRlY3R1cmUpPDApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhcmNoaXRlY3R1cmUgXCIuY29uY2F0KGUuYXJjaGl0ZWN0dXJlLFwiLiBcIikrXCJTaG91bGQgYmUgb25lIG9mIFwiLmNvbmNhdChQZSkpO2lmKG51bGw9PWUuaW5wdXRSZXNvbHV0aW9uJiYoZS5pbnB1dFJlc29sdXRpb249e2hlaWdodDoyNTcsd2lkdGg6MjU3fSksbnVsbD09ZS5vdXRwdXRTdHJpZGUmJihlLm91dHB1dFN0cmlkZT0xNiksRmVbZS5hcmNoaXRlY3R1cmVdLmluZGV4T2YoZS5vdXRwdXRTdHJpZGUpPDApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvdXRwdXRTdHJpZGUgXCIuY29uY2F0KGUub3V0cHV0U3RyaWRlLFwiLiBcIikrXCJTaG91bGQgYmUgb25lIG9mIFwiLmNvbmNhdChGZVtlLmFyY2hpdGVjdHVyZV0sXCIgXCIpK1wiZm9yIGFyY2hpdGVjdHVyZSBcIi5jb25jYXQoZS5hcmNoaXRlY3R1cmUsXCIuXCIpKTtpZihudWxsPT1lLm11bHRpcGxpZXImJihlLm11bHRpcGxpZXI9MSksT2VbZS5hcmNoaXRlY3R1cmVdLmluZGV4T2YoZS5tdWx0aXBsaWVyKTwwKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbXVsdGlwbGllciBcIi5jb25jYXQoZS5tdWx0aXBsaWVyLFwiLiBcIikrXCJTaG91bGQgYmUgb25lIG9mIFwiLmNvbmNhdChPZVtlLmFyY2hpdGVjdHVyZV0sXCIgXCIpK1wiZm9yIGFyY2hpdGVjdHVyZSBcIi5jb25jYXQoZS5hcmNoaXRlY3R1cmUsXCIuXCIpKTtpZihudWxsPT1lLnF1YW50Qnl0ZXMmJihlLnF1YW50Qnl0ZXM9NCksSWUuaW5kZXhPZihlLnF1YW50Qnl0ZXMpPDApdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBxdWFudEJ5dGVzIFwiLmNvbmNhdChlLnF1YW50Qnl0ZXMsXCIuIFwiKStcIlNob3VsZCBiZSBvbmUgb2YgXCIuY29uY2F0KEllLFwiIFwiKStcImZvciBhcmNoaXRlY3R1cmUgXCIuY29uY2F0KGUuYXJjaGl0ZWN0dXJlLFwiLlwiKSk7aWYoXCJNb2JpbGVOZXRWMVwiPT09ZS5hcmNoaXRlY3R1cmUmJjMyPT09ZS5vdXRwdXRTdHJpZGUmJjEhPT1lLm11bHRpcGxpZXIpdGhyb3cgbmV3IEVycm9yKFwiV2hlbiB1c2luZyBhbiBvdXRwdXQgc3RyaWRlIG9mIDMyLCB5b3UgbXVzdCBzZWxlY3QgMSBhcyB0aGUgbXVsdGlwbGllci5cIik7cmV0dXJuIGV9KHQpKS5hcmNoaXRlY3R1cmU/WzMsMl06KHM9ZS5vdXRwdXRTdHJpZGUsdT1lLnF1YW50Qnl0ZXMsaD1cIm1vZGVsLXN0cmlkZVwiLmNvbmNhdChzLFwiLmpzb25cIiksbj00PT09dT9jbitcImZsb2F0L1wiK2g6Y24rXCJxdWFudFwiLmNvbmNhdCh1LFwiL1wiKStoLFs0LEMoZS5tb2RlbFVybHx8bildKTtjYXNlIDE6cmV0dXJuIGk9YS5zZW50KCksWzIsbmV3IGZuKGksZSldO2Nhc2UgMjpyZXR1cm4gcj1mdW5jdGlvbih0LGUsbil7dmFyIGk9ezE6XCIxMDBcIiwuNzU6XCIwNzVcIiwuNTpcIjA1MFwifSxyPVwibW9kZWwtc3RyaWRlXCIuY29uY2F0KHQsXCIuanNvblwiKTtyZXR1cm4gND09PW4/bG4rXCJmbG9hdC9cIi5jb25jYXQoaVtlXSxcIi9cIikrcjpsbitcInF1YW50XCIuY29uY2F0KG4sXCIvXCIpLmNvbmNhdChpW2VdLFwiL1wiKStyfShlLm91dHB1dFN0cmlkZSxlLm11bHRpcGxpZXIsZS5xdWFudEJ5dGVzKSxbNCxDKGUubW9kZWxVcmx8fHIpXTtjYXNlIDM6cmV0dXJuIG89YS5zZW50KCksWzIsbmV3IGZuKG8sZSldfXZhciBzLHUsaH0pKX0pKX1mdW5jdGlvbiBtbih0LGUpe3JldHVybiBOKHRoaXMsdm9pZCAwLHZvaWQgMCwoZnVuY3Rpb24oKXt2YXIgbixpO3JldHVybiBEKHRoaXMsKGZ1bmN0aW9uKHIpe3N3aXRjaCh0KXtjYXNlIHNlLlBvc2VOZXQ6cmV0dXJuWzIsZG4oZSldO2Nhc2Ugc2UuQmxhemVQb3NlOmlmKGk9dm9pZCAwLG51bGwhPShuPWUpKXtpZihcInRmanNcIj09PW4ucnVudGltZSlyZXR1cm5bMixvZShlKV07aWYoXCJtZWRpYXBpcGVcIj09PW4ucnVudGltZSlyZXR1cm5bMixpdChlKV07aT1uLnJ1bnRpbWV9dGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0IG1vZGVsQ29uZmlnLnJ1bnRpbWUgdG8gYmUgZWl0aGVyICd0ZmpzJyBcIitcIm9yICdtZWRpYXBpcGUnLCBidXQgZ290IFwiLmNvbmNhdChpKSk7Y2FzZSBzZS5Nb3ZlTmV0OnJldHVyblsyLFNlKGUpXTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlwiLmNvbmNhdCh0LFwiIGlzIG5vdCBhIHN1cHBvcnRlZCBtb2RlbCBuYW1lLlwiKSl9fSkpfSkpfXZhciBnbj17a2V5cG9pbnRzVG9Ob3JtYWxpemVkS2V5cG9pbnRzOkF0fSx5bj17bW9kZWxUeXBlOntTSU5HTEVQT1NFX0xJR0hUTklORzpcIlNpbmdsZVBvc2UuTGlnaHRuaW5nXCIsU0lOR0xFUE9TRV9USFVOREVSOlwiU2luZ2xlUG9zZS5UaHVuZGVyXCIsTVVMVElQT1NFX0xJR0hUTklORzpcIk11bHRpUG9zZS5MaWdodG5pbmdcIn19O2V4cG9ydHtzZSBhcyBTdXBwb3J0ZWRNb2RlbHMsYWUgYXMgVHJhY2tlclR5cGUsZ24gYXMgY2FsY3VsYXRvcnMsbW4gYXMgY3JlYXRlRGV0ZWN0b3IseW4gYXMgbW92ZW5ldCxwZSBhcyB1dGlsfTtcbiJdLCJuYW1lcyI6WyJQb3NlIiwidCIsIlRlbnNvciIsImUiLCJicm93c2VyIiwibiIsInV0aWwiLCJpIiwidGlkeSIsInIiLCJhZGQiLCJvIiwibXVsIiwiYSIsInRlbnNvcjJkIiwicyIsImltYWdlIiwidSIsImV4cGFuZERpbXMiLCJoIiwiY2FzdCIsImwiLCJzbGljZSIsImMiLCJzcXVlZXplIiwicCIsImRpc3Bvc2UiLCJmIiwidGVuc29yMWQiLCJkIiwiZ2V0QmFja2VuZCIsIm0iLCJlbmdpbmUiLCJnIiwic3ViIiwieSIsInNxdWFyZSIsInYiLCJtaW5pbXVtIiwieCIsImJhY2tlbmQiLCJ3IiwiZGl2IiwiayIsImV4cCIsImIiLCJjb25jYXQiLCJNIiwicmVzaGFwZSIsIlMiLCJjbGlwQnlWYWx1ZSIsIlQiLCJzaWdtb2lkIiwiUCIsInBhZCIsIkYiLCJtaXJyb3JQYWQiLCJfIiwiZW52IiwiTyIsInplcm9zIiwiSSIsInNjYWxhciIsIkEiLCJhcmdNYXgiLCJ6IiwibG9hZEdyYXBoTW9kZWwiLCJDIiwid2ViZ3B1X3V0aWwiLCJFIiwiV2ViR1BVQmFja2VuZCIsIlIiLCJMIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlYiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsIkIiLCJhc3NpZ24iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcHBseSIsIk4iLCJQcm9taXNlIiwibmV4dCIsInRocm93IiwiZG9uZSIsInZhbHVlIiwidGhlbiIsIkQiLCJsYWJlbCIsInNlbnQiLCJ0cnlzIiwib3BzIiwicmV0dXJuIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJwb3AiLCJwdXNoIiwiSyIsIlUiLCJqIiwiSCIsImxlZnQiLCJyaWdodCIsIm1pZGRsZSIsInEiLCJYIiwiWSIsIlciLCJTVkdBbmltYXRlZExlbmd0aCIsImJhc2VWYWwiLCJHIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidG9QaXhlbHMiLCJ3aWR0aCIsImhlaWdodCIsImdldENvbnRleHQiLCJJbWFnZURhdGEiLCJwdXRJbWFnZURhdGEiLCJkcmF3SW1hZ2UiLCJRIiwic2hhcGUiLCJiaW5kIiwiZ2V0SW1hZ2VEYXRhIiwiWiIsIlNWR0ltYWdlRWxlbWVudCIsIk9mZnNjcmVlbkNhbnZhcyIsImZyb21QaXhlbHMiLCIkIiwiRXJyb3IiLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJKIiwicnVudGltZSIsImVuYWJsZVNtb290aGluZyIsImVuYWJsZVNlZ21lbnRhdGlvbiIsInNtb290aFNlZ21lbnRhdGlvbiIsIm1vZGVsVHlwZSIsInR0IiwibWFzayIsInRvQ2FudmFzSW1hZ2VTb3VyY2UiLCJ0b0ltYWdlRGF0YSIsInRvVGVuc29yIiwiZ2V0VW5kZXJseWluZ1R5cGUiLCJldCIsIm50Iiwic2VsZmllTW9kZSIsInBvc2VTb2x1dGlvbiIsImxvY2F0ZUZpbGUiLCJzb2x1dGlvblBhdGgiLCJyZXBsYWNlIiwic2V0T3B0aW9ucyIsIm1vZGVsQ29tcGxleGl0eSIsInNtb290aExhbmRtYXJrcyIsIm9uUmVzdWx0cyIsInBvc2VMYW5kbWFya3MiLCJwb3NlcyIsInRyYW5zbGF0ZU91dHB1dCIsInBvc2VXb3JsZExhbmRtYXJrcyIsInNlZ21lbnRhdGlvbk1hc2siLCJzZWdtZW50YXRpb24iLCJtYXNrVmFsdWVUb0xhYmVsIiwia2V5cG9pbnRzIiwibWFwIiwic2NvcmUiLCJ2aXNpYmlsaXR5IiwibmFtZSIsImtleXBvaW50czNEIiwiZXN0aW1hdGVQb3NlcyIsImZsaXBIb3Jpem9udGFsIiwic2VuZCIsImNsb3NlIiwicmVzZXQiLCJpbml0aWFsaXplIiwiaXQiLCJydCIsIm90IiwiTWF0aCIsIlBJIiwiZmxvb3IiLCJhdCIsInN0IiwidXQiLCJhc3NlcnQiLCJodCIsInJvdGF0aW9uVmVjdG9yU3RhcnRLZXlwb2ludEluZGV4Iiwicm90YXRpb25WZWN0b3JFbmRLZXlwb2ludEluZGV4IiwibG9jYXRpb25EYXRhIiwicmVsYXRpdmVLZXlwb2ludHMiLCJzcXJ0Iiwicm90YXRpb25WZWN0b3JUYXJnZXRBbmdsZSIsInJvdGF0aW9uVmVjdG9yVGFyZ2V0QW5nbGVEZWdyZWUiLCJhdGFuMiIsInhDZW50ZXIiLCJ5Q2VudGVyIiwicm90YXRpb24iLCJsdCIsImN0IiwicHQiLCJmdCIsImlnbm9yZVJvdGF0aW9uIiwiY29zIiwic2luIiwiZHQiLCJzY2FsZSIsIm9mZnNldCIsIm10Iiwib3V0cHV0VGVuc29yU2l6ZSIsImtlZXBBc3BlY3RSYXRpbyIsImJvcmRlck1vZGUiLCJvdXRwdXRUZW5zb3JGbG9hdFJhbmdlIiwidG9wIiwiYm90dG9tIiwiaW1hZ2VUZW5zb3IiLCJ0cmFuc2Zvcm0iLCJwYWRkaW5nIiwidHJhbnNmb3JtYXRpb25NYXRyaXgiLCJndCIsInl0IiwiYm94ZXMiLCJsb2dpdHMiLCJ2dCIsImN1cnJlbnRUaW1lIiwieHQiLCJNQVhfU0FGRV9JTlRFR0VSIiwiTUlOX1NBRkVfSU5URUdFUiIsIm1pbiIsIm1heCIsInJlbGF0aXZlQm91bmRpbmdCb3giLCJ4TWluIiwieU1pbiIsInhNYXgiLCJ5TWF4Iiwid3QiLCJzb3J0Iiwibm9uTWF4U3VwcHJlc3Npb25Bc3luYyIsImFycmF5IiwiZmlsdGVyIiwiaW5kZXhPZiIsImt0IiwiYnQiLCJidWZmZXIiLCJ0cnVuYyIsImtlcm5lbFNpemUiLCJnZXQiLCJtaW5Db25maWRlbmNlVG9SZWZpbmUiLCJNdCIsIlN0IiwiY29tYmluZVdpdGhQcmV2aW91c1JhdGlvIiwidG9GaXhlZCIsInZhcmlhYmxlTmFtZXMiLCJvdXRwdXRTaGFwZSIsInVzZXJDb2RlIiwiY29tcGlsZUFuZFJ1biIsIm1ha2VUZW5zb3JGcm9tRGF0YUlkIiwiZGF0YUlkIiwiZHR5cGUiLCJUdCIsInJldmVyc2VPdXRwdXRPcmRlciIsImJveENvb3JkT2Zmc2V0IiwieFNjYWxlIiwieVNjYWxlIiwiYXBwbHlFeHBvbmVudGlhbE9uQm94U2l6ZSIsImhTY2FsZSIsIndTY2FsZSIsIm51bUJveGVzIiwibnVtS2V5cG9pbnRzIiwia2V5cG9pbnRDb29yZE9mZnNldCIsIm51bVZhbHVlc1BlcktleXBvaW50Iiwic2lnbW9pZFNjb3JlIiwic2NvcmVDbGlwcGluZ1RocmVzaCIsIlB0IiwiZGF0YSIsIm1pblNjb3JlVGhyZXNoIiwibnVtQ29vcmRzIiwiRnQiLCJmbGlwVmVydGljYWxseSIsImluZCIsIl90IiwiT3QiLCJmbGlwSG9yaXpvbnRhbGx5Iiwic2l6ZSIsIm51bUxhbmRtYXJrcyIsImlucHV0SW1hZ2VXaWR0aCIsImlucHV0SW1hZ2VIZWlnaHQiLCJ2aXNpYmlsaXR5QWN0aXZhdGlvbiIsIm5vcm1hbGl6ZVoiLCJJdCIsInJvdGF0aW9uRGVncmVlIiwic2hpZnRYIiwic2hpZnRZIiwic3F1YXJlTG9uZyIsInNxdWFyZVNob3J0Iiwic2NhbGVYIiwic2NhbGVZIiwiQXQiLCJ6dCIsImFscGhhIiwiaW5pdGlhbGl6ZWQiLCJzdG9yZWRWYWx1ZSIsImFzaW5oIiwicmF3VmFsdWUiLCJhcHBseVdpdGhBbHBoYSIsImhhc0xhc3RSYXdWYWx1ZSIsImxhc3RSYXdWYWx1ZSIsIkN0IiwiZnJlcXVlbmN5IiwibWluQ3V0T2ZmIiwiYmV0YSIsInRocmVzaG9sZEN1dE9mZiIsInRocmVzaG9sZEJldGEiLCJkZXJpdmF0ZUN1dE9mZiIsImdldEFscGhhIiwiZHgiLCJsYXN0VGltZXN0YW1wIiwiYWJzIiwiRXQiLCJjb25maWciLCJpbml0aWFsaXplRmlsdGVyc0lmRW1wdHkiLCJkaXNhYmxlVmFsdWVTY2FsaW5nIiwibWluQWxsb3dlZE9iamVjdFNjYWxlIiwieEZpbHRlcnMiLCJ5RmlsdGVycyIsInpGaWx0ZXJzIiwiUnQiLCJ3aW5kb3ciLCJsb3dQYXNzRmlsdGVyIiwibGFzdFZhbHVlIiwibGFzdFZhbHVlU2NhbGUiLCJkdXJhdGlvbiIsImRpc3RhbmNlIiwidmVsb2NpdHlTY2FsZSIsInVuc2hpZnQiLCJ3aW5kb3dTaXplIiwiTHQiLCJWdCIsInZlbG9jaXR5RmlsdGVyIiwia2V5cG9pbnRzRmlsdGVyIiwib25lRXVyb0ZpbHRlciIsIkJ0IiwidmlzaWJpbGl0eUZpbHRlcnMiLCJOdCIsInJlZHVjZUJveGVzSW5Mb3dlc3RsYXllciIsImludGVycG9sYXRlZFNjYWxlQXNwZWN0UmF0aW8iLCJmZWF0dXJlTWFwSGVpZ2h0IiwiZmVhdHVyZU1hcFdpZHRoIiwibnVtTGF5ZXJzIiwibWluU2NhbGUiLCJtYXhTY2FsZSIsImlucHV0U2l6ZUhlaWdodCIsImlucHV0U2l6ZVdpZHRoIiwiYW5jaG9yT2Zmc2V0WCIsImFuY2hvck9mZnNldFkiLCJzdHJpZGVzIiwiYXNwZWN0UmF0aW9zIiwiZml4ZWRBbmNob3JTaXplIiwiRHQiLCJkZXRlY3Rvck1vZGVsVXJsIiwibGFuZG1hcmtNb2RlbFVybCIsIkt0IiwibWF4UG9zZXMiLCJVdCIsImlnbm9yZUNsYXNzZXMiLCJudW1DbGFzc2VzIiwianQiLCJIdCIsInF0IiwiWHQiLCJZdCIsIld0IiwiR3QiLCJRdCIsIlp0IiwiJHQiLCJKdCIsInRlIiwiYWN0aXZhdGlvbiIsImVlIiwibmUiLCJpZSIsInJlIiwiZGV0ZWN0b3JNb2RlbCIsImxhbmRtYXJrTW9kZWwiLCJyZWdpb25PZkludGVyZXN0IiwicHJldkZpbHRlcmVkU2VnbWVudGF0aW9uTWFzayIsImFuY2hvcnMiLCJyZWR1Y2VCb3hlc0luTG93ZXN0TGF5ZXIiLCJjZWlsIiwiYW5jaG9yVGVuc29yIiwidGltZXN0YW1wIiwiZGV0ZWN0UG9zZSIsInBvc2VEZXRlY3Rpb25Ub1JvaSIsInBvc2VMYW5kbWFya3NCeVJvaSIsImxhbmRtYXJrcyIsImF1eGlsaWFyeUxhbmRtYXJrcyIsInBvc2VTY29yZSIsIndvcmxkTGFuZG1hcmtzIiwicG9zZUxhbmRtYXJrRmlsdGVyaW5nIiwiYWN0dWFsTGFuZG1hcmtzRmlsdGVyZWQiLCJhdXhpbGlhcnlMYW5kbWFya3NGaWx0ZXJlZCIsImFjdHVhbFdvcmxkTGFuZG1hcmtzRmlsdGVyZWQiLCJwb3NlTGFuZG1hcmtzVG9Sb2kiLCJwb3NlU2VnbWVudGF0aW9uRmlsdGVyaW5nIiwiZm9yRWFjaCIsInZpc2liaWxpdHlTbW9vdGhpbmdGaWx0ZXJBY3R1YWwiLCJ2aXNpYmlsaXR5U21vb3RoaW5nRmlsdGVyQXV4aWxpYXJ5IiwibGFuZG1hcmtzU21vb3RoaW5nRmlsdGVyQWN0dWFsIiwibGFuZG1hcmtzU21vb3RoaW5nRmlsdGVyQXV4aWxpYXJ5IiwicHJlZGljdCIsImV4ZWN1dGUiLCJ0ZW5zb3JzVG9Qb3NlTGFuZG1hcmtzQW5kU2VnbWVudGF0aW9uIiwicG9zZUxhbmRtYXJrc0FuZFNlZ21lbnRhdGlvbkludmVyc2VQcm9qZWN0aW9uIiwiZmlsbCIsInJlc2l6ZUJpbGluZWFyIiwid29ybGRMYW5kbWFya3NTbW9vdGhpbmdGaWx0ZXJBY3R1YWwiLCJvZSIsImFsbCIsImZyb21URkh1YiIsImFlIiwic2UiLCJ1ZSIsIm1heFRyYWNrcyIsIm1heEFnZSIsImtleXBvaW50VHJhY2tlclBhcmFtcyIsImtleXBvaW50Q29uZmlkZW5jZVRocmVzaG9sZCIsIm1pbk51bWJlck9mS2V5cG9pbnRzIiwia2V5cG9pbnRGYWxsb2ZmIiwidHJhY2tzIiwibWluU2ltaWxhcml0eSIsIm5leHRJRCIsImZpbHRlck9sZFRyYWNrcyIsImNvbXB1dGVTaW1pbGFyaXR5IiwiYXNzaWduVHJhY2tzIiwidXBkYXRlVHJhY2tzIiwiZ2V0VHJhY2tzIiwiZ2V0VHJhY2tJRHMiLCJTZXQiLCJpZCIsImZyb20iLCJrZXlzIiwiY3JlYXRlVHJhY2siLCJzcGxpY2UiLCJuZXh0VHJhY2tJRCIsImJveCIsInJlbW92ZSIsImluY2x1ZGVzIiwiaGUiLCJpb3UiLCJsZSIsImtleXBvaW50VGhyZXNob2xkIiwibWluTnVtS2V5b2ludHMiLCJva3MiLCJhcmVhIiwicG93IiwiY2UiLCJCbGF6ZVBvc2UiLCJyZWR1Y2UiLCJQb3NlTmV0IiwiTW92ZU5ldCIsIktleXBvaW50IiwiQm91bmRpbmdCb3giLCJwZSIsImZyZWV6ZSIsImdldEtleXBvaW50SW5kZXhCeVNpZGUiLCJnZXRBZGphY2VudFBhaXJzIiwiZ2V0S2V5cG9pbnRJbmRleEJ5TmFtZSIsImZlIiwiZGUiLCJtZSIsImdlIiwieWUiLCJ2ZSIsInRyYWNrZXJQYXJhbXMiLCJ4ZSIsImxlZnRfaGlwIiwicmlnaHRfaGlwIiwibGVmdF9zaG91bGRlciIsInJpZ2h0X3Nob3VsZGVyIiwid2UiLCJrZSIsIm1pblBvc2VTY29yZSIsIm11bHRpUG9zZU1heERpbWVuc2lvbiIsImVuYWJsZVRyYWNraW5nIiwidHJhY2tlclR5cGUiLCJ0cmFja2VyQ29uZmlnIiwiYmUiLCJNZSIsIm1vdmVOZXRNb2RlbCIsIm1vZGVsSW5wdXRSZXNvbHV0aW9uIiwia2V5cG9pbnRJbmRleEJ5TmFtZSIsIm11bHRpUG9zZU1vZGVsIiwia2V5cG9pbnRGaWx0ZXIiLCJjcm9wUmVnaW9uRmlsdGVyWU1pbiIsImNyb3BSZWdpb25GaWx0ZXJYTWluIiwiY3JvcFJlZ2lvbkZpbHRlcllNYXgiLCJjcm9wUmVnaW9uRmlsdGVyWE1heCIsInRyYWNrZXIiLCJrZXlwb2ludEZpbHRlck1hcCIsIk1hcCIsInJ1blNpbmdsZVBlcnNvblBvc2VNb2RlbCIsImRhdGFTeW5jIiwicnVuTXVsdGlQZXJzb25Qb3NlTW9kZWwiLCJlc3RpbWF0ZVNpbmdsZVBvc2UiLCJlc3RpbWF0ZU11bHRpcGxlUG9zZXMiLCJjcm9wUmVnaW9uIiwiY3JvcEFuZFJlc2l6ZSIsImZpbHRlckNyb3BSZWdpb24iLCJyb3VuZCIsImhhcyIsInNldCIsImRlbGV0ZSIsInJlc2V0RmlsdGVycyIsIlNlIiwibW9kZWxVcmwiLCJUZSIsImFyY2hpdGVjdHVyZSIsIm91dHB1dFN0cmlkZSIsIm11bHRpcGxpZXIiLCJpbnB1dFJlc29sdXRpb24iLCJQZSIsIkZlIiwiTW9iaWxlTmV0VjEiLCJSZXNOZXQ1MCIsIl9lIiwiT2UiLCJJZSIsIkFlIiwiemUiLCJzY29yZVRocmVzaG9sZCIsIm5tc1JhZGl1cyIsIkNlIiwiRWUiLCJSZSIsInByaW9yaXR5UXVldWUiLCJudW1iZXJPZkVsZW1lbnRzIiwiZ2V0RWxlbWVudFZhbHVlIiwiZW5xdWV1ZSIsInN3aW0iLCJkZXF1ZXVlIiwiZXhjaGFuZ2UiLCJzaW5rIiwiZW1wdHkiLCJsZXNzIiwiZ2V0VmFsdWVBdCIsIkxlIiwiVmUiLCJCZSIsIk5lIiwiaGVhdG1hcFkiLCJoZWF0bWFwWCIsIkRlIiwic29tZSIsIktlIiwiVWUiLCJqZSIsIkhlIiwicWUiLCJYZSIsIlllIiwiV2UiLCJHZSIsInBhcnQiLCJRZSIsIlplIiwiJGUiLCJKZSIsIndvcmtncm91cFNpemUiLCJkaXNwYXRjaExheW91dCIsImZsYXREaXNwYXRjaExheW91dCIsImRpc3BhdGNoIiwiY29tcHV0ZURpc3BhdGNoIiwic2hhZGVyS2V5IiwiZ2V0VXNlckNvZGUiLCJ0biIsInJ1bldlYkdQVVByb2dyYW0iLCJtYWtlVGVuc29yRnJvbVRlbnNvckluZm8iLCJlbiIsInN1cHBvcnRlZExhc3REaW1lbnNpb24iLCJubiIsInJuIiwib24iLCJ2YWx1ZU9mIiwiYW4iLCJzbiIsIkZsb2F0MzJBcnJheSIsInVuIiwiaG4iLCJsbiIsImNuIiwicG4iLCJmbiIsInBvc2VuZXRNb2RlbCIsImlucHV0cyIsImVzdGltYXRlUG9zZXNHUFUiLCJnZXRDYW52YXNJbmZvIiwiZG4iLCJxdWFudEJ5dGVzIiwibW4iLCJnbiIsImtleXBvaW50c1RvTm9ybWFsaXplZEtleXBvaW50cyIsInluIiwiU0lOR0xFUE9TRV9MSUdIVE5JTkciLCJTSU5HTEVQT1NFX1RIVU5ERVIiLCJNVUxUSVBPU0VfTElHSFROSU5HIiwiU3VwcG9ydGVkTW9kZWxzIiwiVHJhY2tlclR5cGUiLCJjYWxjdWxhdG9ycyIsImNyZWF0ZURldGVjdG9yIiwibW92ZW5ldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tensorflow-models/pose-detection/dist/pose-detection.esm.js\n");

/***/ })

};
;