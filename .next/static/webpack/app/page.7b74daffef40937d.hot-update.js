"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/pose_detection/index.js":
/*!*****************************************!*\
  !*** ./src/app/pose_detection/index.js ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   app: function() { return /* binding */ app; }\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_backend_webgl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-backend-webgl */ \"(app-pages-browser)/./node_modules/@tensorflow/tfjs-backend-webgl/dist/index.js\");\n/* harmony import */ var _tensorflow_tfjs_backend_webgpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-backend-webgpu */ \"(app-pages-browser)/./node_modules/@tensorflow/tfjs-backend-webgpu/dist/index.js\");\n/* harmony import */ var _mediapipe_pose__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mediapipe/pose */ \"(app-pages-browser)/./node_modules/@mediapipe/pose/pose.js\");\n/* harmony import */ var _mediapipe_pose__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_mediapipe_pose__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _tensorflow_tfjs_backend_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-backend-wasm */ \"(app-pages-browser)/./node_modules/@tensorflow/tfjs-backend-wasm/dist/index.js\");\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"(app-pages-browser)/./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow-models/pose-detection */ \"(app-pages-browser)/./node_modules/@tensorflow-models/pose-detection/dist/pose-detection.esm.js\");\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./camera */ \"(app-pages-browser)/./src/app/pose_detection/camera.js\");\n/* harmony import */ var _renderer_webgpu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./renderer_webgpu */ \"(app-pages-browser)/./src/app/pose_detection/renderer_webgpu.js\");\n/* harmony import */ var _renderer_canvas2d__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./renderer_canvas2d */ \"(app-pages-browser)/./src/app/pose_detection/renderer_canvas2d.js\");\n/* harmony import */ var _option_panel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./option_panel */ \"(app-pages-browser)/./src/app/pose_detection/option_panel.js\");\n/* harmony import */ var _params__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./params */ \"(app-pages-browser)/./src/app/pose_detection/params.js\");\n/* harmony import */ var _stats_panel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./stats_panel */ \"(app-pages-browser)/./src/app/pose_detection/stats_panel.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./src/app/pose_detection/util.js\");\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */ \n\n\n\n\n_tensorflow_tfjs_backend_wasm__WEBPACK_IMPORTED_MODULE_2__.setWasmPaths(\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@\".concat(_tensorflow_tfjs_backend_wasm__WEBPACK_IMPORTED_MODULE_2__.version_wasm, \"/dist/\"));\n\n\n\n\n\n\n\n\nlet detector, camera, stats;\nlet startInferenceTime, numInferences = 0;\nlet inferenceTimeSum = 0, lastPanelUpdate = 0;\nlet rafId;\nlet renderer = null;\nlet useGpuRenderer = false;\nasync function createDetector() {\n    switch(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.model){\n        case _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.SupportedModels.PoseNet:\n            return _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.createDetector(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.model, {\n                quantBytes: 4,\n                architecture: \"MobileNetV1\",\n                outputStride: 16,\n                inputResolution: {\n                    width: 500,\n                    height: 500\n                },\n                multiplier: 0.75\n            });\n        case _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.SupportedModels.BlazePose:\n            const runtime = _params__WEBPACK_IMPORTED_MODULE_9__.STATE.backend.split(\"-\")[0];\n            if (runtime === \"mediapipe\") {\n                return _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.createDetector(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.model, {\n                    runtime,\n                    modelType: _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.type,\n                    solutionPath: \"https://cdn.jsdelivr.net/npm/@mediapipe/pose@\".concat(_mediapipe_pose__WEBPACK_IMPORTED_MODULE_12__.VERSION)\n                });\n            } else if (runtime === \"tfjs\") {\n                return _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.createDetector(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.model, {\n                    runtime,\n                    modelType: _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.type\n                });\n            }\n        case _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.SupportedModels.MoveNet:\n            let modelType;\n            if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.type == \"lightning\") {\n                modelType = _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.movenet.modelType.SINGLEPOSE_LIGHTNING;\n            } else if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.type == \"thunder\") {\n                modelType = _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.movenet.modelType.SINGLEPOSE_THUNDER;\n            } else if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.type == \"multipose\") {\n                modelType = _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.movenet.modelType.MULTIPOSE_LIGHTNING;\n            }\n            const modelConfig = {\n                modelType\n            };\n            if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.customModel !== \"\") {\n                modelConfig.modelUrl = _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.customModel;\n            }\n            if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.type === \"multipose\") {\n                modelConfig.enableTracking = _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.enableTracking;\n            }\n            return _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.createDetector(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.model, modelConfig);\n    }\n}\nasync function checkGuiUpdate() {\n    if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.isTargetFPSChanged || _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isSizeOptionChanged) {\n        camera = await _camera__WEBPACK_IMPORTED_MODULE_5__.Camera.setupCamera(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.camera);\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isTargetFPSChanged = false;\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isSizeOptionChanged = false;\n    }\n    if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.isModelChanged || _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isFlagChanged || _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isBackendChanged) {\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isModelChanged = true;\n        window.cancelAnimationFrame(rafId);\n        if (detector != null) {\n            detector.dispose();\n        }\n        if (_params__WEBPACK_IMPORTED_MODULE_9__.STATE.isFlagChanged || _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isBackendChanged) {\n            await (0,_util__WEBPACK_IMPORTED_MODULE_11__.setBackendAndEnvFlags)(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.flags, _params__WEBPACK_IMPORTED_MODULE_9__.STATE.backend);\n        }\n        try {\n            detector = await createDetector(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.model);\n        } catch (error) {\n            detector = null;\n            alert(error);\n        }\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isFlagChanged = false;\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isBackendChanged = false;\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isModelChanged = false;\n    }\n}\nfunction beginEstimatePosesStats() {\n    startInferenceTime = (performance || Date).now();\n}\nfunction endEstimatePosesStats() {\n    const endInferenceTime = (performance || Date).now();\n    inferenceTimeSum += endInferenceTime - startInferenceTime;\n    ++numInferences;\n    const panelUpdateMilliseconds = 1000;\n    if (endInferenceTime - lastPanelUpdate >= panelUpdateMilliseconds) {\n        const averageInferenceTime = inferenceTimeSum / numInferences;\n        inferenceTimeSum = 0;\n        numInferences = 0;\n        stats.customFpsPanel.update(1000.0 / averageInferenceTime, 120 /* maxValue */ );\n        lastPanelUpdate = endInferenceTime;\n    }\n}\nasync function renderResult() {\n    if (camera.video.readyState < 2) {\n        await new Promise((resolve)=>{\n            camera.video.onloadeddata = ()=>{\n                resolve(video);\n            };\n        });\n    }\n    let poses = null;\n    let canvasInfo = null;\n    // Detector can be null if initialization failed (for example when loading\n    // from a URL that does not exist).\n    if (detector != null) {\n        // FPS only counts the time it takes to finish estimatePoses.\n        beginEstimatePosesStats();\n        if (useGpuRenderer && _params__WEBPACK_IMPORTED_MODULE_9__.STATE.model !== \"PoseNet\") {\n            throw new Error(\"Only PoseNet supports GPU renderer!\");\n        }\n        // Detectors can throw errors, for example when using custom URLs that\n        // contain a model that doesn't provide the expected output.\n        try {\n            if (useGpuRenderer) {\n                const [posesTemp, canvasInfoTemp] = await detector.estimatePosesGPU(camera.video, {\n                    maxPoses: _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.maxPoses,\n                    flipHorizontal: false\n                }, true);\n                poses = posesTemp;\n                canvasInfo = canvasInfoTemp;\n            } else {\n                poses = await detector.estimatePoses(camera.video, {\n                    maxPoses: _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.maxPoses,\n                    flipHorizontal: false\n                });\n            }\n        } catch (error) {\n            detector.dispose();\n            detector = null;\n            alert(error);\n        }\n        endEstimatePosesStats();\n    }\n    const rendererParams = useGpuRenderer ? [\n        camera.video,\n        poses,\n        canvasInfo,\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.modelConfig.scoreThreshold\n    ] : [\n        camera.video,\n        poses,\n        _params__WEBPACK_IMPORTED_MODULE_9__.STATE.isModelChanged\n    ];\n    renderer.draw(rendererParams);\n}\nasync function renderPrediction() {\n    await checkGuiUpdate();\n    if (!_params__WEBPACK_IMPORTED_MODULE_9__.STATE.isModelChanged) {\n        await renderResult();\n    }\n    rafId = requestAnimationFrame(renderPrediction);\n}\n;\nasync function app() {\n    // Gui content will change depending on which model is in the query string.\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.STATE.model = _tensorflow_models_pose_detection__WEBPACK_IMPORTED_MODULE_4__.SupportedModels.BlazePose;\n    const backends = urlParams.MODEL_BACKEND_MAP[urlParams.STATE.model];\n    urlParams.STATE.backend = backends[0]; // Default to the first backend, adjust as necessary\n    stats = (0,_stats_panel__WEBPACK_IMPORTED_MODULE_10__.setupStats)();\n    const isWebGPU = _params__WEBPACK_IMPORTED_MODULE_9__.STATE.backend === \"tfjs-webgpu\";\n    const importVideo = urlParams.get(\"importVideo\") === \"true\" && isWebGPU;\n    camera = await _camera__WEBPACK_IMPORTED_MODULE_5__.Camera.setup(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.camera);\n    await (0,_util__WEBPACK_IMPORTED_MODULE_11__.setBackendAndEnvFlags)(_params__WEBPACK_IMPORTED_MODULE_9__.STATE.flags, _params__WEBPACK_IMPORTED_MODULE_9__.STATE.backend);\n    await _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_3__.ready();\n    detector = await createDetector();\n    const canvas = document.getElementById(\"output\");\n    canvas.width = camera.video.width;\n    canvas.height = camera.video.height;\n    useGpuRenderer = urlParams.get(\"gpuRenderer\") === \"true\" && isWebGPU;\n    if (useGpuRenderer) {\n        renderer = new _renderer_webgpu__WEBPACK_IMPORTED_MODULE_6__.RendererWebGPU(canvas, importVideo);\n    } else {\n        renderer = new _renderer_canvas2d__WEBPACK_IMPORTED_MODULE_7__.RendererCanvas2d(canvas);\n    }\n    renderPrediction();\n}\n;\napp();\nif (useGpuRenderer) {\n    renderer.dispose();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/pose_detection/index.js\n"));

/***/ })

});